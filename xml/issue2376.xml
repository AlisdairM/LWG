<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2376" status="C++17">
<title><tt>bad_weak_ptr::what()</tt> overspecified</title>
<section><sref ref="[util.smartptr.weak.bad]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>27 Mar 2014</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[util.smartptr.weakptr]"/> p2 requires <tt>bad_weak_ptr</tt> to return precisely
the string <tt>"bad_weak_ptr"</tt>.
<p/>
There was general agreement on the reflector and at the Issaquah
meeting that this is over-constrained and implementation should be
free to return something more descriptive if desired.
<p/>
The proposed resolution makes <tt>bad_weak_ptr</tt> consistent with other
exception types such as <tt>bad_alloc</tt> and <tt>bad_cast</tt>.
<p/>
If accepted, the P/R for issue <iref ref="2233"/>, which currently uses similar
wording to <tt>bad_weak_ptr</tt>, could be updated appropriately.
</p>

<note>2014-03-27 Library reflector vote</note>
<p>
The issue has been identified as Tentatively Ready based on six votes in favour.
</p>

</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Edit <sref ref="[util.smartptr.weakptr]"/>:</p>

<blockquote>
<pre>
bad_weak_ptr() noexcept;
</pre><blockquote>
<p>
-2- <i>Postconditions</i>: <tt>what()</tt> returns <del><tt>"bad_weak_ptr"</tt></del><ins>an implementation-defined NTBS</ins>.
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
