<?xml version='1.0' encoding='utf-8' standalone='no'?>
    <!DOCTYPE issue SYSTEM "lwg-issue.dtd">
    
<issue num="423" status="Open">
<title>Effects of negative <tt>streamsize</tt> in iostreams</title>
<section><sref ref="[input.output]"/></section>
<submitter>Martin Sebor</submitter>
<date>18 Sep 2003</date>

<discussion>
<p>
A third party test suite tries to exercise <tt>istream::ignore(N)</tt> with
a negative value of <tt>N</tt> and expects that the implementation will treat
<tt>N</tt> as if it were <tt>0</tt>. Our implementation asserts that (<tt>N &gt;= 0</tt>) holds and
aborts the test.
</p>

<p>
I can't find anything in section 27 that prohibits such values but I don't
see what the effects of such calls should be, either (this applies to
a number of unformatted input functions as well as some member functions
of the <tt>basic_streambuf</tt> template).
</p>

<note>
2009-07 Frankfurt
</note>

<blockquote>
<p>
This is related to LWG <iref ref="255"/>.
</p>
<p>
Move to NAD Future.
</p>
</blockquote>

<note>LEWG Kona 2017</note>
<p>Recommend Open: We agree that we should require <tt>N &gt;= 0</tt> for the selected functions</p>
</discussion>

<resolution>
<p>
I propose that we add to each function in clause 27 that takes an argument,
say <tt>N</tt>, of type <tt>streamsize</tt> a Requires clause saying that "<tt>N &gt;= 0</tt>." The intent
is to allow negative streamsize values in calls to <tt>precision()</tt> and <tt>width()</tt>
but disallow it in calls to <tt>streambuf::sgetn()</tt>, <tt>istream::ignore()</tt>, or
<tt>ostream::write()</tt>.
</p>

<note>Kona: The LWG agreed that this is probably what we want.  However, we
  need a review to find all places where functions in clause 27 take
  arguments of type <tt>streamsize</tt> that shouldn't be allowed to go
  negative.  Martin will do that review.</note>

</resolution>
</issue>
