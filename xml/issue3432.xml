<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3432" status="Ready">
<title>Missing requirement for <tt>comparison_category</tt></title>
<section><sref ref="[string.view.comparison]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>19 Apr 2020</date>
<priority>0</priority>

<discussion>
<p>
It's not clear what happens if a program-defined character traits type
defines <tt>comparison_category</tt> as a synonym for <tt>void</tt>,
or some other bogus type.
</p>
<p>
Discussion on the LWG reflector settled on making it ill-formed at the
point of use.
</p>

<note>2020-07-17; Moved to Ready in telecon</note>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4861">N4861</a>.
</p>

<ol>
<li><p>Modify <sref ref="[string.view.comparison]"/> by adding a new paragraph after p3:</p>

<blockquote class="note">
<p>
As result of reflector discussion we decided to make a drive-by fix in p3 below.
</p>
</blockquote>

<blockquote>
<pre>
template&lt;class charT, class traits&gt;
  constexpr <i>see below</i> operator&lt;=&gt;(basic_string_view&lt;charT, traits&gt; lhs,
                                  basic_string_view&lt;charT, traits&gt; rhs) noexcept;
</pre>
<blockquote>
<p>-3- Let <tt>R</tt> denote the type <tt>traits::comparison_category</tt> if <ins>that <i>qualified-id</i>
is valid and denotes a type (<sref ref="[temp.deduct]"/>)</ins><del>it exists</del>, otherwise <tt>R</tt> 
is <tt>weak_ordering</tt>.</p>

<p><ins>-?- <i>Mandates:</i> <tt>R</tt> denotes a comparison category type (<sref ref="[cmp.categories]"/>).</ins></p>

<p>-4- <i>Returns:</i> <tt>static_cast&lt;R&gt;(lhs.compare(rhs) &lt;=&gt; 0)</tt>.</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>
</issue>
