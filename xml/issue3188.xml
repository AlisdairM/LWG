<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3188" status="New">
<title><tt>istreambuf_iterator::pointer</tt> should not be <i>unspecified</i></title>
<section><sref ref="[istreambuf.iterator]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>21 Feb 2019</date>
<priority>99</priority>

<discussion>
<p>
The current working paper requires <tt>iterator_traits&lt;Iter&gt;::pointer</tt> to be <tt>void</tt> if <tt>Iter</tt> 
doesn't define <tt>operator-&gt;</tt> (<sref ref="[iterator.traits]"/>). We recently removed <tt>operator-&gt;</tt> 
from <tt>istreambuf_iterator</tt> via LWG <iref ref="2790"/>, therefore either its <tt>pointer</tt> member should be 
<tt>void</tt>, or there should be a partial specialization of <tt>iterator_traits</tt>. Do we want to change 
<i>unspecified</i> to <tt>void</tt> in the class synopsis in [istreambuf.iterator]?
</p>

<note>2019-03-03, Daniel provides concrete wording</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4800">N4800</a>.</p>

<ol>
<li><p>Change class template <tt>istreambuf_iterator</tt> synopsis, <sref ref="[istreambuf.iterator]"/>, as indicated:</p>

<blockquote>
<pre>
template&lt;class charT, class traits = char_traits&lt;charT&gt;&gt;
class istreambuf_iterator {
public:
  using iterator_category = input_iterator_tag;
  using value_type        = charT;
  using difference_type   = typename traits::off_type;
  using pointer           = <ins>void</ins><del><i>unspecified</i></del>;
  using reference         = charT;
  [&hellip;]
};
</pre>
</blockquote>
</li>
</ol>
</resolution>
</issue>
