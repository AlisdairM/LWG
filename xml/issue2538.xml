<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2538" status="NAD">
<title>[parallel.ts] Requirements on data race behavior of iterators and swap should be clarified</title>
<section><sref ref="[parallel.alg.general.exec]"/></section>
<submitter>Robert Geva</submitter>
<date>22 Sep 2015</date>
<priority>99</priority>

<discussion>
<p><b>Addresses: parallel.ts</b></p>
<p>
Parallel algorithms as of <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4352.html">N4352</a> in general 
need to assume that iterator operations and <tt>swap</tt> have the expected data race behavior.  
For example, <tt>sort</tt> would not work if the exchange operation were thread-unsafe and, for example, always updated a single 
unprotected global counter, independent of the objects being swapped. A parallel <tt>sort</tt> has to be able to assume that disjoint 
pairs of objects can be swapped concurrently, i.e. that elemental functions have the same sort of thread-safety behavior that 
we generally promise for the standard library versions. I don't see that assumption stated anywhere.
<p/>
We should then probably also be clearer that the <sref ref="[parallel.alg.general.exec]"/> ordering rules are further 
constrained by algorithm correctness requirements, and by the requirement not to introduce data races when elemental functions 
satisfy their thread-safety expectations. 
<p/>
It's tempting to generally add basic thread-safety requirements to various library requirements clauses. But that adds backwards 
compatibility issues for single-threaded code.
<p/>
Most probably this applies to other operations as well. We do state in [parallel.alg.general.user]:
</p>
<blockquote class="note"><p>
Function objects passed into parallel algorithms as objects of type <tt>BinaryPredicate</tt>, <tt>Compare</tt>, and 
<tt>BinaryOperation</tt> shall not directly or indirectly modify objects via their arguments.
</p></blockquote>
<p>
But that only seems to cover the easy cases.
</p>
</discussion>

<resolution>
</resolution>

</issue>
