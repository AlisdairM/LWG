<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2537" status="WP">
<title>Constructors for <code>priority_queue</code> taking allocators should call <code>make_heap</code></title>
<section><sref ref="[priqueue.cons.alloc]"/></section>
<submitter>Eric Schmidt</submitter>
<date>19 Sep 2015</date>
<priority>0</priority>

<discussion>
<p>
<code>priority_queue</code> constructors taking both <code>Container</code> and <code>Alloc</code> arguments should 
finish by calling <code>make_heap</code>, just as with the constructors that do not have allocator parameters.
<p/>
The current reading of <sref ref="[priqueue.cons.alloc]"/>, if followed strictly, would effectively require calling 
code to ensure that the container argument is already a heap, which is probably not what was intended.
</p>

<note>2015-10, Kona issue prioritization</note>
<p>Priority 0, move to Ready</p>
</discussion>

<resolution>
<p>This wording is relative to N4527.</p>

<ol>
<li><p>Change <sref ref="[priqueue.cons.alloc]"/> as indicated:</p>
<blockquote>
<pre>
template &lt;class Alloc&gt;
priority_queue(const Compare&amp; compare, const Container&amp; cont, const Alloc&amp; a);
</pre>
<blockquote>
<p>
-4- <i>Effects</i>: Initializes <tt>c</tt> with <tt>cont</tt> as the first argument and <tt>a</tt> as the second 
argument, and initializes <tt>comp</tt> with <tt>compare</tt><ins>; calls <code>make_heap(c.begin(), c.end(), comp)</code></ins>.
</p>
</blockquote>
<pre>
template &lt;class Alloc&gt;
priority_queue(const Compare&amp; compare, Container&amp;&amp; cont, const Alloc&amp; a);
</pre>
<blockquote>
<p>
-5- <i>Effects</i>: Initializes <tt>c</tt> with <tt>std::move(cont)</tt> as the first argument and <tt>a</tt> as the second 
argument, and initializes <tt>comp</tt> with <tt>compare</tt><ins>; calls <code>make_heap(c.begin(), c.end(), comp)</code></ins>.
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
