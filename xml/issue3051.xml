<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3051" status="New">
<title>Floating point classifications were inadvertently changed in P0175</title>
<section><sref ref="[cmath.syn]"/></section>
<submitter>Thomas K&ouml;ppe</submitter>
<date>23 Jan 2018</date>
<priority>99</priority>

<discussion>
<p>
The paper <a href="http://wg21.link/p0175">P0175</a> was meant to be a purely editorial change to 
spell out the synopses of the "C library" headers. However it contained the following inadvertent 
normative change: The floating point classification functions <tt>isinf</tt>, <tt>isfinite</tt>, 
<tt>signbit</tt>, etc. (but not <tt>fpclassify</tt>) used to be specified to return "<tt>bool</tt>" 
in C++14. In C, those are macros, but in C++ they have always been functions. During the preparation 
of P0175, I recreated the function signatures copying the return type "<tt>int</tt>" from C, but 
failed to notice that we had already specified those functions differently, so the return type was 
changed to "<tt>int</tt>".
<p/>
To restore the intended specification, we should change the return types of all the <tt>is...</tt> 
and <tt>signbit</tt> classification functions back to <tt>bool</tt>. Alternatively, we could decide 
that the return type should actually be <tt>int</tt>, but that would be a larger discussion.
<p/>
Proposed resolution for restoring the original wording: Replace return type "<tt>int</tt>" with 
return type "<tt>bool</tt>" and for all the classification/comparison functions after 
"<i>// classification/comparison functions</i>" in [cmath.syn] <em>except</em> the <tt>fpclassify</tt> 
functions.
<p/>
Related previous issue was LWG <iref ref="1327"/> and the corresponding 
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3141.pdf#page=188">NB comment US-136</a> 
resolution.
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4713">N4713</a>.</p>

<ol>
<li><p>Modify <sref ref="[time.duration.cons]"/> as indicated:</p>

<blockquote>
<pre>
[&hellip;]
namespace std {
  [&hellip;]
  <i>// <sref ref="[c.math.fpclass]"/>, classification / comparison functions</i>
  int fpclassify(float x);
  int fpclassify(double x);
  int fpclassify(long double x);
  <ins>bool</ins><del>int</del> isfinite(float x);
  <ins>bool</ins><del>int</del> isfinite(double x);
  <ins>bool</ins><del>int</del> isfinite(long double x);
  <ins>bool</ins><del>int</del> isinf(float x);
  <ins>bool</ins><del>int</del> isinf(double x);
  <ins>bool</ins><del>int</del> isinf(long double x);
  <ins>bool</ins><del>int</del> isnan(float x);
  <ins>bool</ins><del>int</del> isnan(double x);
  <ins>bool</ins><del>int</del> isnan(long double x);
  <ins>bool</ins><del>int</del> isnormal(float x);
  <ins>bool</ins><del>int</del> isnormal(double x);
  <ins>bool</ins><del>int</del> isnormal(long double x);
  <ins>bool</ins><del>int</del> signbit(float x);
  <ins>bool</ins><del>int</del> signbit(double x);
  <ins>bool</ins><del>int</del> signbit(long double x);
  <ins>bool</ins><del>int</del> isgreater(float x, float y);
  <ins>bool</ins><del>int</del> isgreater(double x, double y);
  <ins>bool</ins><del>int</del> isgreater(long double x, long double y);
  <ins>bool</ins><del>int</del> isgreaterequal(float x, float y);
  <ins>bool</ins><del>int</del> isgreaterequal(double x, double y);
  <ins>bool</ins><del>int</del> isgreaterequal(long double x, long double y);
  <ins>bool</ins><del>int</del> isless(float x, float y);
  <ins>bool</ins><del>int</del> isless(double x, double y);
  <ins>bool</ins><del>int</del> isless(long double x, long double y);
  <ins>bool</ins><del>int</del> islessequal(float x, float y);
  <ins>bool</ins><del>int</del> islessequal(double x, double y);
  <ins>bool</ins><del>int</del> islessequal(long double x, long double y);
  <ins>bool</ins><del>int</del> islessgreater(float x, float y);
  <ins>bool</ins><del>int</del> islessgreater(double x, double y);
  <ins>bool</ins><del>int</del> islessgreater(long double x, long double y);
  <ins>bool</ins><del>int</del> isunordered(float x, float y);
  <ins>bool</ins><del>int</del> isunordered(double x, double y);
  <ins>bool</ins><del>int</del> isunordered(long double x, long double y);
  [&hellip;]
}
</pre>
</blockquote>
</li>
</ol>
</resolution>

</issue>