<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3457" status="New">
<title><tt>*this</tt> is not invalidated</title>
<section><sref ref="[string.view.template]"/></section>
<submitter>Johel Ernesto Guerrero Pe&ntilde;a</submitter>
<date>26 Jun 2020</date>
<priority>3</priority>

<discussion>
<p>
<sref ref="[string.view.template]"/> states:
</p>
<blockquote><p>
For a <tt>basic_string_view str</tt>, any operation that invalidates a pointer in the range <tt>[str.data(), 
str.data() + str.size())</tt> invalidates pointers, iterators, and references returned from <tt>str</tt>'s member functions.
</p></blockquote>
<p>
The assignment operators return a reference to <tt>*this</tt>, but <tt>*this</tt> is not invalidated.
</p>

<p><strong>Previous resolution [SUPERSEDED]:</strong></p>
<blockquote class="note">
<p>
This wording is relative to <a href="http://wg21.link/n4861">N4861</a>. 
</p>

<ol>
<li><p>Modify <sref ref="[string.view.template]"/> as indicated:</p>

<blockquote>
<p>
-2- For a <tt>basic_string_view str</tt>, any operation that invalidates a pointer in the range <tt>[str.data(),
str.data() + str.size())</tt> invalidates pointers, iterators, and references <ins>to the elements in that range 
and its past-the-end iterator</ins> returned from <tt>str</tt>'s member functions.
</p>
</blockquote>
</li>
</ol>
</blockquote>

<note>2020-06-29; Casey comments and provides alternative proposed wording</note>
<p>
I think we should additionally strike "returned from <tt>str</tt>'s member functions" from the end of the sentence. 
Provenance shouldn't affect invalidation; <tt>ranges::next(some_string_view.begin(), 42)</tt>, for example, 
returns an iterator that denotes an element of <tt><i>some_</i>string_view</tt>, but is not a member function 
of <tt>basic_string_view</tt>.
</p>

<note>2020-07-05; Reflector prioritization</note>
<p>
Set priority to 3 after reflector discussions.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4861">N4861</a>. 
</p>

<ol>
<li><p>Modify <sref ref="[string.view.template]"/> as indicated:</p>

<blockquote>
<p>
-2- For a <tt>basic_string_view str</tt>, any operation that invalidates a pointer in the range <tt>[str.data(),
str.data() + str.size())</tt> invalidates pointers, iterators, and references <ins>to the elements in that range 
and its past-the-end iterator</ins><del>returned from <tt>str</tt>'s member functions</del>.
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
