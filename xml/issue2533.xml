<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2533" status="New">
<title>[concurr.ts] Constrain threads were <tt>future::then</tt> can run a continuation</title>
<section><sref ref="[futures.unique_future]"/></section>
<submitter>Agust&iacute;n K-ballo Berg&eacute;</submitter>
<date>3 Sep 2015</date>
<priority>99</priority>

<discussion>
<p><b>Addresses: concurr.ts</b></p>
<p>
In <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4538.pdf">N4538</a>, the continuation given to 
<tt>future::then</tt> can be run "on an unspecified thread of execution". This is too broad, as it allows the 
continuation to be run on the main thread, a UI thread, or any other thread. In comparison, functions given to 
<tt>async</tt> run "as if in a new thread of execution", while the Parallelism TS gives less guarantees by running 
"in either the invoking thread or in a thread implicitly created by the library to support parallel algorithm execution". 
The threads on which the continuation given to <tt>future::then</tt> can run should be similarly constrained.
</p>
</discussion>

<resolution>
</resolution>

</issue>
