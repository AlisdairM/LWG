<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3381" status="New">
<title><tt>begin</tt> and <tt>data</tt> must agree for <tt>contiguous_range</tt></title>
<section><sref ref="[range.refinements]"/></section>
<submitter>Casey Carter</submitter>
<date>25 Jan 2020</date>
<priority>99</priority>

<discussion>
<p>
The definition of the <tt>contiguous_range</tt> concept in <sref ref="[range.refinements]"/>/2 
requires that <tt>ranges::data(r)</tt> be valid for a <tt>contiguous_range r</tt>, but fails to 
impose the obvious semantic requirement that <tt>to_address(ranges::begin(r)) == ranges::data(r)</tt>. 
In other words, <tt>data</tt> and <tt>begin</tt> must agree so that <tt>[begin(r), end(r))</tt> and 
the counted range <tt>data(r) + [0, size(r))</tt> (this is the new "counted range" specification 
syntax per <a href="https://github.com/cplusplus/draft/issues/2932">working draft issue 2932</a>) denote 
the same sequence of elements.
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4849">N4849</a>.</p>

<ol>
<li><p>Modify <sref ref="[range.refinements]"/> as indicated:</p>

<blockquote>
<p>
-2- <tt>contiguous_range</tt> additionally requires that the <tt>ranges::data</tt> customization point 
(<sref ref="[range.prim.data]"/>) is usable with the range.
</p>
<pre>
template&lt;class T&gt;
  concept contiguous_range =
    random_access_range&lt;T&gt; &amp;&amp; contiguous_iterator&lt;iterator_t&lt;T&gt;&gt; &amp;&amp;
    requires(T&amp; t) {
      { ranges::data(t) } -&gt; same_as&lt;add_pointer_t&lt;range_reference_t&lt;T&gt;&gt;&gt;;
    };
</pre>
<p>
<ins>-?- Given an expression <tt>t</tt> such that <tt>decltype((t))</tt> is <tt>T&amp;</tt>, <tt>T</tt> 
models <tt>contiguous_range</tt> only if <tt>to_address(ranges::begin(t)) == ranges::data(t))</tt>.</ins>
<p/>
-3- The <tt>common_range</tt> concept [&hellip;]
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
