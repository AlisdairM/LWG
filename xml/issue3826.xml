<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3826" status="New">
<title>Redundant specification [for overload of <tt>yield_value</tt>]</title>
<section><sref ref="[coro.generator.promise]"/></section>
<submitter>US</submitter>
<date>10 Nov 2022</date>
<priority>99</priority>

<discussion>
<p>
This is in resolution of <b><a href="https://github.com/cplusplus/nbballot/issues/531">US 56-118</a></b>
(<sref ref="[coro.generator.promise]"/> Redundant specification).
</p>
<p>
[Paragraph 14] is redundant given [paragraphs] 13 and 12. Remove it.
</p>
<p>
Paragraphs 12 and 14 are identical: "<i>Remarks</i>: A <i>yield-expression</i> that calls this
function has type <tt>void</tt> (<sref ref="[expr.yield]"/>)." Paragraph 13 states that the overload
of <tt>yield_value</tt> that accepts <tt>ranges::elements_of</tt> for arbitrary ranges has
"<i>Effects</i>: Equivalent to:" calling the overload of <tt>yield_value</tt> that accepts
specializations of <tt>generator</tt>, which paragraph 12 specifies. Per
<sref ref="[structure.specifications]"/> paragraph 4, the former overload "inherits" the
<i>Remarks</i> of paragraph 12 making paragraph 14 redundant.
</p>
<p>
LWG is concerned that the redundancy is not immediately obvious &mdash; it depends on an understanding of
how await expressions function &mdash; so we'd like to preserve comment despite that we agree that it is
normatively redundant.
</p>

<note>2022-11-10 Casey provides wording</note>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4917"/>.
</p>

<ol>

<li><p>Modify <sref ref="[coro.generator.promise]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;ranges::input_range R, class Alloc&gt;
  requires convertible_to&lt;ranges::range_reference_t&lt;R&gt;, yielded&gt;
    auto yield_value(ranges::elements_of&lt;R, Alloc&gt; r) noexcept;
</pre>
<blockquote>
<p>
-13- <i>Effects</i>: Equivalent to: [&hellip;]
</p>
<p>
-14- <del><i>Remarks</i>:</del> <ins>[Note 1:</ins> A <i>yield-expression</i> that calls this function has type <tt>void</tt>
(<sref ref="[expr.yield]"/>).<ins>&mdash;end note]</ins>
</p>
</blockquote>
</blockquote>

</li>
</ol>
</resolution>

</issue>
