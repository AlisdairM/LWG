<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2129" status="WP">
<title>User specializations of <tt>std::initializer_list</tt></title>
<section><sref ref="[namespace.std]"/> <sref ref="[support.initlist]"/></section>
<submitter>Richard Smith</submitter>
<date>18 Jan 2012</date>
<priority>3</priority>

<discussion>

<p>
Since the implementation is intended to magically synthesize instances of <tt>std::initializer_list</tt> 
(rather than by a constructor call, for instance), user specializations of this type can't generally be 
made to work. I can't find any wording which makes such specializations ill-formed, though, which leads 
me to suspect that they're technically legal under the provisions of <sref ref="[namespace.std]"/> p1.
</p>

<note>2012, Kona</note>
<p>
This sounds correct, but we need wording for a resolution.
</p>
<p>
Marshall Clow volunteers to produce wording.
</p>

<note>2014-02-19, Jonathan Wakely provides proposed wording</note>

<note>2014-03-27, Library reflector vote</note>
<p>
The issue has been identified as Tentatively Ready based on six votes in favour.
</p>

</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Add new new paragraph below <sref ref="[support.initlist]"/> p2:</p>

<blockquote>
<p>
-2- An object of type <tt>initializer_list&lt;E&gt;</tt> provides access to an array of objects of type <tt>const E</tt>. [&hellip;]
<p/>
<ins>-?- If an explicit specialization or partial specialization of <tt>initializer_list</tt> is declared, the program is ill-formed.</ins>
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
