<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2600" status="LEWG">
<title><tt>ios_base</tt> must store inaccessible iostate flags</title>
<section><sref ref="[ios.base.storage]"/></section>
<submitter>David Krauss</submitter>
<date>14 Mar 2016</date>
<priority>99</priority>

<discussion>
<p>
DR <iref ref="41"/>, "Ios_base needs <tt>clear()</tt>, <tt>exceptions()</tt>" stopped short of providing the interface 
suggested in its title, but it did require the underlying state to be stored in <tt>ios_base</tt>. Because <tt>rdstate()</tt> 
is also missing, <tt>ios_base</tt> manipulators relying on <tt>iword</tt> and <tt>pword</tt> cannot detect failure. 
The only safe alternative is to manipulate a derived class, which must be a template.
<p/>
libc++ already provides the interface as a nonconforming extension. libstdc++ implements the internal state but leaves 
it frustratingly inaccessible, as specified. Any conforming implementation should be able to provide the interface 
without ABI problems.
</p>

<note>2016-04, Issues Telecon</note>
<p>
This is really a request for an (feature) API. Passing to LEWG.
</p>
</discussion>

<resolution>
</resolution>

</issue>
