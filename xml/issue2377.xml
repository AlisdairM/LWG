<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2377" status="Pending WP">
<title><tt>std::align</tt> requirements overly strict</title>
<section><sref ref="[ptr.align]"/></section>
<submitter>Peter Dimov</submitter>
<date>30 Mar 2014</date>
<priority>0</priority>

<discussion>
<p>
<tt>std::align</tt> requires that its <tt>alignment</tt> argument shall be "a fundamental alignment value or an 
extended alignment value supported by the implementation in this context".
<p/>
This requirement is overly strict. There are use cases that require a buffer aligned at values that are not tied 
to the C++ implementation, such as page size, cache line size, sector size. These come from the hardware or the 
OS and are generally not known until run time. The implementation of <tt>std::align</tt> does not depend on the 
requirement that <tt>alignment</tt> be a fundamental or an extended alignment value; any power of two would be handled 
the same way.
<p/>
In addition, it is not possible for the user to even determine whether a value is "a fundamental alignment value 
or an extended alignment value supported by the implementation in this context". One would expect values coming 
from <tt>alignof</tt> to be fine, but I'm not sure whether even that is guaranteed in the presence of <tt>alignas</tt>.
<p/>
Therefore, I propose that
</p>
<blockquote><p>
<i>Requires</i>:
</p>
<ul>
<li><p><tt>alignment</tt> shall be a fundamental alignment value or an extended alignment value supported by
the implementation in this context</p></li>
</ul>
</blockquote>
<p>
be changed to
</p>
<blockquote><p>
<i>Requires</i>:
</p>
<ul>
<li><p><tt>alignment</tt> shall be a power of two</p></li>
</ul>
</blockquote>

<note>2014-06-16 Rapperswil</note>
<p>
Move to Ready
</p>

</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Edit <sref ref="[ptr.align]"/> p2 as indicated:</p>

<blockquote>
<pre>
void* align(std::size_t alignment, std::size_t size,
  void*&amp; ptr, std::size_t&amp; space);
</pre><blockquote>
<p>
-1- [&hellip;]
<p/>
-2- <i>Requires</i>:
</p>
<ul>
<li><p>
<tt>alignment</tt> shall be a <del>fundamental alignment value or an extended alignment value supported by
the implementation in this context</del><ins>power of two</ins>
</p></li>
</ul>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
