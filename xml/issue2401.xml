<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2401" status="Pending WP">
<title><tt>std::function</tt> needs more <tt>noexcept</tt></title>
<section><sref ref="[func.wrap.func]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>14 Jun 2014</date>
<priority>0</priority>

<discussion>
<p>
There are two issues here:
</p>
<ol>
<li><p><tt>std::function</tt>'s constructor from <tt>nullptr_t</tt> is marked as <tt>noexcept</tt>, but its assignment operator 
from <tt>nullptr_t</tt> isn't. This assignment can and should be marked as <tt>noexcept</tt>.</p></li>
<li><p><tt>std::function</tt>'s comparisons with <tt>nullptr_t</tt> are marked as <tt>noexcept</tt> in two out of three places.</p></li>
</ol>

<note>2014-06-16 Rapperswil</note>
<p>
Move to Ready
</p>

</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Change <sref ref="[function.objects]"/> p2, header <tt>&lt;functional&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std {
  [&hellip;]
  <i>// 20.9.11 polymorphic function wrappers:</i>
  [&hellip;]
  template&lt;class R, class... ArgTypes&gt;
  bool operator==(const function&lt;R(ArgTypes...)&gt;&amp;, nullptr_t) <ins>noexcept</ins>;
  template&lt;class R, class... ArgTypes&gt;
  bool operator==(nullptr_t, const function&lt;R(ArgTypes...)&gt;&amp;) <ins>noexcept</ins>;
  template&lt;class R, class... ArgTypes&gt;
  bool operator!=(const function&lt;R(ArgTypes...)&gt;&amp;, nullptr_t) <ins>noexcept</ins>;
  template&lt;class R, class... ArgTypes&gt;
  bool operator!=(nullptr_t, const function&lt;R(ArgTypes...)&gt;&amp;) <ins>noexcept</ins>;
  [&hellip;]
}
</pre>
</blockquote>
</li>

<li><p>Change <sref ref="[func.wrap.func]"/>, class template <tt>function</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
[&hellip;]
<i>// 20.9.11.2.1, construct/copy/destroy:</i>
[&hellip;]
function&amp; operator=(nullptr_t) <ins>noexcept</ins>;
[&hellip;]
</pre>
</blockquote>
</li>

<li><p>Change <sref ref="[func.wrap.func.con]"/> before p16 as indicated:</p>

<blockquote>
<pre>
function&amp; operator=(nullptr_t) <ins>noexcept</ins>;
</pre>
</blockquote>
</li>
</ol>
</resolution>

</issue>
