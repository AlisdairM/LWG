<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3334" status="Immediate">
<title><tt>basic_osyncstream</tt> move assignment and destruction calls <tt>basic_syncbuf::emit()</tt> twice</title>
<section><sref ref="[syncstream.osyncstream]"/></section>
<submitter>Tim Song</submitter>
<date>06 Nov 2019</date>
<priority>3</priority>

<discussion>
<p>
These functions are specified to call <tt>emit()</tt>, which calls <tt>emit()</tt> on
the <tt>basic_syncbuf</tt> and sets <tt>badbit</tt> if it fails. Then, the move
assignment is specified to move-assign the <tt>basic_syncbuf</tt>, while the destructor
implicitly needs to destroy the <tt>basic_syncbuf</tt> data member. This calls <tt>emit()</tt>
on the <tt>basic_syncbuf</tt> again.
<p/>
Is this intended?
</p>
<note>2020-02-13 Tim adds wording after discussion with Peter</note>
<note>2020-02 Status to Immediate Thursday afternoon in Prague.</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/N4849">N4849</a>.</p>
<blockquote class="note">
<p>
[<i>Drafting note:</i> There is no need to explicitly call <tt>emit</tt> at all in these functions;
memberwise move-assignment/destruction is sufficient, so we can strike the specification
entirely and rely on the wording in <sref ref="[functions.within.classes]"/>. <i>&mdash; end drafting note</i>]
</p>
</blockquote>
<ol>
<li>
<p>Edit <sref ref="[syncstream.osyncstream.cons]"/> as indicated:</p>
<blockquote>
<pre>
<del>~basic_osyncstream();</del>
</pre>
<blockquote>
<p><del>-6- <i>Effects:</i> Calls <tt>emit()</tt>. If an exception is thrown
from <tt>emit()</tt>, that exception is caught and ignored.</del></p>
</blockquote>
</blockquote>
</li>
<li>
<p>Strike <sref ref="[syncstream.osyncstream.assign]"/>:</p>
<blockquote>
<pre>
<del>basic_osyncstream&amp; operator=(basic_osyncstream&amp;&amp; rhs) noexcept;</del>
</pre>
<blockquote>
<p><del>-1- <i>Effects:</i> First, calls <tt>emit()</tt>.
If an exception is thrown from <tt>emit()</tt>, that exception is caught and ignored.
Move assigns <tt>sb</tt> from <tt>rhs.sb</tt>. [ <i>Note:</i> This disassociates <tt>rhs</tt>
from its wrapped stream buffer ensuring destruction of <tt>rhs</tt> produces no output. — <i>end note</i> ]</del>
<p/>
<del>-2- <i>Postconditions:</i> <tt>nullptr == rhs.get_­wrapped()</tt> is <tt>true</tt>.
<tt>get_­wrapped()</tt> returns the value previously returned by <tt>rhs.get_­wrapped()</tt>.
</del>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>
</issue>
