<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2233" status="C++17">
<title><tt>bad_function_call::what()</tt> unhelpful</title>
<section><sref ref="[func.wrap.badcall]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>5 Jan 2013</date>
<priority>3</priority>

<discussion>
<p>
A strict reading of the standard implies <tt>std::bad_function_call{}.what()</tt> returns the same string as
<tt>std::exception{}.what()</tt> which doesn't help to know what happened if you catch an exception by reference 
to <tt>std::exception</tt>.
</p>

<p>
For consistency with <tt>bad_weak_ptr::what()</tt> it should return <tt>"bad_function_call"</tt>.
</p>

<p>
See <a href="http://accu.org/cgi-bin/wg21/message?wg=lib&amp;msg=33515">c++std-lib-33515</a> for other details.
</p>

<p>
There was a considerable support on the reflector to instead change the specification of both <tt>bad_weak_ptr::what()</tt> 
and <tt>bad_function_call::what()</tt> to return an implementation-defined string instead.
</p>

<note>2013-03-15 Issues Teleconference</note>
<p>
Moved to Open.
</p>
<p>
Consensus that we want consistency in how this is treated.  Less consensus on what the common
direction should be.
</p>
<p>
Alisdair to provide wording proposing that all string literals held by standard exception objects are
either unspecified, or implmentation defined.
</p>

<note>2014-02-15 Issauqah</note>
<p>
STL: I think it should be an implementation-defined NTBS, same on <tt>bad_weak_ptr</tt>. I will write a PR.
</p>

<note>2014-03-27, STL provides improved wording</note>

<p>
The new wording reflects better the general agreement of the committee, see also issue <iref ref="2376"/> for similar wording.
</p>

<note>2014-03-28 Library reflector vote</note>
<p>
The issue has been identified as Tentatively Ready based on five votes in favour.
</p>

</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Edit <sref ref="[func.wrap.badcall.const]"/>:</p>
<blockquote><pre>
bad_function_call() noexcept;
</pre><blockquote>
<p>
-1- <i>Effects</i>: constructs a <tt>bad_function_call object</tt>.
<p/>
<ins>-?- <i>Postconditions</i>: <tt>what()</tt> returns an implementation-defined NTBS.</ins>
</p>
</blockquote></blockquote>
</li>
</ol>

</resolution>

</issue>
