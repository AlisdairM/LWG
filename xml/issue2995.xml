<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2995" status="WP">
<title><tt>basic_stringbuf</tt> default constructor forbids it from using SSO capacity</title>
<section><sref ref="[stringbuf.cons]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>7 Jul 2017</date>
<priority>3</priority>

<discussion>
<p>
[stringbuf.cons] says that the default constructor initializes the
base class as <tt>basic_streambuf()</tt> which means the all the pointers to
the input and output sequences (<tt>pbase</tt>, <tt>eback</tt> etc) are all required to
be null.
<p/>
This means that a <tt>stringbuf</tt> that is implemented in terms of a Small
String Optimised <tt>std::basic_string</tt> cannot make us of the string's
initial capacity, and so cannot avoid a call to the overflow virtual
function even for small writes. In other words, the following
assertions must pass:
</p>
<blockquote><pre>
#include &lt;sstream&gt;
#include &lt;cassert&gt;

bool overflowed = false;

struct SB : std::stringbuf
{
  int overflow(int c) {
    assert( pbase() == nullptr );
    overflowed = true;
    return std::stringbuf::overflow(c);
  }
};

int main()
{
  SB sb;
  sb.sputc('1');
  assert(overflowed);
}
</pre></blockquote>
<p>
This is an unnecessary pessimisation. Implementations should be
allowed to use the SSO buffer immediately and write to it without
calling overflow. Libc++ already does this, so is non-conforming.
</p>

<note>2017-07 Toronto Tuesday PM issue prioritization</note>
<p>Priority 3; is this affected by Peter Sommerlad's <a href="http://wg21.link/P0407">paper P0407R1</a>?</p>

<note>2018-06 Rapperswil Wednesday issues processing</note>
<p>Status to Ready</p>
<note>2018-11, Adopted in San Diego</note>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4659">N4659</a>.
</p>

<ol>
<li><p>Edit <sref ref="[stringbuf.cons]"/> as indicated:</p>

<blockquote>
<pre>
explicit basic_stringbuf(
  ios_base::openmode which = ios_base::in | ios_base::out);
</pre>
<blockquote>
<p>
-1- <i>Effects:</i> Constructs an object of class <tt>basic_stringbuf</tt>, initializing the base class with 
<tt>basic_streambuf()</tt> (<sref ref="[streambuf.cons]"/>), and initializing <tt>mode</tt> with <tt>which</tt>.
<ins>It is implementation-defined whether the sequence pointers (<tt>eback()</tt>, <tt>gptr()</tt>, <tt>egptr()</tt>, 
<tt>pbase()</tt>, <tt>pptr()</tt>, <tt>epptr()</tt>) are initialized to null pointers.</ins>
<p/>
-2- <i>Postconditions:</i> <tt>str() == ""</tt>.
</p>
</blockquote>
</blockquote>
</li>

</ol>
</resolution>
</issue>
