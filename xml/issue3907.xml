<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3907" status="New">
<title>Can iterator types of range adaptors and range factories be SCARY?</title>
<section><sref ref="[range.factories]"/><sref ref="[range.adaptors]"/></section>
<submitter>Jiang An</submitter>
<date>18 Mar 2023</date>
<priority>99</priority>

<discussion>
<p>
[For the term SCARY see <paper num="N2911"/> and <paper num="N2913"/>.]
<p/>
In <sref ref="[range.factories]"/> and <sref ref="[range.adaptors]"/>, many iterator types are specified 
as exposition-only nested classes or nested class templates.
<p/>
This has some observable differences from specifying them as class templates declared in the namespace scope:
</p>
<ol>
<li><p>value types are generally not associated entities of iterators or sentinels during ADL, which prevents 
unintended overloads to be found;</p></li>
<li><p>two different range adaptor/factory types, e.g. <tt>iota_view&lt;I, S1&gt;</tt> and <tt>iota_view&lt;I, S2&gt;</tt>, 
have different iterator types.</p></li>
</ol>
<p>
The ADL reduction seems preferable. However, is it intended to required to any two different range 
adaptor/factory types to have two different iterator types, even when the same iterator type can work as expected?
<p/>
Sentinel types don't seem able to be SCARY as they are dependent on iterator types.
</p>
</discussion>

<resolution>
</resolution>

</issue>
