<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2778" status="WP">
<title><tt>basic_string_view</tt> is missing <tt>constexpr</tt></title>
<section><sref ref="[string.view]"/></section>
<submitter>Billy Robert O'Neal III</submitter>
<date>30 Sep 2016</date>
<priority>0</priority>

<discussion>
<p>
<tt>basic_string_view</tt> was not updated to account for other library
machinery made <tt>constexpr</tt> in Oulu. Now that <tt>reverse_iterator</tt> is
<tt>constexpr</tt> there's no reason the reverse range functions can't be.
Also, now that we have C++14 relaxed <tt>constexpr</tt>, we can also take care
of the assignment operator and <tt>copy</tt>.
</p>

<note>Issues processing Telecon 2016-10-7</note>
<p>split off the copy into its' own issue <iref ref="2780"/></p>
<p>P0; set what's left to Tentatively Ready</p>

<p>
<strong>Previous resolution [SUPERSEDED]:</strong>
</p>
<blockquote class="note">
<p>
This wording is relative to N4606.
</p>

<ol>
<li><p>In <sref ref="[string.view.template]"/>, add <tt>constexpr</tt> to the assignment operator:</p>

<blockquote>
<pre>
<ins>constexpr </ins>basic_string_view&amp; operator=(const basic_string_view&amp;) noexcept = default;
</pre>
</blockquote>
</li>

<li><p>In <sref ref="[string.view.template]"/>, add <tt>constexpr</tt> to the reverse range functions:</p>

<blockquote>
<pre>
<ins>constexpr </ins>const_reverse_iterator rbegin() const noexcept;
<ins>constexpr </ins>const_reverse_iterator rend() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crbegin() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crend() const noexcept;
</pre>
</blockquote>
</li>

<li><p>In <sref ref="[string.view.iterators]"/>, add <tt>constexpr</tt> to the reverse range functions:</p>

<blockquote>
<pre>
<ins>constexpr </ins>const_reverse_iterator rbegin() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crbegin() const noexcept;
</pre>
<blockquote>
<p>
-6- <em>Returns:</em> <tt>const_reverse_iterator(end())</tt>
</p>
</blockquote>
<pre>
<ins>constexpr </ins>const_reverse_iterator rend() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crend() const noexcept;
</pre>
<blockquote>
<p>
-7- <em>Returns:</em> <tt>const_reverse_iterator(begin())</tt>
</p>
</blockquote>
</blockquote>
</li>

<li><p>In <sref ref="[string.view.template]"/>, add <tt>constexpr</tt> to <tt>copy</tt>:</p>

<blockquote>
<pre>
<ins>constexpr </ins>size_type copy(charT* s, size_type n, size_type pos = 0) const;
</pre>
</blockquote>
</li>

<li><p>In <sref ref="[string.view.ops]"/>, add <tt>constexpr</tt> to <tt>copy</tt>:</p>

<blockquote>
<pre>
<ins>constexpr </ins>size_type copy(charT* s, size_type n, size_type pos = 0) const;
</pre>
</blockquote>
</li>
</ol>
</blockquote>
</discussion>

<resolution>
<p>
This wording is relative to N4606.
</p>

<ol>
<li><p>In <sref ref="[string.view.template]"/>, add <tt>constexpr</tt> to the assignment operator:</p>

<blockquote>
<pre>
<ins>constexpr </ins>basic_string_view&amp; operator=(const basic_string_view&amp;) noexcept = default;
</pre>
</blockquote>
</li>

<li><p>In <sref ref="[string.view.template]"/>, add <tt>constexpr</tt> to the reverse range functions:</p>

<blockquote>
<pre>
<ins>constexpr </ins>const_reverse_iterator rbegin() const noexcept;
<ins>constexpr </ins>const_reverse_iterator rend() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crbegin() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crend() const noexcept;
</pre>
</blockquote>
</li>

<li><p>In <sref ref="[string.view.iterators]"/>, add <tt>constexpr</tt> to the reverse range functions:</p>

<blockquote>
<pre>
<ins>constexpr </ins>const_reverse_iterator rbegin() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crbegin() const noexcept;
</pre>
<blockquote>
<p>
-6- <em>Returns:</em> <tt>const_reverse_iterator(end())</tt>
</p>
</blockquote>
<pre>
<ins>constexpr </ins>const_reverse_iterator rend() const noexcept;
<ins>constexpr </ins>const_reverse_iterator crend() const noexcept;
</pre>
<blockquote>
<p>
-7- <em>Returns:</em> <tt>const_reverse_iterator(begin())</tt>
</p>
</blockquote>
</blockquote>
</li>

</ol>
</resolution>

</issue>

