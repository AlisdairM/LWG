<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3263" status="New">
<title>Atomic waiting function calls should only be unblocked once</title>
<section><sref ref="[atomics.wait]"/></section>
<submitter>Geoffrey Romer</submitter>
<date>19 Aug 2019</date>
<priority>3</priority>

<discussion>
<p>
It appears that in a conforming implementation, all but one <tt>wait()</tt> call on a given 
atomic object may block forever, regardless of any <tt>notify_one()</tt> calls, because in 
principle every <tt>notify_one()</tt> call could be considered to unblock the same single 
<tt>wait()</tt> call. Common sense suggests (and David Olsen confirms) that the intent is 
for each waiting function call to be (non-spuriously) unblocked by at most one notifying 
function call, but as far as I can tell the words never say that.
</p>

<note>2019-09-14 Priority set to 3 based on reflector discussion</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4830">N4830</a>.</p>

<ol>
<li><p>Modify <sref ref="[atomics.wait]"/> as indicated:</p>

<blockquote>
<p>
<ins>-?- All blocking and unblocking events on a single atomic object occur in a single total order 
that is consistent with the "happens before" partial order.</ins>
<p/>
-4- A call to an atomic waiting operation on an atomic object <tt>M</tt> is <i>eligible to be 
unblocked</i> by a call to an atomic notifying operation on <tt>M</tt> if <ins>it has not been 
unblocked, and</ins> there exist side effects <tt>X</tt> and <tt>Y</tt> on <tt>M</tt> such that:
</p>
<ol style="list-style-type: none">
<li><p>(4.1) &mdash; the atomic waiting operation has blocked after observing the result of <tt>X</tt>,</p></li>
<li><p>(4.2) &mdash; <tt>X</tt> precedes <tt>Y</tt> in the modification order of <tt>M</tt>, and</p></li>
<li><p>(4.3) &mdash; <tt>Y</tt> happens before the call to the atomic notifying operation.</p></li>
</ol>
</blockquote>
</li>

</ol>
</resolution>
</issue>