<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3966" status="New">
<title>The <tt>value_type</tt> and <tt>reference</tt> members of <tt>std::flat_(multi)map::(const_)iterator</tt> are unclear</title>
<section><sref ref="[flat.map.overview]"/><sref ref="[flat.multimap.overview]"/></section>
<submitter>Jiang An</submitter>
<date>04 Aug 2023</date>
<priority>3</priority>

<discussion>
<p>
<sref ref="[flat.map.overview]"/> and <sref ref="[flat.multimap.overview]"/> currently only require that the iterator types 
meet <i>Cpp17InputIterator</i> requirements and model the <tt>std::random_access_iterator</tt> concept.
<p/>
The intent seems to be that
</p>
<ul>
<li><p>the <tt>operator*()</tt> returns proxy references of type <tt>std::pair&lt;const K&amp;, V&amp;&gt;</tt> or 
<tt>std::pair&lt;const K&amp;, const V&amp;&gt;</tt> (same as the <tt>reference</tt> or <tt>const_reference</tt> 
types of the container adaptors), and</p></li>
<li><p>the <tt>value_type</tt> of these iterators is <tt>std::pair&lt;K, V&gt;</tt> (same as the <tt>value_type</tt> 
of the container adaptors).</p></li>
</ul>
<p>
However, such intent doesn't seem to be clear.
<p/>
Moreover, given such possibly intended iterator types don't meet <i>Cpp17ForwardIterator</i> requirements, 
we may need to mention the exceptions in <sref ref="[container.reqmts]"/> or <sref ref="[associative.reqmts.general]"/>.
</p>

<note>2023-10-30; Reflector poll</note>
<p>
Set priority to 3 after reflector poll.
</p>

</discussion>

<resolution>
</resolution>

</issue>
