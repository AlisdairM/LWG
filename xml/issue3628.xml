<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3628" status="New">
<title>"<i>Effects:</i> Equivalent to:" and uninitialized memory algorithms</title>
<section><sref ref="[specialized.algorithms]"/></section>
<submitter>Jiang An</submitter>
<date>23 Oct 2021</date>
<priority>99</priority>

<discussion>
<p>
Most uninitialized memory algorithms (<sref ref="[specialized.algorithms]"/>) are specified by 
plain "<i>Effects:</i> Equivalent to:". According to <sref ref="[structure.specifications]"/>/4, 
such wording requires propagation of "<i>Constraints</i>" of selected constructors. The first two 
overloads of <tt>std::reduce</tt> (<sref ref="[reduce]"/>) are specified similarly.
<p/>
I feel the wording for uninitialized memory algorithms is incorrect, because it means that the 
constraints, especially for algorithms in the <tt>std</tt>, depend on "<tt>Constraints</tt>" in 
the specifications of many standard library types (but not any user-defined type), which is 
implementable but brings serious inconsistency.
<p/>
Perhaps we should add "<i>Mandates:</i>" to these algorithms (except for algorithms in <tt>std::ranges</tt>).
</p>
</discussion>

<resolution>
</resolution>

</issue>
