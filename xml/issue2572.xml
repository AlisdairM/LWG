<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2572" status="New">
<title>The remarks for <tt>shared_ptr::operator*</tt> should apply to <i>cv</i>-qualified <tt>void</tt> as well</title>
<section><sref ref="[util.smartptr.shared.obs]"/></section>
<submitter>Tim Song</submitter>
<date>13 Dec 2015</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[util.smartptr.shared.obs]"/>/4 says for <tt>shared_ptr::operator*</tt>
</p>
<blockquote>
<p>
<i>Remarks</i>: When <tt>T</tt> is <tt>void</tt>, it is unspecified whether this member function is declared. If it is declared,
it is unspecified what its return type is, except that the declaration (although not necessarily the
definition) of the function shall be well formed.
</p>
</blockquote>
<p>
This remark should also apply when <tt>T</tt> is <i>cv</i>-qualified <tt>void</tt> (compare LWG <iref ref="2500"/>).
</p>
</discussion>

<resolution>
<p>This wording is relative to N4567.</p>

<ol>
<li><p>Edit <sref ref="[util.smartptr.shared.obs]"/>/4 as indicated:</p>

<blockquote>
<pre>
T&amp; operator*() const noexcept;
</pre>
<blockquote>
<p>
[&hellip;]
<p/>
-4- <i>Remarks</i>: When <tt>T</tt> is <ins>(possibly <i>cv</i>-qualified)</ins> <tt>void</tt>, it is unspecified whether this 
member function is declared. If it is declared, it is unspecified what its return type is, except that the declaration 
(although not necessarily the definition) of the function shall be well formed.
</p>
</blockquote>
</blockquote>

</li>
</ol>
</resolution>

</issue>
