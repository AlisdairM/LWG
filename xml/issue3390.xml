<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3390" status="WP">
<title><tt>make_move_iterator()</tt> cannot be used to construct a <tt>move_iterator</tt> for a
move-only iterator</title>
<section><sref ref="[move.iter.nonmember]"/></section>
<submitter>Patrick Palka</submitter>
<date>7 Feb 2020</date>
<priority>0</priority>

<discussion>
<p>
<a href="https://wg21.link/p1207r4">P1207R4</a> ("Movability of single-pass iterators") 
introduces the notion of a move-only non-forward iterator and makes some changes to 
the existing specification to realize that support.
<p/>
The problem is that the specification of <tt>make_move_iterator()</tt> provided in 
<sref ref="[move.iter.nonmember]"/> p6 does attempt to construct a
<tt>move_iterator&lt;Iterator&gt;</tt> with an lvalue of <tt>i</tt> instead
of an rvalue, having the effect of copying it instead of moving it, thus preventing
to accept move-only iterators.
</p>

<note>2020-02 Prioritized as IMMEDIATE Monday morning in Prague</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4849">N4849</a>.</p>

<ol>
<li><p>Modify <sref ref="[move.iter.nonmember]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class Iterator&gt;
constexpr move_iterator&lt;Iterator&gt; make_move_iterator(Iterator i);
</pre>
<blockquote>
<p>
-6- <i>Returns:</i> <tt>move_iterator&lt;Iterator&gt;(<ins>std::move(</ins>i<ins>)</ins>)</tt>.
</p>
</blockquote>
</blockquote>
</li>

</ol></resolution>

</issue>
