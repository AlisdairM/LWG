<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2521" status="New">
<title>[fund.ts.v2] <tt>weak_ptr</tt>'s converting move constructor should be modified as well for array support</title>
<section><sref ref="[memory.smartptr.weak.const]"/></section>
<submitter>Tim Song</submitter>
<date>25 Jul 2015</date>
<priority>2</priority>

<discussion>
<p><b>Addresses: fund.ts.v2</b></p>
<p>
[memory.smartptr.weak.const] altered the constraints on <tt>weak_ptr</tt>'s constructor from <tt>const weak_ptr&lt;Y&gt;&amp;</tt> 
and <tt>const shared_ptr&lt;Y&gt;&amp;</tt>. The constraints on the converting move constructor from <tt>weak_ptr&lt;Y&gt;&amp;&amp;</tt> 
was not, but should be, similarly modified.
</p>

<note>2015-10-26</note>
<p>
Daniel adjusts wording to lib. fund. v2. As link to the originating proposal: The discussion in this issue refers to 
wording changes that were requested by <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3920.html">N3920</a>.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4529.html">N4529</a>.
</p>

<ol>
<li><p>At the end of [memory.smartptr.weak.const], add:<br/>
[<i>Drafting note</i>: The current paragraph [memory.smartptr.weak.const] p2 is incorrectly declared as <i>Requires</i> element,
but it does not describe a requirement, instead it describes a "template constraint" which are elsewhere always
specified within a <i>Remarks</i> element because it describes constraints that an implementation (and not the user) has to meet. 
See LWG <iref ref="2292"/> for a suggestion to introduce a separate new specification element for this situation.
This has also been fixed in the current working draft. &mdash; 
<i>end drafting note</i>] 
</p>
<blockquote>
<pre>
<ins>weak_ptr(weak_ptr&amp;&amp; r) noexcept;
template&lt;class Y&gt; weak_ptr(weak_ptr&lt;Y&gt;&amp;&amp; r) noexcept</ins>
</pre>
<blockquote>
<p>
<ins>-?- <i>Remark</i>: The second constructor shall not participate in overload resolution unless <tt>Y*</tt> is <i>compatible with</i> 
<tt>T*</tt>.</ins>
<p/>
<ins>-?- <i>Effects</i>: Move-constructs a <tt>weak_ptr</tt> instance from <tt>r</tt>.</ins>
<p/>
<ins>-?- <i>Postconditions</i>: <tt>*this</tt> shall contain the old value of <tt>r</tt>. <tt>r</tt> shall be <i>empty</i>. 
<tt>r.use_count() == 0</tt>.</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
