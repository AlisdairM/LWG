<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3219" status="New">
<title><tt>std::array</tt> overview container requirements are incorrect</title>
<section><sref ref="[array.overview]"/><sref ref="[container.requirements.general]"/></section>
<submitter>Nevin Liber &amp; Christian Trott</submitter>
<date>13 Jun 2019</date>
<priority>3</priority>

<discussion>
<p>
The requirements specified in <sref ref="[array.overview]"/> p3 are incorrect; namely:
</p>
<ul>
<li><p>A default constructed <tt>array&lt;T, N&gt;</tt> where <tt>0 &lt; N</tt> has linear, 
not constant complexity.</p></li>
<li><p>A default constructed <tt>array&lt;T, 0&gt;</tt> is empty and has constant complexity.</p></li>
</ul>

<note>2019-07 Issue Prioritiztion</note>
<p>Priority to 3 after discussion on the reflector.</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4810">N4810</a>.</p>

<ol>
<li><p>Modify <sref ref="[container.requirements.general]"/>, Table 62 &mdash; "Container requirements", 
as indicated (This table can be identified by the "section" identifier [tab:container.req] in the next 
working draft):</p>

<blockquote>
<table border="1">
<caption>Table 62 &mdash; Container requirements</caption>
<tr style="text-align:center">
<th>Expression</th>
<th>Return type</th>
<th>Operational<br/>semantics</th>
<th>Assertion/note<br/>pre/post-condition</th>
<th>Complexity</th>
</tr>
<tr>
<td colspan="5" align="center">
<tt>[&hellip;]</tt>
</td>
</tr>
<tr>
<td>
<tt>X u;</tt>
</td>
<td>
<tt></tt>
</td>
<td></td>
<td>
<ins><i>Ensures:</i> <tt>!u.empty()</tt> for <tt>array&lt;T, N&gt;</tt> where <tt>0 &lt; N</tt>, and</ins><br/>
<i>Ensures:</i> <tt>u.empty()</tt> <ins>for all other standard containers.</ins>
</td>
<td>
<del>constant</del><ins>(Note A)</ins>
</td>
</tr>
<tr>
<td>
<tt>X()</tt>
</td>
<td>
<tt></tt>
</td>
<td></td>
<td>
<ins><i>Ensures:</i> <tt>!X().empty()</tt> for <tt>array&lt;T, N&gt;</tt> where <tt>0 &lt; N</tt>, and</ins><br/>
<i>Ensures:</i> <tt>X().empty()</tt> <ins>for all other standard containers.</ins>
</td>
<td>
<del>constant</del><ins>(Note A)</ins>
</td>
</tr>

<tr>
<td colspan="5" align="center">
<tt>[&hellip;]</tt>
</td>
</tr>
</table>
<p>
Those entries marked "(Note A)" or "(Note B)" have linear complexity for <tt>array<ins>&lt;T, N&gt;</ins></tt> 
<ins>where <tt>0 &lt; N</tt></ins> and have constant complexity for all other standard containers.
</p>
</blockquote>

</li>

<li><p>Modify <sref ref="[array.overview]"/> as indicated:</p>

<blockquote>
<p>
-2- An <tt>array</tt> is an aggregate (<sref ref="[dcl.init.aggr]"/>) that can be list-initialized with up to 
<tt>N</tt> elements whose types are convertible to <tt>T</tt>.
<p/>
-3- <ins>An <tt>array&lt;T, 0&gt;</tt> satisfies all of the requirements of a container and of a 
reversible container (<sref ref="[container.requirements]"/>).</ins> An 
<tt>array<ins>&lt;T, N&gt;</ins></tt> <ins>where <tt>0 &lt; N</tt></ins> satisfies all 
of the requirements of a container and of a reversible container 
(<sref ref="[container.requirements]"/>), except that a default constructed 
<tt>array<ins>&lt;T, N&gt;</ins></tt> object is not empty and <del>that</del><ins>both default 
construction and</ins> <tt>swap</tt> <del>does not</del> have <del>constant</del><ins>linear</ins> 
complexity. An <tt>array</tt> satisfies some of the requirements of a sequence container 
(<sref ref="[sequence.reqmts]"/>). Descriptions are provided here only for operations on 
<tt>array</tt> that are not described in one of these tables and for operations where there is 
additional semantic information.
</p>
</blockquote>

</li>
</ol>
</resolution>
</issue>
