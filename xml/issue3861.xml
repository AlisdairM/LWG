<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3861" status="New">
<title><tt>mdspan</tt> <tt>layout_stride::mapping</tt> default constructor problem</title>
<section><sref ref="[mdspan.layout.stride]"/></section>
<submitter>Christian Robert Trott</submitter>
<date>25 Jan 2023</date>
<priority>99</priority>

<discussion>
<p>
During work on some follow on proposals for C++26 (like the padded layouts and <tt>submdspan</tt>) we stumbled over an 
issue in the C++23 <tt>mdspan</tt> definition.
<p/>
If you have a <tt>layout_stride::mapping</tt> with just static extents, its default constructor will produce an inconsistent mapping. 
All its strides will be <tt>0</tt> but its extents are not. Thus the <tt>is_unique</tt> property is violated. We wrote a paper to 
fix this: <paper num="P2763R0"/>. We describe two options to fix it and state why we prefer one over the other, with proposed wording changes. 
</p>
</discussion>

<resolution>
</resolution>

</issue>
