<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2434" status="Ready">
<title><tt>shared_ptr::use_count()</tt> is efficient</title>
<section><sref ref="[util.smartptr.shared.obs]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>1 Oct 2014</date>
<priority>0</priority>

<discussion>
<p>
<tt>shared_ptr</tt> and <tt>weak_ptr</tt> have Notes that their <tt>use_count()</tt> might be inefficient. 
This is an attempt to acknowledge reflinked implementations (which can be used by Loki smart pointers, for 
example). However, there aren't any <tt>shared_ptr</tt> implementations that use reflinking, especially 
after C++11 recognized the existence of multithreading. Everyone uses atomic refcounts, so <tt>use_count()</tt> 
is just an atomic load.
</p>

<note>Urbana 2014-11-07: Move to Ready</note>

</discussion>

<resolution>
<p>
This wording is relative to N3936.
</p>

<ol>
<li><p>Change <sref ref="[util.smartptr.shared.obs]"/> p7-p10 as depicted:</p>

<blockquote>
<pre>
long use_count() const noexcept;
</pre>
<blockquote>
<p>
-7- <i>Returns</i>: the number of <tt>shared_ptr</tt> objects, <tt>*this</tt> included, that <em>share ownership</em> with 
<tt>*this</tt>, or 0 when <tt>*this</tt> is <em>empty</em>.
<p/>
<del>-8- [<i>Note</i>: <tt>use_count()</tt> is not necessarily efficient. &mdash; <i>end note</i>]</del>
</p>
</blockquote>
<pre>
bool unique() const noexcept;
</pre>
<blockquote>
<p>
-9- <i>Returns</i>: <tt>use_count() == 1</tt>.
<p/>
-10- [<i>Note</i>: <del><tt>unique()</tt> may be faster than <tt>use_count()</tt>.</del> If you are using <tt>unique()</tt> 
to implement copy on write, do not rely on a specific value when <tt>get() == 0</tt>. &mdash; <i>end note</i>]
</p>
</blockquote>
</blockquote>
</li>

<li><p>Change <sref ref="[util.smartptr.weak.obs]"/> p1-p4 as depicted:</p>

<blockquote>
<pre>
long use_count() const noexcept;
</pre>
<blockquote>
<p>
-1- <i>Returns</i>: 0 if <tt>*this</tt> is <em>empty</em>; otherwise, the number of <tt>shared_ptr</tt> instances 
that <em>share ownership</em> with <tt>*this</tt>.
<p/>
<del>-2- [<i>Note</i>: <tt>use_count()</tt> is not necessarily efficient. &mdash; <i>end note</i>]</del>
</p>
</blockquote>
<pre>
bool expired() const noexcept;
</pre>
<blockquote>
<p>
-3- <i>Returns</i>: <tt>use_count() == 0</tt>.
<p/>
<del>-4- [<i>Note</i>: <tt>expired()</tt> may be faster than <tt>use_count()</tt>. &mdash; <i>end note</i>]</del>
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
