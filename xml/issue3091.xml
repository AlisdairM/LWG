<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3091" status="Resolved">
<title>subsecond-precision <tt>time_of_day</tt> and durations that <tt>seconds</tt> cannot convert to</title>
<section><sref ref="[time.hms]"/></section>
<submitter>Richard Smith</submitter>
<date>24 Mar 2018</date>
<priority>2</priority>

<discussion>
<p>
What should happen here:
</p>
<blockquote>
<pre>
const int bpm = 100;
using beats = duration&lt;int, ratio&lt;60, 100&gt;&gt;;
auto v = time_of_day&lt;beats&gt;(beats{2}).subseconds();
</pre>
</blockquote>
<p>
? 2 beats at 100bpm is <tt>1.2</tt> seconds. The <tt>time_of_day</tt> constructor specification says:
</p>
<blockquote><p>
<tt>seconds()</tt> returns the integral number of seconds <tt>since_midnight</tt> is after <tt>(00:00:00 + hours() + minutes())</tt>.
<tt>subseconds()</tt> returns the integral number of fractional precision seconds <tt>since_midnight</tt> is after
<tt>(00:00:00 + hours() + minutes() + seconds())</tt>.
</p></blockquote>
<p>
But that's impossible. If <tt>seconds()</tt> returns 1, we need to return a <tt>subseconds()</tt> value representing <tt>0.2s</tt>
of type <tt>precision</tt>, but type <tt>precision</tt> can only represent multiples of <tt>0.6s</tt>.
<p/>
Should this <tt>time_of_day</tt> specialization only be available for the case where <tt>seconds</tt> is convertible to
<tt>precision</tt>? Or should the <tt>precision</tt> type used by this specialization be
<tt>common_type_t&lt;seconds, duration&lt;Rep, Period&gt;&gt;</tt> rather than merely <tt>duration&lt;Rep, Period&gt;</tt>?
<p/>
Either way I think we need a wording update to specify one of those two behaviors.
</p>

<note>2018-04-09 Priority set to 2 after discussion on the reflector.</note>


<note>2019 Cologne Wednesday night</note>
<p>Status to Resolved (group voted on NAD, but Marshall changed it to Resolved)</p>
<p>Resolved by the adoption of P1466 in Cologne.</p>
<p><tt>hh_mm_ss</tt> is now specified such that subseconds must be a
non-positive power of 10 (e.g. 1/10s, 1/100s, milliseconds, etc.).   In
this example 60/100 simplifies to 3/5, which can be exactly represented
with 1 fractional decimal digit.  So in this example <tt>subseconds()</tt> has
the value of <tt>2ds</tt> (2 deciseconds).</p>
</discussion>

<resolution>
</resolution>

</issue>
