<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4079" status="Tentatively Ready">
<title>Missing <i>Preconditions</i> in <tt>concat_view::<i>iterator</i></tt>'s conversion constructor</title>
<section><sref ref="[range.concat.iterator]"/></section>
<submitter>Hewill Kang</submitter>
<date>26 Apr 2024</date>
<priority>99</priority>

<discussion>
<p>
This conversion constructor obtains the alternative iterator of the argument
through <tt>std::get</tt>, which will throw when the <tt>variant</tt> is valueless.
We seem to be missing a <i>Preconditions</i> element here.
</p>

<note>2024-05-08; Reflector poll</note>
<p>
Set status to Tentatively Ready after seven votes in favour during reflector poll.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4981"/>.
</p>

<ol>
<li><p>Modify <sref ref="[range.concat.iterator]"/> as indicated:</p>

<blockquote>
<pre>
constexpr <i>iterator</i>(<i>iterator</i>&lt;!Const&gt; it)
  requires Const &amp;&amp;
           (convertible_to&lt;iterator_t&lt;Views&gt;, iterator_t&lt;const Views&gt;&gt; &amp;&amp; ...);
</pre>
<blockquote>
<p>
<ins>-?- <i>Preconditions</i>: <tt>it.<i>it_</i>.valueless_by_exception()</tt> is <tt>false</tt>.</ins>
<p/>
-8- <i>Effects</i>: Initializes <tt><i>parent_</i></tt> with <tt>it.<i>parent_</i></tt>, and let <tt><i>i</i></tt> be
<tt>it.<i>it_</i>.index()</tt>, initializes <tt><i>it_</i></tt> with 
<tt><i>base-iter</i>(in_place_index&lt;<i>i</i>&gt;, std::get&lt;<i>i</i>&gt;(std::move(it.<i>it_</i>)))</tt>.
</p>
</blockquote>
</blockquote>
</li>

</ol>
</resolution>

</issue>
