<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3665" status="New">
<title>Is <tt>std::allocator_traits&lt;Alloc&gt;::rebind_alloc</tt> SFINAE-friendly?</title>
<section><sref ref="[allocator.traits.types]"/></section>
<submitter>Jiang An</submitter>
<date>24 Jan 2022</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[allocator.traits.types]"/>/11 says that the instantiation of <tt>rebind_alloc</tt> is 
sometimes ill-formed, however, it's unclear such ill-formedness results in substitution failure or hard error.
It seems that current implementations (libc++, libstd++, MSVC STL) give substitution errors, and 
we should reword <sref ref="[allocator.traits.types]"/>/11 with "<i>Constraints:</i>".
</p>

<note>2022-01-29; Daniel comments</note>
<p>
This issue has some overlap with LWG <iref ref="3545"/> in regard to the question how we should handle
the <tt>rebind</tt> member template of the <tt>pointer_traits</tt> primary template as specified by 
<sref ref="[pointer.traits.types]"/> p3. It would seem preferable to decide for the same approach in both 
cases.
</p>
</discussion>

<resolution>
</resolution>

</issue>
