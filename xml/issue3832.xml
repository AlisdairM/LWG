<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3832" status="New">
<title>Missing change for <tt>element_view::<i>iterator</i></tt> in LWG 3798</title>
<section><sref ref="[range.elements.iterator]"/></section>
<submitter>Jiang An</submitter>
<date>23 Nov 2022</date>
<priority>99</priority>

<discussion>
<p>
In LWG <iref ref="3798"/> (voted into WP in November 2022), iterator types of several range adaptors may have 
<tt>forward_iterator_tag</tt> or stronger iterator tag types as their <tt>iterator_category</tt> type when 
their <tt>operator*</tt> returns rvalue references. However, the proposed resolution missed the similar change 
for <tt>element_view::<i>iterator</i></tt>.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4917"/>.
</p>

<ol>
<li><p>Modify <sref ref="[range.elements.iterator]"/> as indicated:</p>

<blockquote>
<p>
-2- The member <i>typedef-name</i> <tt>iterator_category</tt> is defined if and only if <tt><i>Base</i></tt> 
models <tt>forward_range</tt>. In that case, <tt>iterator_category</tt> is defined as follows: Let <tt>C</tt> 
denote the type <tt>iterator_traits&lt;iterator_t&lt;<i>Base</i>&gt;&gt;::iterator_category</tt>.
</p>
<ol style="list-style-type: none">
<li><p>(2.1) &mdash; If <tt>std::get&lt;N&gt;(*<i>current_</i>)</tt> is a<del>n</del> <ins>p</ins>rvalue, 
<tt>iterator_category</tt> denotes <tt>input_iterator_tag</tt>.</p></li>
<li><p>(2.2) &mdash; Otherwise, if <tt>C</tt> models <tt>derived_from&lt;random_access_iterator_tag&gt;</tt>, 
<tt>iterator_category</tt> denotes <tt>random_access_iterator_tag</tt>.</p></li>
<li><p>(2.3) &mdash; Otherwise, <tt>iterator_category</tt> denotes <tt>C</tt>.</p></li>
</ol>
</blockquote>
</li>

</ol>

</resolution>

</issue>
