<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2493" status="New">
<title><tt>initializer_list</tt> supports incomplete classes</title>
<section><sref ref="[support.initlist]"/></section>
<submitter>David Krauss</submitter>
<date>27 Apr 2015</date>
<priority>99</priority>

<discussion>
<p>
The typical use-case of <tt>std::initializer_list&lt;T&gt;</tt> is for a pass-by-value parameter of <tt>T</tt>'s constructor. 
However, this contravenes <sref ref="[res.on.functions]"/>/2.5 because <tt>initializer_list</tt> doesn't specifically allow 
incomplete types (as do for example <tt>std::unique_ptr</tt> (<sref ref="[unique.ptr]"/>/5) and 
<tt>std::enable_shared_from_this</tt> (<sref ref="[util.smartptr.enab]"/>/2)).
<p/>
A resolution would be to copy-paste the relevant text from such a paragraph.
<p/>
Separately, <sref ref="[res.on.functions]"/>/2.5 would be better placed in (or at least referenced from) 
<sref ref="[utility.arg.requirements]"/>. Its current location suggests that it applies to functions, not separately to class 
templates, but instantiation of e.g. any container over an incomplete allocator type will fail even if no member function is 
instantiated.
</p>

</discussion>

<resolution>
</resolution>

</issue>
