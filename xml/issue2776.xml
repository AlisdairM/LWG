<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2776" status="New">
<title><tt>shared_ptr unique()</tt> and <tt>use_count()</tt></title>
<section><sref ref="[util.smartptr.shared.obs]"/></section>
<submitter>Hans Boehm</submitter>
<date>22 Sep 2016</date>
<priority>2</priority>

<discussion>
<p>
The removal of the "debug only" restriction for <tt>use_count()</tt> and <tt>unique()</tt> in <tt>shared_ptr</tt>  
by LWG <iref ref="2434"/> introduced a bug. In order for <tt>unique()</tt> to produce a useful and reliable value, 
it needs a synchronize clause to ensure that prior accesses through another reference are visible to the successful 
caller of <tt>unique()</tt>. Many current implementations use a relaxed load, and do not provide this guarantee, 
since it's not stated in the standard. For debug/hint usage that was OK. Without it the specification is unclear 
and probably misleading.
<p/>
I would vote for making <tt>unique()</tt> use <tt>memory_order_acquire</tt>, and specifying that reference count 
decrement operations synchronize with <tt>unique()</tt>. That still doesn't give us sequential consistency by default, 
like we're supposed to have. But the violations seem sufficiently obscure that I think it's OK. All uses that 
anybody should care about will work correctly, and the bad uses are clearly bad. I agree with Peter that this 
version of <tt>unique()</tt> may be quite useful.
<p/>
I would prefer to specify <tt>use_count()</tt> as only providing an unreliable hint of the actual count (another way 
of saying debug only). Or deprecate it, as JF suggested. We can't make <tt>use_count()</tt> reliable without adding 
substantially more fencing. We really don't want someone waiting for <tt>use_count() == 2</tt> to determine that 
another thread got that far. And unfortunately, I don't think we currently say anything to make it clear that's a 
mistake.
<p/>
This would imply that <tt>use_count()</tt> normally uses <tt>memory_order_relaxed</tt>, and <tt>unique</tt> is 
neither specified nor implemented in terms of <tt>use_count()</tt>.
</p>
</discussion>

<resolution>
</resolution>

</issue>

