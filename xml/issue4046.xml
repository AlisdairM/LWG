<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4046" status="New">
<title>Effects of inserting into or erasing from flat container adaptors when an exception is thrown need to be more permissive</title>
<section><sref ref="[associative.reqmts.except]"/><sref ref="[flat.map.overview]"/><sref ref="[flat.multimap.overview]"/>
<sref ref="[flat.set.overview]"/><sref ref="[flat.multiset.overview]"/></section>
<submitter>Jiang An</submitter>
<date>23 Jan 2024</date>
<priority>2</priority>

<discussion>
<p>
The issue was originally discovered while implementing <tt>flat_(multi_)set</tt> in MSVC STL 
(<a href="https://github.com/microsoft/STL/issues/4059">microsoft/STL#4059</a>).
<p/>
Currently, the effects of inserting a single element into or erasing elements from a flat container 
adaptor when an exception is thrown, are implicitly specified in <sref ref="[associative.reqmts.except]"/>.
<p/>
However, given erasing elements from a <tt>vector</tt> or a <tt>deque</tt> generally needs to assign elements, 
which is not guaranteed to be non-throwing, it seems unreasonable to require <tt>erase</tt> of flat container 
adaptors not to throw in such a case. Likewise, as inserting a single value into <tt>deque</tt> is not 
guaranteed to be effectless when an exception is thrown, so flat container adaptors are unlike to provide such 
a guarantee.
<p/>
Perhaps we should conditionally relax the requirements when the underlying containers can't provide them.
</p>

<note>2024-03-15; Reflector poll</note>
<p>
Set priority to 2 after reflector poll.
</p>
<p> <paper num="P2767"/> ยง3.5 is related/conflicting.  </p>

</discussion>

<resolution>
</resolution>

</issue>
