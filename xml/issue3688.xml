<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3688" status="New">
<title>Can <tt>std::expected&lt;T, E&gt;::value</tt> be well-formed when <tt>E</tt> is move-only?</title>
<section><sref ref="[expected.object.obs]"/><sref ref="[expected.void.obs]"/></section>
<submitter>Jiang An</submitter>
<date>24 Mar 2022</date>
<priority>99</priority>

<discussion>
<p>
<tt>std::expected&lt;T, E&gt;::value</tt> overloads are specified to throw 
<tt>std::bad_expected_access&lt;std::decay_t&lt;E&gt;&gt;</tt> when an <tt>E</tt> is contained. 
However, it seems that the copy constructor of <tt>std::bad_expected_access</tt> is implicitly 
deleted if <tt>E</tt> is move-only, so the <i>throw-expression</i> is ill-formed.
<p/>
Is it intended that <tt>std::expected&lt;T, E&gt;::value</tt> is ill-formed in such cases?
</p>
</discussion>

<resolution>
</resolution>

</issue>
