<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3292" status="Voting">
<title><tt>iota_view</tt> is under-constrained</title>
<section><sref ref="[range.iota.view]"/></section>
<submitter>Barry Revzin</submitter>
<date>13 Sep 2019</date>
<priority>99</priority>

<discussion>
<p>
<a href="http://wg21.link/p1207r4">P1207R4</a> changed <tt>weakly_incrementable</tt> from requiring 
<tt>semiregular</tt> to requiring <tt>default_constructible &amp;&amp; movable</tt>.
<p/>
<tt>iota_view</tt> currently is specified to require that <tt>W</tt> be just <tt>weakly_incrementable</tt>. 
But we have to copy the <tt>W</tt> from the view into its iterator and also in <tt>operator*()</tt> to 
return a <tt>W</tt>.
<p/>
The shortest resolution is just to add "<tt> &amp;&amp; semiregular&lt;W&gt;</tt>" to the class 
constraints.
</p>
<note>Status to ready after discussion Friday morning in Belfast</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4830">N4830</a>.</p>

<ol>
<li><p>Modify <sref ref="[range.iota.view]"/> as indicated:</p>

<blockquote>
<pre>
namespace std::ranges {
  [&hellip;]
  template&lt;weakly_incrementable W, semiregular Bound = unreachable_sentinel_t&gt;
    requires <i>weakly-equality-comparable-with</i>&lt;W, Bound&gt; <ins>&amp;&amp; semiregular&lt;W&gt;</ins>
  class iota_view : public view_interface&lt;iota_view&lt;W, Bound&gt; {
    [&hellip;]
  };
  [&hellip;]
}
</pre>
</blockquote>

</li>

</ol>

</resolution>
</issue>
