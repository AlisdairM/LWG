<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3580" status="New">
<title><tt>iota_view's iterator</tt>'s binary <tt>operator+</tt> should be improved</title>
<section><sref ref="[range.iota.iterator]"/></section>
<submitter>Zoe Carver</submitter>
<date>14 Aug 2021</date>
<priority>99</priority>

<discussion>
<p>
<tt>iota_view</tt>'s iterator's <tt>operator+</tt> could avoid a copy construct by doing 
"<tt>i += n; return i</tt>" rather than "<tt>return i += n;</tt>" as seen in <sref ref="[range.iota.iterator]"/>.
<p/>
This is what libc++ has implemented and shipped, even though it may not technically be conforming 
(if a program asserted the number of copies, for example). 
<p/>
It might be good to update this operator and the minus operator accordingly. 
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4892">N4892</a>.
</p>

<ol>
<li><p>Modify <sref ref="[range.iota.iterator]"/> as indicated:</p>

<blockquote>
<pre>
friend constexpr <i>iterator</i> operator+(<i>iterator</i> i, difference_type n)
  requires <i>advanceable</i>&lt;W&gt;;
</pre>
<blockquote>
<p>
-20- <i>Effects:</i> Equivalent to:
</p>
<blockquote><pre>
<del>return</del> i += n; 
<ins>return i;</ins>
</pre></blockquote>
</blockquote>
<pre>
friend constexpr <i>iterator</i> operator+(difference_type n, <i>iterator</i> i)
  requires <i>advanceable</i>&lt;W&gt;;
</pre>
<blockquote>
<p>
-21- <i>Effects:</i> Equivalent to: <tt>return i + n;</tt>
</p>
</blockquote>
<pre>
friend constexpr <i>iterator</i> operator-(<i>iterator</i> i, difference_type n)
  requires <i>advanceable</i>&lt;W&gt;;
</pre>
<blockquote>
<p>
-22- <i>Effects:</i> Equivalent to:
</p>
<blockquote><pre>
<del>return</del> i -= n;
<ins>return i;</ins>
</pre></blockquote>
</blockquote>
</blockquote>
</li>

</ol></resolution>

</issue>
