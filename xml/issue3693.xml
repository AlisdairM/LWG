<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3693" status="New">
<title>&sect;[c.math] Can any of <tt>float/double/long double</tt> overloads be fused into template overloads?</title>
<section><sref ref="[c.math]"/></section>
<submitter>Jiang An</submitter>
<date>28 Apr 2022</date>
<priority>2</priority>

<discussion>
<p>
IIUC LWG <iref ref="3234"/> will be resolved by the recently approved paper <paper num="P1467R9"/>. 
While considering adding the newly required overloads of math special functions to MSVC STL, I found 
that it may be more convenient to implement the whole overload set as a single function template.
<p/>
However, it's unclear for me whether the every "overload for each <i>cv</i>-unqualified floating-point 
type", or every currently separately shown overloads in the synopsis of <tt>&lt;cmath&gt;</tt>, is 
required to be a separated function. As discussed in 
<a href="https://github.com/microsoft/STL/issues/1335">microsoft/STL#1335</a>, if there were only a 
separated <tt>double</tt> overload (usually comes from the C standard library) and a fused template 
overload, calling the overload set with <tt>{}</tt> would be accepted, which is definitely ambiguous 
when there are separated <tt>float/double/long double</tt> overloads.
<p/>
I think it may be better to allow implementations to arbitrarily fuse the required overloads.
</p>

<note>2022-05-17; Reflector poll</note>
<p>
Set priority to 2 after reflector poll. One vote for NAD.
</p>

</discussion>

<resolution>
</resolution>

</issue>
