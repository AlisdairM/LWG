<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3584" status="New">
<title>Clarify common comparison category conversions</title>
<section><sref ref="[cmp.common]"/></section>
<submitter>Peter Brett</submitter>
<date>23 Aug 2021</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[cmp.common]"/>/1 says:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;"><p>
The type <tt>common_comparison_category</tt> provides an alias for the
strongest comparison category to which all of the template arguments
can be converted.
</p></blockquote>
<p>
A naive reader like me might interpret this as meaning that (1) you
attempt to convert the template arguments to comparison categories and
then (2) obtain the strongest among them.
<p/>
However, the intent is in fact to realize the common comparison type
notion from <sref ref="[class.spaceship]"/>/4. To obtain a non-<tt>void</tt>
result, all the template arguments must be comparison categories, rather than
convertible to comparison categories.
<p/>
<sref ref="[cmp.common]"/>/2 mildly contradicts the first paragraph:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;"><p>
<i>Remarks:</i> The member <i>typedef-name</i> <tt>type</tt> denotes the common comparison
type (<sref ref="[class.spaceship]"/>) of <tt>Ts...</tt>, the expanded parameter pack, or
<tt>void</tt> if any element of <tt>Ts</tt> is not a comparison category type.
</p></blockquote>
<p>
It more precisely states the behaviour, cross-references
<sref ref="[class.spaceship]"/>, and uses the correct core terminology for the
metafunction that the template represents.
<p/>
Suggested resolution;
<p/>
Delete <sref ref="[cmp.common]"/>/1, because it does not provide any information not
already more precisely included in <sref ref="[cmp.common]"/>/2.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4892">N4892</a>.
</p>

<ol>
<li><p>Modify <sref ref="[cmp.common]"/> as indicated:</p>

<blockquote>
<p>
<del>-1- The type <tt>common_comparison_category</tt> provides an alias for the strongest comparison category to which
all of the template arguments can be converted.
[<i>Note 1</i>: A comparison category type is stronger than another if they are distinct types and an instance of the former
can be converted to an instance of the latter. &mdash; <i>end note</i>]</del>
</p>
<pre>
template&lt;class... Ts&gt;
struct common_comparison_category {
  using type = <i>see below</i>;
};
</pre>
<p>
-2- <i>Remarks:</i> The member <i>typedef-name</i> <tt>type</tt> denotes the common comparison type (<sref ref="[class.spaceship]"/>) 
of <tt>Ts...</tt>, the expanded parameter pack, or <tt>void</tt> if any element of <tt>Ts</tt> is not a comparison category type.
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
