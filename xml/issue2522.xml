<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2522" status="WP">
<title>[fund.ts.v2] Contradiction in <tt>set_default_resource</tt> specification</title>
<section><sref ref="[memory.resource.global]"/></section>
<submitter>Tim Song</submitter>
<date>28 Jul 2015</date>
<priority>2</priority>

<discussion>
<p><b>Addresses: fund.ts.v2</b></p>
<p>
[memory.resource.global]/p7-8 says that the effects of <tt>set_default_resource(r)</tt> are
</p>
<blockquote><p>
If <tt>r</tt> is non-null, sets the value of the default memory resource pointer to <tt>r</tt>, otherwise sets the default memory 
resource pointer to <tt>new_delete_resource()</tt>.
</p></blockquote>
<p>
and the operation has the postcondition 
</p>
<blockquote><p>
<tt>get_default_resource() == r</tt>.
</p></blockquote>
<p>
When <tt>r</tt> is null, however, the postcondition cannot be met, since the call sets the default memory resource pointer to 
<tt>new_delete_resource()</tt>, and so <tt>get_default_resource()</tt> would return the value of <tt>new_delete_resource()</tt>, which 
is obviously not null and so cannot compare equal to <tt>r</tt>.
</p>

<strong>Previous resolution from Tim Song [SUPERSEDED]:</strong>
<blockquote class = "note">
<p>
This wording is relative to <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4480.html">N4480</a>.
</p>

<ol>
<li><p>Edit [memory.resource.global]/p8 as follows:</p>
<blockquote>
<pre>
<em>-6-</em> memory_resource* set_default_resource(memory_resource* r) noexcept;
</pre>
<blockquote>
<p>
-7- <i>Effects</i>: If <tt>r</tt> is non-null, sets the value of the default memory resource pointer to <tt>r</tt>, 
otherwise sets the default memory resource pointer to <tt>new_delete_resource()</tt>. 
<p/>
-8- <i>Postconditions</i>: <tt>get_default_resource() == r</tt> <ins>if <tt>r</tt> is non-null; otherwise, 
<tt>get_default_resource() == new_delete_resource()</tt></ins>. 
<p/>
[&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</blockquote>

<note>2015-09-15 Geoffrey Romer comments and suggests alternative wording</note>
<p>
 Let's just strike <sref ref="[memory.resource.global]"/>/p8. The problem is that p8 is restating p7 incorrectly, 
 but the solution is not to restate p7 correctly, it's to stop trying to restate p7 at all.
</p>

<note>2015-10, Kona Saturday afternoon</note>
<p>Move to Tentatively ready</p>

<note>2015-10-26</note>
<p>Daniel adjusts wording to lib. fund. v2.</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4529.html">N4529</a>.
</p>

<ol>
<li><p>Edit [memory.resource.global]/p8 as follows:</p>
<blockquote>
<pre>
<em>-6-</em> memory_resource* set_default_resource(memory_resource* r) noexcept;
</pre>
<blockquote>
<p>
-7- <i>Effects</i>: If <tt>r</tt> is non-null, sets the value of the default memory resource pointer to <tt>r</tt>, 
otherwise sets the default memory resource pointer to <tt>new_delete_resource()</tt>. 
<p/>
<del>-8- <i>Postconditions</i>: <tt>get_default_resource() == r</tt>.</del>
<p/>
[&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
