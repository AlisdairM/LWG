<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2494" status="TS">
<title>[fund.ts.v2] <tt>ostream_joiner</tt> needs <tt>noexcept</tt></title>
<section><sref ref="[iterator.ostream.joiner]"/></section>
<submitter>Nate Wilson</submitter>
<date>3 May 2015</date>
<priority>0</priority>

<discussion>
<p><b>Addresses: fund.ts.v2</b></p>
<p>
In Library Fundamentals 2 
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4481.html#iterator.ostream.joiner.ops">N4481</a>, 
[iterator.ostream.joiner], all operations are no-ops other than the assignment operator.
<p/>
So, they should be marked as <tt>noexcept</tt>.
</p>

<note>2015-05, Lenexa</note>
<p>
Move to Immediate.
</p>
</discussion>

<resolution>
<p>This wording is relative to N4481 in regard to fundamental-ts-2 changes.</p>

<ol>
<li><p>Change class template <tt>ostream_joiner</tt> synopsis, [iterator.ostream.joiner] p2, as indicated:</p>

<blockquote>
<pre>
namespace std {
namespace experimental {
inline namespace fundamentals_v2 {

template &lt;class DelimT, class charT = char, class traits = char_traits&lt;charT&gt; &gt;
  class ostream_joiner {
  public:
    [&hellip;]
    ostream_joiner&lt;DelimT, charT,traits&gt;&amp; operator*() <ins>noexcept</ins>;
    ostream_joiner&lt;DelimT, charT,traits&gt;&amp; operator++() <ins>noexcept</ins>;
    ostream_joiner&lt;DelimT, charT,traits&gt;&amp; operator++(int) <ins>noexcept</ins>;
    [&hellip;]
  };

} // inline namespace fundamentals_v2
} // namespace experimental
} // namespace std
</pre>
</blockquote>
</li>

<li><p>Change [iterator.ostream.joiner.ops] p3+5, as indicated:</p>

<blockquote>
<pre>
ostream_joiner&lt;DelimT, charT, traits&gt;&amp; operator*() <ins>noexcept</ins>;
</pre>
<p>
[&hellip;]
</p>
<pre>
ostream_joiner&lt;DelimT, charT, traits&gt;&amp; operator++() <ins>noexcept</ins>;
ostream_joiner&lt;DelimT, charT, traits&gt;&amp; operator++(int) <ins>noexcept</ins>;
</pre>
</blockquote>

</li>
</ol>
</resolution>

</issue>
