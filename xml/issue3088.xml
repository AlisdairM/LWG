<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3088" status="New">
<title><tt>forward_list::merge</tt> behavior unclear when passed <tt>*this</tt></title>
<section><sref ref="[forwardlist.ops]"/></section>
<submitter>Tim Song</submitter>
<date>19 Mar 2018</date>
<priority>99</priority>

<discussion>
<p>
LWG <iref ref="300"/> changed <tt>list::merge</tt> to be a no-op when passed <tt>*this</tt>, but there's no equivalent rule for <tt>forward_list::merge</tt>.
Presumably the <tt>forward_list</tt> proposal predated the adoption of LWG 300's PR and was never updated 
for the change. Everything in the discussion of that issue applies mutatis mutandis to the current 
specification of <tt>forward_list::merge</tt>.
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4727">N4727</a>.</p>

<ol>
<li><p>Edit <sref ref="[forwardlist.ops]"/> as indicated:</p>
<blockquote>
<pre>
void merge(forward_list&amp; x);
void merge(forward_list&amp;&amp; x);
template&lt;class Compare&gt; void merge(forward_list&amp; x, Compare comp);
template&lt;class Compare&gt; void merge(forward_list&amp;&amp; x, Compare comp);
</pre>
<blockquote>
<p>
-20- <i>Requires:</i> <tt>*this</tt> and <tt>x</tt> are both sorted with respect to the comparator 
<tt>operator&lt;</tt> (for the first two overloads) or <tt>comp</tt> (for the last two overloads), 
and <tt>get_allocator() == x.get_allocator()</tt> is <tt>true</tt>.
<p/>
-21- <i>Effects:</i> <ins>If <tt>addressof(x) == this</tt>, does nothing. Otherwise, 
m</ins><del>M</del>erges the two sorted ranges <tt>[begin(), end())</tt> and <tt>[x.begin(), x.end())</tt>. 
<ins>The result is a range that is sorted with respect to the comparator <tt>operator&lt;</tt> 
(for the first two overloads) or <tt>comp</tt> (for the last two overloads).</ins> <tt>x</tt> is 
empty after the merge. If an exception is thrown other than by a comparison there are no effects.
Pointers and references to the moved elements of <tt>x</tt> now refer to those same elements but 
as members of <tt>*this</tt>. Iterators referring to the moved elements will continue to refer to 
their elements, but they now behave as iterators into <tt>*this</tt>, not into <tt>x</tt>.
<p/>
-22- <i>Remarks:</i> Stable (<sref ref="[algorithm.stable]"/>). The behavior is undefined if 
<tt>get_allocator() != x.get_allocator()</tt>.
<p/>
-23- <i>Complexity:</i> At most <tt>distance(begin(), end()) + distance(x.begin(), x.end()) - 1</tt> 
comparisons <ins>if <tt>addressof(x) != this</tt>; otherwise, no comparisons are performed</ins>.
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
