<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2775" status="Dup">
<title><tt>reverse_iterator</tt> is does not compile for fancy pointers</title>
<section><sref ref="[reverse.iter.elem]"/></section>
<submitter>Billy Robert O'Neal III</submitter>
<date>23 Sep 2016</date>
<priority>99</priority>

<discussion>
<duplicate><iref ref="1052"/></duplicate>
<p>
<tt>std::reverse_iterator&lt;Iterator&gt;::operator-&gt;()</tt> is specified to call <tt>addressof(operator*())</tt>,
but it returns <tt>iterator_traits&lt;Iterator&gt;::pointer</tt>, which may be a fancy pointer type from which no
conversion from <tt>T*</tt> is possible. It should instead delegate to the underlying iterator's <tt>operator-&gt;()</tt>.
</p>

<note>Issues processing Telecon 2016-10-7</note>
<p>Set status to Duplicate</p>
</discussion>

<resolution>
<p>This wording is relative to N4606.</p>

<ol>
<li><p>Modify <sref ref="[reverse.iter.opref]"/> as indicated:</p>
<blockquote>
<pre>
constexpr pointer operator-&gt;() const;
</pre>
<blockquote>
<p>
-1- <del><i>Returns:</i> <tt>addressof(operator*())</tt>.</del><ins><i>Effects:</i> If <tt>Iterator</tt>
is a pointer type, as if by:</ins>
</p>
<blockquote><pre>
<ins>Iterator tmp = current;
return --tmp;</ins>
</pre></blockquote>
<p>
<ins>Otherwise, as if by:</ins>
</p>
<blockquote><pre>
<ins>Iterator tmp = current;
--tmp;
return tmp.operator-&gt;();</ins>
</pre></blockquote>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
