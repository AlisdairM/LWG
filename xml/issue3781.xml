<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3781" status="New">
<title>The exposition-only alias templates <tt><i>cont-key-type</i></tt> and  <tt><i>cont-mapped-type</i></tt> should be removed</title>
<section><sref ref="[container.adaptors.general]"/></section>
<submitter>Hewill Kang</submitter>
<date>16 Sep 2022</date>
<priority>99</priority>

<discussion>
<p>
<paper num="P0429R9"/> removed the <tt>flat_map</tt>'s single-range argument constructor and uses C++23-compatible 
<tt>from_range_t</tt> version constructor with alias templates <tt><i>range-key-type</i></tt> and 
<tt><i>range-mapped-type</i></tt> to simplify the deduction guide.
<p/>
This makes <tt><i>cont-key-type</i></tt> and <tt><i>cont-mapped-type</i></tt> no longer useful, we should remove them.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4910"/>.
</p>

<ol>

<li><p>Modify <sref ref="[container.adaptors.general]"/> as indicated:</p>

<p>
-7- The exposition-only alias template <tt><i>iter-value-type</i></tt> defined in 
<sref ref="[sequences.general]"/> and the exposition-only alias templates 
<tt><i>iter-key-type</i></tt> and <tt><i>iter-mapped-type</i></tt> defined in 
<sref ref="[associative.general]"/> may appear in deduction guides for container adaptors.
</p>
<p>
<del>-8- The following exposition-only alias templates may appear in deduction guides for container adaptors:</del>
</p>
<blockquote><pre><del>
template&lt;class Container&gt;
  using <i>cont-key-type</i> =                                // <i>exposition only</i>
    remove_const_t&lt;typename Container::value_type::first_type&gt;;
template&lt;class Container&gt;
  using <i>cont-mapped-type</i> =                             // <i>exposition only</i>
    typename Container::value_type::second_type;
</del></pre></blockquote>
</li>

</ol>
</resolution>

</issue>
