<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2736" status="Tentatively Ready">
<title><tt>nullopt_t</tt> insufficiently constrained</title>
<section><sref ref="[optional.nullopt]"/></section>
<submitter>Tim Song</submitter>
<date>17 Jun 2016</date>
<priority>2</priority>

<discussion>
<p>
<sref ref="[optional.nullopt]"/>/2 requires of <tt>nullopt_t</tt> that
</p>
<blockquote>
<p>
Type <tt>nullopt_t</tt> shall not have a default constructor. It shall be a literal type. Constant <tt>nullopt</tt> shall 
be initialized with an argument of literal type.
</p>
</blockquote>
<p>
This does not appear sufficient to foreclose the following implementation:
</p>
<blockquote>
<pre>
struct nullopt_t 
{
  constexpr nullopt_t(const nullopt_t&amp;) = default;
};

constexpr nullopt_t nullopt(nullopt_t{});
</pre>
</blockquote>
<ul>
<li><tt>nullopt_t</tt> has no default constructor because it has a user-declared (copy) constructor;</li>
<li><tt>nullopt_t</tt> has a trivial destructor, is an aggregate, and is a literal type;</li>
<li><tt>nullopt</tt> has been initialized with an argument of literal type, to wit, <tt>nullopt_t</tt>.</li>
</ul>
<p>
But such a <tt>nullopt_t</tt> is still constructible from <tt>{}</tt> and so still makes <tt>opt = {}</tt> ambiguous.
</p>

<note>08-16 - Chicago</note>
<p>This is related to <iref ref="2510"/></p>
<p>Monday PM: Ville to provide updated wording</p>
<p>Fri AM: Moved to Tentatively Ready</p>
</discussion>

<resolution>
<p>
This wording is relative to N4606.
</p>

<ol>
<li><p>Edit <sref ref="[optional.nullopt]"/>/2 as indicated:</p>
<blockquote class="note">
<p>
[<i>Drafting note</i>: <tt>{}</tt> can do one of three things for a class type:
it may be aggregate initialization, it may call a default constructor,
or it may call an initializer-list constructor (see <sref ref="[dcl.init.list]"/>, <sref ref="[over.match.list]"/>).
The wording below forecloses all three possibilities. &mdash; <i>end drafting note</i>]
</p>
</blockquote>
<blockquote>
<p>
-2- Type <tt>nullopt_t</tt> shall not have a default constructor <ins>or an initializer-list constructor</ins>. 
It <ins>shall not be an aggregate and</ins> shall be a literal type. Constant <tt>nullopt</tt> shall 
be initialized with an argument of literal type.
</p>
</blockquote>
</li>
</ol>

</resolution>

</issue>
