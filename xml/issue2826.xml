<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2826" status="New">
<title><tt>string_view</tt> iterators use old wording</title>
<section><sref ref="[string.view.iterators]"/></section>
<submitter>Alisdair Meredith</submitter>
<date>17 Nov 2016</date>
<priority>99</priority>

<discussion>
<p>
The wording for <tt>basic_string_view</tt> was written before the definition of
a contiguous iterator was added to C++17 to avoid repeating redundant
wording.
</p>
<p>
Suggested modification of <sref ref="[string.view.iterators]"/> p1 (stealing words from <tt>valarray begin</tt>/<tt>end</tt>):
</p>
<blockquote><p>
-1- <del>A constant random-access iterator type such that, for a <tt>const_iterator it</tt>, if <tt>&amp;*(it + N)</tt> is valid,
then <tt>&amp;*(it + N) == (&amp;*it) + N</tt></del><ins>A type that meets the requirements of a constant random access iterator 
(24.2.7) and of a contiguous iterator (24.2.1) whose <tt>value_type</tt> is the template parameter <tt>charT</tt></ins>.
</p></blockquote>
</discussion>

<resolution>
<p>
This wording is relative to N4606.
</p>
<ol>
<li><p>Modify <sref ref="[string.view.iterators]"/> as indicated:</p>
<blockquote>
<pre>
using const_iterator = <i>implementation-defined</i>;
</pre>
<blockquote>
<p>
-1- A <del>constant random-access iterator type such that, for a <tt>const_iterator it</tt>, if <tt>&amp;*(it + N)</tt> is valid,
then <tt>&amp;*(it + N) == (&amp;*it) + N</tt></del><ins>type that meets the requirements of a constant random access 
iterator (<sref ref="[random.access.iterators]"/>) and of a contiguous iterator (<sref ref="[iterator.requirements.general]"/>)
whose <tt>value_type</tt> is the template parameter <tt>charT</tt></ins>.
<p/>
-2- For a <tt>basic_string_view str</tt>, any operation that invalidates a pointer in the range <tt>[str.data(),
str.data() + str.size())</tt> invalidates pointers, iterators, and references returned from <tt>str</tt>'s methods.
<p/>
-3- All requirements on container iterators (<sref ref="[container.requirements]"/>) apply to 
<tt>basic_string_view::const_iterator</tt> as well.
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
