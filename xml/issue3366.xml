<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3366" status="New">
<title>Narrowing conversions between integer and integer-class types</title>
<section><sref ref="[iterator.concept.winc]"/></section>
<submitter>Casey Carter</submitter>
<date>07 Jan 2020</date>
<priority>3</priority>

<discussion>
<p>
The working draft ignores the possibility that:
</p>
<ol>
<li><p>the value of an expression of integer-class type might not be representable by the target 
integer type of a conversion, and</p></li>
<li><p>the value of an expression of integer type might not be representable by the target 
integer-class type of a conversion.</p></li>
</ol>
<p>
Presumably the behavior of these cases is undefined by omission; is this actually the intent?   
<p/>
Notably (2) could be specified away by mandating that all integer-class types are capable of 
representing the value range of all integer types of the same signedness.
</p>

<note>2019-12-08 Issue Prioritization</note>
<p>Priority to 3 after reflector discussion.</p>
</discussion>

<resolution>
</resolution>

</issue>
