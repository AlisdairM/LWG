<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2961" status="C++20">
<title>Bad postcondition for <tt>set_default_resource</tt></title>
<section><sref ref="[mem.res.global]"/></section>
<submitter>Casey Carter</submitter>
<date>9 May 2017</date>
<priority>99</priority>

<discussion>
<p>
The specification of <tt>set_default_resource</tt> in <a href="https://wg21.link/n4659">N4659</a> 
<sref ref="[mem.res.global]"/> reads:
</p>
<blockquote>
<pre>
memory_resource* set_default_resource(memory_resource* r) noexcept;
</pre>
<blockquote>
<p>
-4- <i>Effects:</i> If <tt>r</tt> is non-null, sets the value of the default memory resource pointer to <tt>r</tt>, 
otherwise sets the default memory resource pointer to <tt>new_delete_resource()</tt>.
<p/>
-5- <i>Postconditions:</i> <tt>get_default_resource() == r</tt>.
<p/>
-6- <i>Returns:</i> The previous value of the default memory resource pointer.
<p/>
-7- Remarks: [&hellip;]
</p>
</blockquote>
</blockquote>
<p>
It is apparent that the effects specified in para 4 cannot &mdash; and indeed should not &mdash; achieve the 
postcondition specified in para 5 when <tt>r</tt> is null.
</p>
  
<note>2017-05-13, Tim comments</note>
<p>
This is the same issue as LWG <iref ref="2522"/>, which <i>just</i> missed the Fundamentals TS working draft used for the merge.
A similar resolution (simply striking the <i>Postconditions:</i> paragraph) might be better.
</p>

<p><strong>Previous resolution [SUPERSEDED]:</strong></p>
<blockquote class="note">
<p>This wording is relative to <a href="https://wg21.link/n4659">N4659</a>.</p>

<ol>
<li>
<p>Modify <sref ref="[mem.res.global]"/> as follows:</p>

<blockquote>
<pre>
memory_resource* set_default_resource(memory_resource* r) noexcept;
</pre>
<blockquote>
<p>
-4- <i>Effects:</i> If <tt>r</tt> is non-null, sets the value of the default memory resource pointer to <tt>r</tt>, 
otherwise sets the default memory resource pointer to <tt>new_delete_resource()</tt>.
<p/>
-5- <i>Postconditions:</i> <ins>If <tt>r</tt> is non-null,</ins> <tt>get_default_resource() == r</tt>. <ins>Otherwise, 
<tt>get_default_resource() == new_delete_resource()</tt>.</ins>
<p/>
-6- <i>Returns:</i> The previous value of the default memory resource pointer.
<p/>
-7- Remarks: [&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</blockquote>

<note>2017-06-13, Casey Carter revises proposed wording</note>
<p>
I suggest to strike the Postconditions paragraph ([mem.res.global]/5) completely, as in LWG <iref ref="2522"/>
</p>

<note>2017-06-15, Moved to Tentatively Ready after 6 positive votes on c++std-lib</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4659">N4659</a>.</p>

<ol>
<li>
<p>Modify <sref ref="[mem.res.global]"/> as follows:</p>

<blockquote>
<pre>
memory_resource* set_default_resource(memory_resource* r) noexcept;
</pre>
<blockquote>
<p>
-4- <i>Effects:</i> If <tt>r</tt> is non-null, sets the value of the default memory resource pointer to <tt>r</tt>, 
otherwise sets the default memory resource pointer to <tt>new_delete_resource()</tt>.
<p/>
<del>-5- <i>Postconditions:</i> <tt>get_default_resource() == r</tt>.</del>
<p/>
-6- <i>Returns:</i> The previous value of the default memory resource pointer.
<p/>
-7- Remarks: [&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
