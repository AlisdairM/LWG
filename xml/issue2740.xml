<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2740" status="Pending WP">
<title><tt>constexpr optional&lt;T&gt;::operator-&gt;</tt></title>
<section><sref ref="[optional.object.observe]"/></section>
<submitter>Agust&iacute;n K-ballo Berg&eacute;</submitter>
<date>2 Jul 2016</date>
<priority>0</priority>

<discussion>
<p>
<tt>optional&lt;T&gt;::operator-&gt;</tt>s are constrained to be <tt>constexpr</tt> functions
only when <tt>T</tt> is not a type with an overloaded unary <tt>operator&amp;</tt>. This
constrain comes from the need to use <tt>addressof</tt> (or a similar
mechanism), and the inability to do so in a constant expression in
C++14. Given that <tt>addressof</tt> is now <tt>constexpr</tt>, this constrain is no
longer needed.
</p>
<note>2016-07 Chicago</note>
<p>Monday: P0 - tentatively ready</p>
</discussion>

<resolution>
<p>This wording is relative to N4594.</p>

<ol>
<li><p>Modify <sref ref="[optional.object.observe]"/> as indicated:</p>

<blockquote>
<pre>
constexpr T const* operator-&gt;() const;
constexpr T* operator-&gt;();
</pre>
<blockquote>
<p>
-1- <i>Requires:</i> <tt>*this</tt> contains a value.
<p/>
-2- <i>Returns:</i> <tt>val</tt>.
<p/>
-3- <i>Throws:</i> Nothing.
<p/>
-4- <i>Remarks:</i> <del>Unless <tt>T</tt> is a user-defined type with overloaded unary <tt>operator&amp;</tt>, 
t</del><ins>T</ins>hese functions shall be <tt>constexpr</tt> functions.
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
