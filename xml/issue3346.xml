<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3346" status="Tentatively Ready">
<title><tt>pair</tt> and <tt>tuple</tt> copy and move constructor have backwards specification</title>
<section><sref ref="[pairs.pair]"/><sref ref="[tuple.cnstr]"/></section>
<submitter>Richard Smith</submitter>
<date>26 Nov 2019</date>
<priority>0</priority>

<discussion>
<p>
<sref ref="[pairs.pair]"/> p2 and <sref ref="[tuple.cnstr]"/> p3 say:
</p>
<blockquote>
<p>
The defaulted move and copy constructor, respectively, of {<tt>pair</tt>,<tt>tuple</tt>} is a constexpr 
function if and only if all required element-wise initializations for copy and move, respectively, 
would satisfy the requirements for a constexpr function.
</p>
</blockquote>
<p>
Note that we specify the copy constructor in terms of element move operations and the move constructor 
in terms of element copy operations. Is that really the intent? This appears to be how this was originally 
specified when the wording was added by <a href="https://wg21.link/n3471">N3471</a>.
</p>

<note>2019-12-01; Daniel comments and provides wording</note>
<p>
These inverted wording effects are an unintended oversight caused by <a href="https://wg21.link/n3471">N3471</a>.
</p>

<note>2019-12-08 Issue Prioritization</note>
<p>Status to Tentatively Ready and priority to 0 after ten positive votes on the reflector.</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4835">N4835</a>.</p>

<ol>
<li><p>Modify <sref ref="[pairs.pair]"/> as indicated:</p>

<blockquote>
<p>
-2- The defaulted move and copy constructor, respectively, of <tt>pair</tt> shall be a constexpr function 
if and only if all required element-wise initializations for <del>copy</del><ins>move</ins> and 
<del>move</del><ins>copy</ins>, respectively, would satisfy the requirements for a constexpr function.
</p>
</blockquote>
</li>

<li><p>Modify <sref ref="[tuple.cnstr]"/> as indicated:</p>

<blockquote>
<p>
-3- The defaulted move and copy constructor, respectively, of <tt>tuple</tt> shall be a constexpr function 
if and only if all required element-wise initializations for <del>copy</del><ins>move</ins> and 
<del>move</del><ins>copy</ins>, respectively, would satisfy the requirements for a constexpr function. 
The defaulted move and copy constructor of <tt>tuple&lt;&gt;</tt> shall be constexpr functions.
</p>
</blockquote>
</li>


</ol>
</resolution>
</issue>
