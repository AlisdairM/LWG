<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3041" status="WP">
<title>Unnecessary <tt>decay</tt> in <tt>reference_wrapper</tt></title>
<section><sref ref="[refwrap.const]"/></section>
<submitter>Agust&iacute;n K-ballo Berg&eacute;</submitter>
<date>4 Dec 2017</date>
<priority>0</priority>

<discussion>
<p>
Another occurrence of unnecessary decay (<a href="http://wg21.link/p0777">P0777</a>) was introduced by the
resolution of LWG <iref ref="2993"/>. A decayed function/array type will never be the same type as 
<tt>reference_wrapper</tt>.
</p>

<note>
2018-01-09 Moved to Tentatively Ready after 9 positive votes on c++std-lib.
</note>
<note>2018-3-17 Adopted in Jacksonville</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4713">N4713</a>.</p>

<ol>
<li><p>Change <sref ref="[refwrap.const]"/> as indicated:</p>

<blockquote>
<pre>template&lt;class U&gt;
reference_wrapper(U&amp;&amp; u) noexcept(<i>see below</i>);</pre>
<blockquote>
<p>
-1- <i>Remarks:</i> Let <tt><i>FUN</i></tt> denote the exposition-only functions
</p>
<pre>
void FUN(T&amp;) noexcept;
void FUN(T&amp;&amp;) = delete;
</pre>
<p>
This constructor shall not participate in overload resolution unless the expression <tt><i>FUN</i>(declval&lt;U&gt;())</tt>
is well-formed and <tt>is_same_v&lt;<del>decay_t</del><ins>remove_cvref_t</ins>&lt;U&gt;, reference_wrapper&gt;</tt> is 
<tt>false</tt>. The expression inside <tt>noexcept</tt> is equivalent to <tt>noexcept(<i>FUN</i>(declval&lt;U&gt;()))</tt>.
</p>
</blockquote>
</blockquote>
</li>

</ol>
</resolution>

</issue>
