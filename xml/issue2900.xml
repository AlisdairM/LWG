<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2900" status="New">
<title>The copy and move constructors of optional are not constexpr</title>
<section><sref ref="[optional.optional]"/></section>
<submitter>United States</submitter>
<date>3 Feb 2017</date>
<priority>99</priority>

<discussion>
<b>Addresses US 111</b>

<p>The copy and move constructors of optional are not constexpr. However, the constructors taking a const T& or T&& are constexpr, and there is a precedent for having a constexpr copy constructor in 26.5.2 [complex]. The defaulted copy and move constructors of pair and tuple are also conditionally constexpr (see 20.4.2 [pairs.pair] p2 and 20.5.2.1 [tuple.cnstr] p2).</p>
<p>A strong motivating use-case is constexpr functions returning optional values. This issue was discovered while working on a library making heavy use of such.</p>

<p>Proposed change: Add constexpr to: </p>
<blockquote><pre>
optional(const optional &);
optional(optional &&) noexcept(see below);
</pre></blockquote>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/N4618">N4618</a>.</p>
<ol>
<li><p>Edit <sref ref="[optional.optional]"/> as indicated:</p>
<blockquote><pre>
	<ins>constexpr</ins> optional(const optional &);
	<ins>constexpr</ins> optional(optional &&) noexcept(<i>see below</i>);
</pre></blockquote>
</li>

<li><p>Edit <sref ref="[optional.ctor]"/> paragraph as indicated:</p>
<blockquote><pre>
	<ins>constexpr</ins> optional(const optional &);
</pre></blockquote>

<p>and </p>

<blockquote><pre>
	<ins>constexpr</ins> optional(optional &&) noexcept(<i>see below</i>);
</pre></blockquote>
</li>
</ol>
</resolution>

</issue>


