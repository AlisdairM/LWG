<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3905" status="Voting">
<title>Type of <tt>std::fexcept_t</tt></title>
<section><sref ref="[cfenv.syn]"/></section>
<submitter>Sam Elliott</submitter>
<date>13 Mar 2023</date>
<priority>99</priority>

<discussion>
<p>
<tt>&lt;cfenv&gt;</tt>, as specified in <sref ref="[cfenv.syn]"/>, requires <tt>fexcept_t</tt> to be
an integer type:
</p>
<blockquote><pre>
using fexcept_t = <i>integer type</i>;
</pre></blockquote>
<p>
<tt>&lt;cfenv&gt;</tt> was initially added to the (first) Technical Report on
C++ Library Extensions via <paper num="N1568"/> and then integrated into the 
C++ Working Draft N2009 in Berlin (April, 2006).
<p/>
However, C99 does not actually require that <tt>fexcept_t</tt> is
an integer type, it only requires:
</p>
<blockquote>
<p>
The type <tt>fexcept_t</tt> represents the floating-point status flags
collectively, including any status the implementation associates
with the flags.
</p>
</blockquote>
<p>
Relaxing this requirement should not cause conforming C++ implementations to no longer be conforming. 
In fact, this should enable conforming C implementations to become conforming C++ implementations without 
an ABI break. The only incompatibility I foresee is where a user's program is initializing a <tt>std::fexcept_t</tt> 
with an integer value, which would become invalid on some C++ implementations (but not those that were 
previously conforming).
</p>

<note>2023-05-24; Reflector poll</note>
<p>
Set status to Tentatively Ready after six votes in favour during reflector poll.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4928"/>.
</p>

<ol>

<li><p>Modify <sref ref="[cfenv.syn]"/>, header <tt>&lt;cfenv&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
[&hellip;]
namespace std {
  // <i>types</i>
  using fenv_t = <i>object type</i>;
  using fexcept_t = <i><del>integer</del><ins>object</ins> type</i>;
  [&hellip;]
}
</pre>
</blockquote>

</li>

</ol>
</resolution>

</issue>
