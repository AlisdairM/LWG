<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3732" status="C++23">
<title><tt>prepend_range</tt> and <tt>append_range</tt> can't be amortized constant time</title>
<section><sref ref="[sequence.reqmts]"/></section>
<submitter>Tim Song</submitter>
<date>06 Jul 2022</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[sequence.reqmts]"/>/69 says "An implementation shall implement them so as to take amortized constant time." 
followed by a list of operations that includes the newly added <tt>append_range</tt> and <tt>prepend_range</tt>. 
Obviously these operations cannot be implemented in amortized constant time.
<p/>
Because the actual complexity of these operations are already specified in the concrete container specification, 
we can just exclude them here.
</p>

<note>2022-08-23; Reflector poll</note>
<p>
Set status to Tentatively Ready after six votes in favour during reflector poll.
</p>

<note>2022-11-12 Approved at November 2022 meeting in Kona. Status changed: Voting &rarr; WP.</note>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4910"/>.
</p>

<ol>

<li><p>Modify <sref ref="[sequence.reqmts]"/> as indicated:</p>

<blockquote>
<p>
-69- The following operations are provided for some types of sequence containers but not others. <del>An implementation
shall implement them</del><ins>Operations other than <tt>prepend_range</tt> and <tt>append_range</tt> are implemented</ins> 
so as to take amortized constant time.
</p>
</blockquote>
</li>


</ol>
</resolution>

</issue>
