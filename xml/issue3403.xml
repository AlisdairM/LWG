<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3403" status="New">
<title>Domain of <tt>ranges::ssize(E)</tt> doesn't match <tt>ranges::size(E)</tt></title>
<section><sref ref="[range.prim.ssize]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>19 Feb 2020</date>
<priority>99</priority>

<discussion>
<p>
<tt>ranges::size(E)</tt> works with a non-range for which <tt>E.size()</tt> or <tt>size(E)</tt> is valid. 
But <tt>ranges::ssize(E)</tt> requires the type <tt>range_difference_t</tt> which requires 
<tt>ranges::begin(E)</tt> to be valid. This means there are types for which <tt>ranges::size(E)</tt> 
is valid but <tt>ranges::ssize(E)</tt> is not.
<p/>
Casey's reaction to this is:
<p/>
I believe we want <tt>ranges::ssize</tt> to work with any argument that <tt>ranges::size</tt> accepts. 
That suggest to me that we're going to need <tt><i>make-signed-like-t</i>&lt;T&gt;</tt> after all, 
so we can "Let <tt>E</tt> be an expression, and let <tt>D</tt> be the wider of <tt>ptrdiff_t</tt> 
or <tt>decltype(ranges::size(E))</tt>. Then <tt>ranges::ssize(E)</tt> is expression-equivalent to 
<tt>static_cast&lt;<i>make-signed-like-t</i>&lt;D&gt;&gt;(ranges::size(E))</tt>." Although this wording 
is still slightly icky since <tt>D</tt> isn't a valid type when <tt>ranges::size(E)</tt> isn't a valid 
expression, I think it's an improvement?
</p>
</discussion>

<resolution>
</resolution>
</issue>
