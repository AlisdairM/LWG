<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4131" status="New">
<title>Including <tt>&lt;optional&gt;</tt> doesn't provide <tt>std::begin/end</tt></title>
<section><sref ref="[iterator.range]"/></section>
<submitter>Hewill Kang</submitter>
<date>02 Aug 2024</date>
<priority>99</priority>

<discussion>
<p>
Since <code>optional</code> now provides <code>begin/end</code> members, it is reasonable
to ensure the validity of <code>std::begin/end</code> after including <tt>&lt;optional&gt;</tt>.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4986"/>.
</p>

<ol>
<li><p>Modify <sref ref="[iterator.range]"/> as indicated:</p>

<blockquote>
<p>
-1- In addition to being available via inclusion of the <tt>&lt;iterator&gt;</tt> header, the function
templates in <sref ref="[iterator.range]"/> are available when any of the following headers are included: 
<tt>&lt;array&gt;</tt> (<sref ref="[array.syn]"/>), 
<tt>&lt;deque&gt;</tt> (<sref ref="[deque.syn]"/>), 
<tt>&lt;flat_map&gt;</tt> (<sref ref="[flat.map.syn]"/>), 
<tt>&lt;flat_set&gt;</tt> (<sref ref="[flat.set.syn]"/>), 
<tt>&lt;forward_list&gt;</tt> (<sref ref="[forward.list.syn]"/>), 
<tt>&lt;inplace_vector&gt;</tt> (<sref ref="[inplace.vector.syn]"/>),
<tt>&lt;list&gt;</tt> (<sref ref="[list.syn]"/>), 
<tt>&lt;map&gt;</tt> (<sref ref="[associative.map.syn]"/>), 
<ins><tt>&lt;optional&gt;</tt> (<sref ref="[optional.syn]"/>),</ins> 
<tt>&lt;regex&gt;</tt> (<sref ref="[re.syn]"/>), 
<tt>&lt;set&gt;</tt> (<sref ref="[associative.set.syn]"/>), 
<tt>&lt;span&gt;</tt> (<sref ref="[span.syn]"/>), 
<tt>&lt;string&gt;</tt> (<sref ref="[string.syn]"/>), 
<tt>&lt;string_view&gt;</tt> (<sref ref="[string.view.synop]"/>), 
<tt>&lt;unordered_map&gt;</tt> (<sref ref="[unord.map.syn]"/>), 
<tt>&lt;unordered_set&gt;</tt> (<sref ref="[unord.set.syn]"/>), 
and <tt>&lt;vector&gt;</tt> (<sref ref="[vector.syn]"/>).
</p>
</blockquote>

</li>

</ol>
</resolution>

</issue>
