<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3476" status="New">
<title><tt>thread</tt> and <tt>jthread</tt> constructors require that the parameters be move-constructible 
but never move construct the parameters</title>
<section><sref ref="[thread.thread.constr]"/><sref ref="[thread.jthread.cons]"/></section>
<submitter>Billy O'Neal III</submitter>
<date>18 Aug 2020</date>
<priority>99</priority>

<discussion>
<p>
I think this was upgraded to <i>Mandates</i> because C++17 and earlier had "<tt>F</tt> and each <tt>T<sub><i>i</i></sub></tt> 
in <tt>Args</tt> shall satisfy the <i>Cpp17MoveConstructible</i> requirements." And for those, I think the requirement 
was attempting to make the subsequent <tt><i>decay-copy</i></tt> valid. However, the 'Mandating the standard library' 
papers added <tt>is_constructible</tt> requirements which already serve that purpose; <tt>std::(j)thread</tt> has no 
reason to move the elements after they have been <tt><i>decay-copy</i></tt>'d to transfer to the launched thread.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4861">N4861</a>.
</p>

<ol>
<li><p>Modify <sref ref="[thread.thread.constr]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class F, class... Args&gt; explicit thread(F&amp;&amp; f, Args&amp;&amp;... args);
</pre>
<blockquote>
<p>
-3- <i>Constraints:</i> <tt>remove_cvref_t&lt;F&gt;</tt> is not the same type as <tt>thread</tt>.
<p/>
-4- <i>Mandates:</i> The following are all <tt>true</tt>:
</p>
<ol style="list-style-type: none">
<li><p>(4.1) &mdash; <tt>is_constructible_v&lt;decay_t&lt;F&gt;, F&gt;</tt>,</p></li>
<li><p>(4.2) &mdash; <tt>(is_constructible_v&lt;decay_t&lt;Args&gt;, Args&gt; &amp;&amp; ...)</tt>, <ins>and</ins></p></li>
<li><p><del>(4.3) &mdash; <tt>is_move_constructible_v&lt;decay_t&lt;F&gt;&gt;</tt>,</del></p></li>
<li><p><del>(4.4) &mdash; <tt>(is_move_constructible_v&lt;decay_t&lt;Args&gt;&gt; &amp;&amp; ...)</tt>, and</del></p></li>
<li><p>(4.5) &mdash; <tt>is_invocable_v&lt;decay_t&lt;F&gt;, decay_t&lt;Args&gt;...&gt;</tt>.</p></li>
</ol>
</blockquote>
</blockquote>
</li>

<li><p>Modify <sref ref="[thread.jthread.cons]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class F, class... Args&gt; explicit jthread(F&amp;&amp; f, Args&amp;&amp;... args);
</pre>
<blockquote>
<p>
-3- <i>Constraints:</i> <tt>remove_cvref_t&lt;F&gt;</tt> is not the same type as <tt>jthread</tt>.
<p/>
-4- <i>Mandates:</i> The following are all <tt>true</tt>:
</p>
<ol style="list-style-type: none">
<li><p>(4.1) &mdash; <tt>is_constructible_v&lt;decay_t&lt;F&gt;, F&gt;</tt>,</p></li>
<li><p>(4.2) &mdash; <tt>(is_constructible_v&lt;decay_t&lt;Args&gt;, Args&gt; &amp;&amp; ...)</tt>, <ins>and</ins></p></li>
<li><p><del>(4.3) &mdash; <tt>is_move_constructible_v&lt;decay_t&lt;F&gt;&gt;</tt>,</del></p></li>
<li><p><del>(4.4) &mdash; <tt>(is_move_constructible_v&lt;decay_t&lt;Args&gt;&gt; &amp;&amp; ...)</tt>, and</del></p></li>
<li><p>(4.5) &mdash; <tt>is_invocable_v&lt;decay_t&lt;F&gt;, decay_t&lt;Args&gt;...&gt; ||
is_invocable_v&lt;decay_t&lt;F&gt;, stop_token, decay_t&lt;Args&gt;...&gt;</tt>.</p></li>
</ol>
</blockquote>
</blockquote>

</li>

</ol>
</resolution>

</issue>
