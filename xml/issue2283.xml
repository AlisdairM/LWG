<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2283" status="Resolved">
<title>[fund.ts] <tt>optional</tt> declares and then does not define an <tt>operator&lt;()</tt></title>
<section><sref ref="[optional.comp_with_t]"/></section>
<submitter>Howard Hinnant</submitter>
<date>26 Aug 2013</date>

<discussion>
<p><b>Addresses: fund.ts</b></p>

<p>
In <sref ref="[optional.syn]"/> there is:
</p>
<blockquote><pre>
template &lt;class T&gt; constexpr bool operator&lt;(const T&amp;, const optional&lt;T&gt;&amp;);
</pre></blockquote>
<p>
But I can find no definition for this signature.
</p>

<note>2013-09 Chicago:</note>
<p>
Move to Deferred.  This feature will ship after C++14 and should be revisited then.
</p>

<note>2014-06-06 pre-Rapperswill</note>
<p>
This issue has been reopened as fundamentals-ts.
</p>

<note>2014-06-07 Daniel comments</note>
<p>
This issue should be set to <b>Resolved</b>, because the wording fix is already applied in the 
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4023.html#optional.comp_with_t">last fundamentals working draft</a>.
</p>

<note>2014-06-16 Rapperswill</note>
<p>
Confirmed that this issue is resolved in the current Library Fundamentals working paper.
</p>

</discussion>

<resolution>
<p>This wording is relative to N3691.</p>

<ol>
<li><p>Add to <sref ref="[optional.comp_with_t]"/>:</p>

<blockquote><pre>
<ins>template &lt;class T&gt; constexpr bool operator&lt;(const T&amp; v, const optional&lt;T&gt;&amp; x);</ins>
</pre>
<blockquote>
<p>
<ins>-?- <i>Returns:</i> <tt>bool(x) ? less&lt;T&gt;{}(v, *x) : false</tt>.</ins>
</p>
</blockquote></blockquote>
</li>

</ol>
</resolution>

</issue>
