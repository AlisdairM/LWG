<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2948" status="Voting">
<title><tt>unique_ptr</tt> does not define <tt>operator&lt;&lt;</tt> for stream output</title>
<section><sref ref="[unique.ptr]"/></section>
<submitter>Peter Dimov</submitter>
<date>19 Mar 2017</date>
<priority>0</priority>

<discussion>
<p>
<tt>shared_ptr</tt> does define <tt>operator&lt;&lt;</tt>, and <tt>unique_ptr</tt> should too, for consistency and usability reasons.
</p>

<note>2017-07 Toronto Wed Issue Prioritization</note>
<p>Priority 0; move to Ready</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4659">N4659</a>.
</p>
<ol>
<li><p>Change <sref ref="[memory.syn]"/>, header <tt>&lt;memory&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std {
  [&hellip;]
  
  <i>// <sref ref="[unique.ptr]"/>, class template unique_ptr</i>
  [&hellip;]
  template &lt;class T, class D&gt;
  bool operator&gt;=(nullptr_t, const unique_ptr&lt;T, D&gt;&amp; y);
  
  <ins>template&lt;class E, class T, class Y, class D&gt;
  basic_ostream&lt;E, T&gt;&amp; operator&lt;&lt; (basic_ostream&lt;E, T&gt;&amp; os, const unique_ptr&lt;Y, D&gt;&amp; p);</ins>
  [&hellip;]
}
</pre>
</blockquote>
</li>

<li><p>Change <sref ref="[unique.ptr]"/>, class template <tt>unique_ptr</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std {
  [&hellip;]
  template &lt;class T, class D&gt;
  bool operator&gt;=(nullptr_t, const unique_ptr&lt;T, D&gt;&amp; y);
  
  <ins>template&lt;class E, class T, class Y, class D&gt;
  basic_ostream&lt;E, T&gt;&amp; operator&lt;&lt; (basic_ostream&lt;E, T&gt;&amp; os, const unique_ptr&lt;Y, D&gt;&amp; p);</ins>
}
</pre>
</blockquote>
</li>

<li><p>Add a new subclause following subclause <sref ref="[unique.ptr.special]"/> as indicated:</p>

<blockquote>
<p>
<ins>23.11.1.?? <tt>unique_ptr</tt> I/O [unique.ptr.io]</ins>
</p>
<pre>
<ins>template&lt;class E, class T, class Y, class D&gt;
  basic_ostream&lt;E, T&gt;&amp; operator&lt;&lt; (basic_ostream&lt;E, T&gt;&amp; os, const unique_ptr&lt;Y, D&gt;&amp; p);</ins>
</pre>
<blockquote>
<p>
<ins>-?- <i>Effects:</i> Equivalent to <tt>os &lt;&lt; p.get();</tt></ins>
<p/>
<ins>-?- <i>Returns</i>: <tt>os</tt>.</ins>
<p/>
<ins>-?- <i>Remarks:</i> This function shall not participate in overload resolution unless <tt>os &lt;&lt; p.get()</tt> 
is a valid expression.</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>

