<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3006" status="Tentatively Resolved">
<title>Constructing a <tt>basic_stringbuf</tt> from a <tt>string</tt> &mdash; where does the allocator come from?</title>
<section><sref ref="[stringbuf.cons]"/></section>
<submitter>Marshall Clow</submitter>
<date>2 Aug 2017</date>
<priority>3</priority>

<discussion>
<p>
Consider the following constructor from <sref ref="[stringbuf.cons]"/> before p3:
</p>
<blockquote><pre>
explicit basic_stringbuf(
  const basic_string&lt;charT, traits, Allocator&gt;&amp; s,
  ios_base::openmode which = ios_base::in | ios_base::out);
</pre></blockquote>
<p>
In [stringbuf.cons]/3, it says:
</p>
<blockquote><p>
<i>Effects:</i> Constructs an object of class <tt>basic_stringbuf</tt>, initializing the base class with 
<tt>basic_streambuf()</tt> (30.6.3.1), and initializing <tt>mode</tt> with <tt>which</tt>. Then calls <tt>str(s)</tt>.
</p></blockquote>
<p>
But that doesn't mention where the allocator for the <tt>basic_stringbuf</tt> comes from.
Until recently, most implementations just default constructed the allocator.
But that requires that the allocator be default constructible.
<p/>
<a href="https://bugs.llvm.org/show_bug.cgi?id=33727">This bug</a> was filed against libc++ for this case.
<p/>
I think that the <tt>basic_stringbuf</tt> should be constructed with a copy of the allocator from the string.
</p>

<note>2017-11-01, Marshall comments</note>
<p>
There exist two related proposals, namely <a href="http://wg21.link/p0407r1">P0407R1</a> and 
<a href="http://wg21.link/p0408r2">P0408R2</a>.
</p>

<note>2017-11 Albuquerque Wednesday night issues processing</note>
<p>Priority set to 3</p>

<note>2020-05-02 Daniel comments</note>
<p>
It seems that this issue is now resolved by the proposal 
<a href="https://wg21.link/p0408r7">P0408R7</a>, accepted in Cologne 2019.
<p/>
The paper clarified that the allocator is provided based on the effect
of initializing the exposition-only <tt>basic_string buf</tt> with the provided
<tt>basic_string argument s</tt> (Which again is specified in terms of the
allocator-related specification(<sref ref="[string.require]"/> p3).
</p>

<note>2020-05-03 Reflector discussion</note>
<p>
Tentatively Resolved by <a href="https://wg21.link/p0408r7">P0408R7</a> adopted in Cologne 2019.
<p/>
The change we approved is not what the issue recommended (and not what some implementations do), 
so we decided with leaving it as Tentatively Resolved to give people a chance to review it.
</p>
</discussion>

<rationale>
Resolved by <a href="https://wg21.link/p0408r7">P0408R7</a>.
</rationale>

<resolution>
</resolution>

</issue>
