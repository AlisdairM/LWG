<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3937" status="New">
<title>I/O manipulators should be specified in terms of base classes</title>
<section>
  <sref ref="[std.manip]"/>
  <sref ref="[ext.manip]"/>
  <sref ref="[quoted.manip]"/>
</section>
<submitter>Jonathan Wakely</submitter>
<date>25 May 2023</date>
<priority>3</priority>

<discussion>
<p>
All the manipulators in <sref ref="[std.manip]"/> and <sref ref="[ext.manip]"/>
use language of the form:
</p>
<blockquote>
An object of unspecified type such that if <code>out</code>
is an object of type <code>basic_ostream&lt;charT, traits&gt;</code>
then the expression <code>out &lt;&lt; resetiosflags(mask)</code> behaves as if
[...]
</blockquote>
<p>
This needs to work for any object with a public and unambiguous base class
of type <code>basic_ostream&lt;charT, traits&gt;</code>, not only objects
of exactly that type.
</p>
<p>
In C++98 and C++03, <code>setfill</code> did actually get this right
("if <code>out</code> is (or is derived from)
<code>basic_ostream&lt;charT,traits&gt;</code>"),
but that was "fixed" for C++11 to be consistent with the other manipulators.
</p>
<p>
<sref ref="[quoted.manip]"/> is slightly different, talking about
"an instance of <code>basic_ostream</code>", but that's not right either.
</p>

<note>2023-06-01; Reflector poll</note>
<p>
Set priority to 3 after reflector poll.
</p>

</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
