<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3082" status="New">
<title><tt>from_chars</tt> specification regarding floating point rounding is inconsistent</title>
<section><sref ref="[charconv.from.chars]"/></section>
<submitter>Greg Falcon</submitter>
<date>12 Mar 2018</date>
<priority>2</priority>

<discussion>
<p>
<a href="http://wg21.link/p0682r1">P0682R1</a> added the requirement that <tt>from_chars</tt> use 
<tt>round_to_nearest</tt> when converting from string, but later text in the section suggests that 
the implementation has latitude in its choice of rounding logic.
<p/>
If the intent is merely that the floating point environment should not affect <tt>from_chars</tt> behavior, 
the rounding-mode text should be weakened. If the intent is to always require <tt>round_to_nearest</tt>, 
the text suggesting a latitude in rounding logic should be removed.
</p>

<note>2018-03-27 Priority set to 2 after discussion on the reflector.</note>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4727">N4727</a>.
</p>

<ol>
<li>
<p>Edit <sref ref="[charconv.from.chars]"/> as indicated:</p>
<blockquote>
<pre>
from_chars_result from_chars(const char* first, const char* last, float&amp; value,
                             chars_format fmt = chars_format::general);
from_chars_result from_chars(const char* first, const char* last, double&amp; value,
                             chars_format fmt = chars_format::general);
from_chars_result from_chars(const char* first, const char* last, long double&amp; value,
                             chars_format fmt = chars_format::general);
</pre>
<blockquote>
<p>
-6- <i>Requires:</i> <tt>fmt</tt> has the value of one of the enumerators of <tt>chars_format</tt>.
<p/>
-7- <i>Effects:</i> The pattern is the expected form of the subject sequence in the <tt>"C"</tt> 
locale, as described for <tt>strtod</tt>, except that
</p>
<ol style="list-style-type: none">
<li><p>(7.1) [&hellip;]</p></li>
<li><p>(7.2) [&hellip;]</p></li>
<li><p>(7.3) [&hellip;]</p></li>
<li><p>(7.4) [&hellip;]</p></li>
</ol>
<p>
In any case, the resulting value is <del>one of at most two</del><ins>the</ins> floating-point 
value<del>s</del> closest to the value of the string matching the pattern<ins>, with ties broken 
according to <tt>round_to_nearest</tt></ins>.
<p/>
[&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
