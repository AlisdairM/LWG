<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3135" status="Resolved">
<title>[fund.ts.v3] LFTSv3 contains two redundant alias templates</title>
<section><sref ref="[meta.type.synop]"/><sref ref="[header.memory.synop]"/></section>
<submitter>Thomas K&ouml;ppe</submitter>
<date>2 Jul 2018</date>
<priority>3</priority>

<discussion>
<p><b>Addresses: fund.ts.v3</b></p>
<p>
The LFTSv3 prospective-working-paper <a href="https://wg21.link/n4758">N4758</a> contains two aliases 
that are already in C++17:
</p>
<ul>
<li><p><tt>void_t</tt> in <sref ref="[meta.type.synop]"/></p></li>
<li><p><tt>uses_allocator_v</tt> in <sref ref="[header.memory.synop]"/></p></li>
</ul>
<p>
I'd like to propose deleting both, but separate discussion is warranted:
<p/>
<tt>void_t</tt> belongs with the larger "detection idiom", which has not been merged into C++17. We may prefer 
to keep our own local version of the alias.
<p/>
<tt>uses_allocator_v</tt> aliases a version of <tt>uses_allocator</tt> that is modified by this TS. However, 
as specified the alias may actually end up referring to <tt>std::uses_allocator</tt> (because 
<tt>&lt;memory&gt;</tt> is included), not to <tt>std::experimental::uses_allocator</tt>, as may have been intended.
</p>

<note>2018-07-20 Priority set to 3 after reflector discussion</note>

<note>2020-05-03 Reflector discussion</note>
<p>
Resolved by <a href="https://wg21.link/p1210r0">P1210R0</a> accepted during the San Diego 2018 meeting.
</p>
</discussion>

<rationale>
Resolved by <a href="https://wg21.link/p1210r0">P1210R0</a>
</rationale>

<resolution>
</resolution>

</issue>
