<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3470" status="New">
<title><tt><i>convertible-to-non-slicing</i></tt> seems to reject valid case</title>
<section><sref ref="[range.subrange]"/></section>
<submitter>S. B. Tam</submitter>
<date>26 Jul 2020</date>
<priority>99</priority>

<discussion>
<p>
Consider
</p>
<blockquote><pre>
#include &lt;ranges&gt;

int main() 
{
  int a[3] = { 1, 2, 3 };
  int* b[3] = { &amp;a[2], &amp;a[0], &amp;a[1] };
  auto c = std::ranges::subrange&lt;const int*const*&gt;(b);
}
</pre></blockquote>
<p>
The construction of <tt>c</tt> is ill-formed because <tt><i>convertible-to-non-slicing</i>&lt;int**, const int*const*&gt;</tt> 
is <tt>false</tt>, although the conversion does not involve object slicing.
<p/>
I think <tt>subrange</tt> should allow such qualification conversion, just like <tt>unique_ptr&lt;T[]&gt;</tt> already does.
<p/>
(Given that this constraint is useful in more than one context, maybe it deserves a named type trait?)
</p>
</discussion>

<resolution>
</resolution>

</issue>
