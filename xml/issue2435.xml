<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2435" status="Ready">
<title><tt>reference_wrapper::operator()</tt>'s Remark should be deleted</title>
<section><sref ref="[refwrap.invoke]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>1 Oct 2014</date>
<priority>4</priority>

<discussion>
<p>
<sref ref="[refwrap.invoke]"/>/2 is no longer useful. (It was originally TR1 2.1.2.4 [tr.util.refwrp.invoke]/2.)  
First, we already have the As If Rule (<sref ref="[intro.execution]"/>/1) and the STL Implementers Can Be Sneaky Rule 
(<sref ref="[member.functions]"/>). Second, with variadic templates and other C++11/14 tech, this can be implemented 
exactly as depicted.
</p>

<note>2015-05, Lenexa</note>
<p>
DK: I don't see a defect here<br/>
STL: the issue is that the standard is overly verbose, we don't need this sentence. It's redundant.<br/>
MC: does anyone think this paragraph has value?<br/>
JW: it has negative value. reading it makes me wonder if there's some reason I would want to provide a set of overloaded 
functions, maybe there's some problem with doing it the obvious way that I'm not clever enough to see.<br/>
Move to Ready status: 8 in favor, none against. 
</p>
</discussion>

<resolution>
<p>
This wording is relative to N3936.
</p>

<ol>
<li><p>Change <sref ref="[refwrap.invoke]"/> p2 as depicted:</p>

<blockquote>
<pre>
template &lt;class... ArgTypes&gt;
  result_of_t&lt;T&amp;(ArgTypes&amp;&amp;...)>
    operator()(ArgTypes&amp;&amp;... args) const;
</pre>
<blockquote>
<p>
-1- <i>Returns</i>: <tt>INVOKE(get(), std::forward&lt;ArgTypes&gt;(args)...)</tt>. (20.9.2)
<p/>
<del>-2- <i>Remark</i>: <tt>operator()</tt> is described for exposition only. Implementations are not required to provide an
actual <tt>reference_wrapper::operator()</tt>. Implementations are permitted to support <tt>reference_wrapper</tt> function 
invocation through multiple overloaded operators or through other means.</del>
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
