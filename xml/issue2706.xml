<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2706" status="WP">
<title>Error reporting for <tt>recursive_directory_iterator::pop()</tt> is under-specified</title>
<section><sref ref="[class.rec.dir.itr]"/></section>
<submitter>Eric Fiselier</submitter>
<date>9 May 2016</date>
<priority>0</priority>

<discussion>
<p>
Unlike <tt>increment</tt>, <tt>pop()</tt> does not specify how it reports errors nor does it provide a 
<tt>std::error_code</tt> overload. However implementing <tt>pop()</tt> all but requires performing an increment, 
so it should handle errors in the same way.
</p>
</discussion>

<resolution>
<p>
This wording is relative to N4582.
</p>

<ol>
<li><p>Change <sref ref="[class.rec.dir.itr]"/>, class <tt>recursive_directory_iterator</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std::filesystem {
  class recursive_directory_iterator {
  public:
    [&hellip;]
    void pop();
    <ins>void pop(error_code&amp; ec);</ins>
    void disable_recursion_pending();
    [&hellip;]
  };
}
</pre>
</blockquote>
</li>

<li><p>Change <sref ref="[rec.dir.itr.members]"/> as indicated:</p>

<blockquote>
<pre>
void pop();
<ins>void pop(error_code&amp; ec);</ins>
</pre>
<blockquote>
<p>
-30- <i>Requires</i>: <tt>*this != recursive_directory_iterator()</tt>.
<p/>
-31- <i>Effects</i>: If <tt>depth() == 0</tt>, set <tt>*this</tt> to <tt>recursive_directory_iterator()</tt>. Otherwise, 
cease iteration of the directory currently being iterated over, and continue iteration over the parent directory.
<p/>
<ins>-?- <i>Throws</i>: As specified in Error reporting (<sref ref="[error.reporting]"/>).</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
