<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2589" status="WP">
<title><tt>match_results</tt> can't satisfy the requirements of a container</title>
<section><sref ref="[re.results]"/></section>
<submitter>S. B. Tam</submitter>
<date>24 Jan 2016</date>
<priority>3</priority>

<discussion>
<p>
N4567 <sref ref="[re.results]"/> p2 mentions
</p>
<blockquote>
<p>
The class template <tt>match_results</tt> shall satisfy the requirements of an allocator-aware container and of a
sequence container, as specifed in 23.2.3, except that only operations defined for const-qualified sequence
containers are supported.
</p>
</blockquote>
<p>
However, this is impossible because <tt>match_results</tt> has a <tt>operator==</tt> whose semantics differs from the one 
required in Table 95 &mdash; "Container requirements".
<p/>
Table 95 requires that <tt>a == b</tt> is an equivalence relation and means <tt>equal(a.begin(), a.end(), b.begin(), b.end())</tt>. 
But for <tt>match_results</tt>, <tt>a == b</tt> and <tt>equal(a.begin(), a.end(), b.begin(), b.end())</tt> can give different 
results. For example:
</p>
<blockquote><pre>
#include &lt;iostream&gt;
#include &lt;regex&gt;
#include &lt;string&gt;
#include &lt;algorithm&gt;

int main()
{
  std::regex re("a*");
  std::string target("baaab");
  std::smatch a;

  std::regex_search(target, a, re);

  std::string target2("raaau");
  std::smatch b;

  std::regex_search(target2, b, re);

  std::cout &lt;&lt; std::boolalpha;
  std::cout &lt;&lt; (a == b) &lt;&lt; '\n'; // false
  std::cout &lt;&lt; std::equal(a.begin(), a.end(), b.begin(), b.end()) &lt;&lt; '\n'; // true
}
</pre></blockquote>
<note>2016-02, Issues Telecon</note>
Marshall: The submitter is absolutely right, but the proposed resolution is insufficient. We should avoid "shall", for once.<br/>
Jonathan: This is NAD, because the container comparison functions say "unless otherwise stated", 23.3.1p14 and table 97.<br/>
Ville: wrong, table 95 is relevant for ==.<br/>
Jonathan: good point<br/>

<p>2016-05: Marshall cleans up the wording around the change</p>

<note>2016-08 - Chicago</note>
<p>Thurs AM: Moved to Tentatively Ready</p>

<p>
<strong>Previous resolution [SUPERSEDED]:</strong>
</p>
<blockquote class="note">
<p>
This wording is relative to N4567.
</p>

<ol>
<li><p>Change <sref ref="[re.results]"/> p2 as indicated:</p>
<blockquote><p>
-2- The class template <tt>match_results</tt> shall satisfy the requirements of an allocator-aware container and of a
sequence container, as specified in 23.2.3, except that only operations defined for const-qualified sequence
containers are supported <ins>and that the semantics of comparison functions are different from those required for a 
container</ins>.
</p></blockquote>
</li>
</ol>
</blockquote>

</discussion>

<resolution>
<p>
This wording is relative to N4567.
</p>

<ol>
<li><p>Change <sref ref="[re.results]"/> p2 as indicated:</p>
<blockquote><p>
-2- The class template <tt>match_results</tt> <del>shall satisfy</del><ins>satisfies</ins> the requirements of an allocator-aware container and of a
sequence container, <del>as specified in </del><ins>(</ins>23.2.3<ins>)</ins>, except that only operations defined for const-qualified sequence
containers are supported <ins>and the semantics of comparison functions are different from those required for a 
container</ins>.
</p></blockquote>
</li>
</ol>

<blockquote class="note">
<p>
[<i>Drafting note:</i> (Post-Issaquah) Due to the outdated N4567 wording the project editor accepted the following merge 
suggestion into N4606 wording: &mdash; <i>end drafting note</i>]
</p>
<blockquote>
<p>
This wording is relative to N4606.
</p>

<ol>
<li><p>Change <sref ref="[re.results]"/> p2 as indicated:</p>
<blockquote><p>
-2- The class template <tt>match_results</tt> satisfies the requirements of an
allocator-aware container and of a sequence container, <del>as specified in</del> 
<ins>(</ins><sref ref="[container.requirements.general]"/><del> and</del><ins>,</ins> 
<sref ref="[sequence.reqmts]"/><ins>)</ins><del> respectively</del>, except that only 
operations defined for const-qualified sequence containers are supported <ins>and the 
semantics of comparison functions are different from those required for a container</ins>.
</p></blockquote>
</li>
</ol>

</blockquote>
</blockquote>
</resolution>

</issue>
