<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4023" status="New">
<title>Preconditions of <tt>std::basic_streambuf::setg/setp</tt></title>
<section><sref ref="[streambuf.protected]"/></section>
<submitter>Jiang An</submitter>
<date>08 Dec 2023</date>
<priority>99</priority>

<discussion>
<p>
It seems that operations of <tt>std::basic_streambuf</tt> expect that
</p>
<ul>
<li><p><tt>[eback(), egptr())</tt> is a valid range and <tt>gptr()</tt> points into that range, and</p></li>
<li><p><tt>[pbase(), pptr())</tt> is a valid range and <tt>epptr()</tt> points into that range.</p></li>
</ul>
<p>
However, it is currently not specified for <tt>setg/setp</tt> that such invariants need to be established.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4964"/>.
</p>

<ol>

<li><p>Modify <sref ref="[streambuf.get.area]"/> as indicated:</p>

<blockquote>
<pre>
void setg(char_type* gbeg, char_type* gnext, char_type* gend);
</pre>
<blockquote>
<p>
<ins>-?- <i>Preconditions</i>: <tt>[gbeg,  gnext)</tt>, <tt>[gbeg, gend)</tt>, and <tt>[gnext, gend)</tt> are all valid ranges.</ins>
<p/>
-5- <i>Postconditions</i>: <tt>gbeg == eback()</tt>, <tt>gnext == gptr()</tt>, and <tt>gend == egptr()</tt> are all <tt>true</tt>.
</p>
</blockquote>
</blockquote>
</li>

<li><p>Modify <sref ref="[streambuf.put.area]"/> as indicated:</p>

<blockquote>
<pre>
void setp(char_type* pbeg, char_type* pend);
</pre>
<blockquote>
<p>
<ins>-?- <i>Preconditions</i>: <tt>[pbeg, pend)</tt> is a valid range.</ins>
<p/>
-5- <i>Postconditions</i>: <tt>pbeg == pbase()</tt>, <tt>pbeg == pptr()</tt>, and <tt>pend == epptr()</tt> are all <tt>true</tt>.
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
