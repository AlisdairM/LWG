<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3162" status="New">
<title><tt>system_error::system_error(error_code ec)</tt> not explicit</title>
<section><sref ref="[syserr.syserr.members]"/></section>
<submitter>Peter Dimov</submitter>
<date>2 Oct 2018</date>
<priority>3</priority>

<discussion>
<p>
The constructor for <tt>std::system_error</tt> taking a single argument of type <tt>std::error_code</tt> is 
not marked explicit, which allows implicit conversions from <tt>error_code</tt> to <tt>system_error</tt>. I 
think that this is an oversight and not intentional, and that we should make this constructor explicit.
</p>

<note>2020-04-07 Issue Prioritization</note>
<p>Priority to 3 after reflector discussion.</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4762">N4762</a>.</p>

<ol>
<li><p>Change <sref ref="[syserr.syserr.overview]"/> p2, class <tt>system_error</tt> synopsis, as indicated</p>
<blockquote><pre>
namespace std {
  class system_error : public runtime_error {
  public:
    system_error(error_code ec, const string&amp; what_arg);
    system_error(error_code ec, const char* what_arg);
    <ins>explicit</ins> system_error(error_code ec);
    system_error(int ev, const error_category&amp; ecat, const string&amp; what_arg);
    system_error(int ev, const error_category&amp; ecat, const char* what_arg);
    system_error(int ev, const error_category&amp; ecat);
    const error_code&amp; code() const noexcept;
    const char* what() const noexcept override;
  };
}
</pre></blockquote>
</li>

<li><p>Change <sref ref="[syserr.syserr.members]"/> as indicated</p>
<blockquote>
<pre>
<ins>explicit</ins> system_error(error_code ec);
</pre>
<blockquote>
<p>
-5- <i>Effects:</i> [&hellip;]
<p/>
-6- <i>Ensures:</i> [&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
