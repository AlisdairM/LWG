<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3234" status="New">
<title>Sufficient Additional Special Math Overloads</title>
<section><sref ref="[cmath.syn]"/></section>
<submitter>Casey Carter</submitter>
<date>11 Jul 2019</date>
<priority>3</priority>

<discussion>
<p>
The "sufficient additional overloads" wording in <sref ref="[cmath.syn]"/> paragraph 2 does not 
apply to the special math functions, since they are not "overloaded functions". The lack of 
"sufficient additional overloads" doesn't agree with <a href="https://wg21.link/n3060">N3060</a> (the 
final draft of ISO/IEC 29124 which standardized the mathematical special functions) [sf.cmath] 
paragraphs 3 and 4:
</p>
<blockquote>
<p>
-3- Each of the functions specified above that has one or more <tt>double</tt> parameters (the 
<tt>double</tt> version) shall have two additional overloads:
</p>
<ol><li><p>
a version with each <tt>double</tt> parameter replaced with a <tt>float</tt> parameter (the 
<tt>float</tt> version), and
</p></li><li><p>
a version with each <tt>double</tt> parameter replaced with a <tt>long double</tt> parameter (the 
<tt>long double</tt> version).
</p></li>
</ol>
<p>
The return type of each such <tt>float</tt> version shall be <tt>float</tt>, and the return type of 
each such <tt>long double</tt> version shall be <tt>long double</tt>.
<p/>
-4- Moreover, each <tt>double</tt> version shall have sufficient additional overloads to determine 
which of the above three versions to actually call, by the following ordered set of rules:
</p>
<ol>
<li><p>
First, if any argument corresponding to a <tt>double</tt> parameter in the <tt>double</tt> version 
has type <tt>long double</tt>, the <tt>long double</tt> version is called.
</p></li><li><p>
Otherwise, if any argument corresponding to a <tt>double</tt> parameter in the <tt>double</tt> 
version has type <tt>double</tt> or has an integer type, the <tt>double</tt> version is called. 
</p></li><li><p>
Otherwise, the <tt>float</tt> version is called.
</p></li>
</ol>
</blockquote>
<p>
<a href="https://wg21.link/p0226r1">P226R1 "Mathematical Special Functions for C++17"</a> notably 
states: "At the level of and following [c.math], create a new subclause with heading and initial 
content the same as IS 29124:2010's clause [sf.cmath], 'Additions to header <tt>&lt;cmath&gt;</tt>,' 
renumbering as appropriate to the new context." which suggests the change between 29124 and C++17
was an oversight and not intentional.
<p/>
Notably there is implementation divergence: MSVC implements precisely the wording in C++17, whereas 
libstdc++ provides additional overloads as specified in 29124, so they disagree 
<a href="https://godbolt.org/z/C6_NB2">e.g. on whether <tt>std::sph_neumann({}, {})</tt> is 
well-formed</a>.
</p>

<note>2020-04-07 Issue Prioritization</note>
<p>Priority to 3 after reflector discussion.</p>
</discussion>

<resolution>
</resolution>
</issue>
