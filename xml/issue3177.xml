<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3177" status="Voting">
<title>Limit permission to specialize variable templates to program-defined types</title>
<section><sref ref="[namespace.std]"/></section>
<submitter>Johel Ernesto Guerrero Pe&ntilde;a</submitter>
<date>11 Dec 2018</date>
<priority>3</priority>

<discussion>
<p>
The permission denoted by [namespace.std]/3 should be limited to program-defined types.
</p>

<note>2018-12-21 Reflector prioritization</note>
<p>Set Priority to 3</p>
<p><strong>Previous resolution [SUPERSEDED]:</strong></p>
<blockquote class="note">
<p>This wording is relative to <a href="https://wg21.link/n4791">N4791</a>.</p>

<ol>
<li><p>Change <sref ref="[namespace.std]"/> as indicated:</p>
<blockquote>
<p>
-2- Unless explicitly prohibited, a program may add a template specialization for any standard library class
template to namespace <tt>std</tt> provided that (a) the added declaration depends on at least one program-defined
type and (b) the specialization meets the standard library requirements for the original template.(footnote 174)
<p/>
-3- The behavior of a C++ program is undefined if it declares an explicit or partial specialization of any standard
library variable template, except where explicitly permitted by the specification of that variable 
template<ins>, provided that the added declaration depends on at least one program-defined type</ins>.
</p>
</blockquote>
</li>
</ol>
</blockquote>

<note>2022-08-24; LWG telecon</note>
<p>Each variable template that grants permission to specialize already
states requirements more precisely than proposed here anyway.
For example, <code>disable_sized_range</code> only allows it for
cv-unqualified program-defined types.
Adding less precise wording here wouldn't be an improvement.
Add a note to make it clear we didn't just forget to say something here,
and to remind us to state requirements for each variable template in future.
</p>
<note>2022-08-25; Jonathan Wakely provides improved wording</note>


<note>2022-09-28; Reflector poll</note>
<p>
Set status to Tentatively Ready after seven votes in favour during reflector poll.
</p>

</discussion>

<resolution>
<p>This wording is relative to <paper num="N4910"/>.</p>

<ul>
<li><p>Change <sref ref="[namespace.std]"/> as indicated:</p>
<blockquote>
<p>
-2- Unless explicitly prohibited, a program may add a template specialization for any standard library class
template to namespace <tt>std</tt> provided that (a) the added declaration depends on at least one program-defined
type and (b) the specialization meets the standard library requirements for the original template.(footnote 163)
</p>
<p>
-3- The behavior of a C++ program is undefined if it declares an explicit or partial specialization of any standard
library variable template, except where explicitly permitted by the specification of that variable 
template.
</p>

<p>
<ins>
[<i>Note 1</i>:
The requirements on an explicit or partial specialization are stated
by each variable template that grants such permission.
&mdash; <i>end note</i>]
</ins>
</p>

</blockquote>
</li>
</ul>

</resolution>

</issue>
