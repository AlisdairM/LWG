<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3351" status="C++20">
<title><tt>ranges::enable_safe_range</tt> should not be constrained</title>
<section><sref ref="[ranges.syn]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>05 Dec 2019</date>
<priority>0</priority>

<discussion>
<p>
Currently <tt>ranges::enable_safe_range</tt> is constrained with <tt>ranges::range</tt>, which not only 
forces the compiler to do unnecessary satisfaction checking when it's used, but also creates a tricky 
dependency cycle (<tt>ranges::range</tt> depends on <tt>ranges::begin</tt> which depends on 
<tt>ranges::enable_safe_range</tt> which depends on <tt>ranges::range</tt>).
<p/>
The only place the variable template is expected to be used is in the <tt>ranges::safe_range</tt> concept, 
which already checks <tt>range&lt;T&gt;</tt> before using <tt>enable_safe_range&lt;T&gt;</tt> anyway.
<p/>
The constraint serves no purpose and should be removed.
</p>

<note>2019-12-12 Issue Prioritization</note>
<p>Status to Tentatively Ready and priority to 0 after eight positive votes on the reflector.</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4842">N4842</a>.</p>

<ol>
<li><p>Modify <sref ref="[ranges.syn]"/> as indicated:</p>

<blockquote class="note">
<p>
[<i>Drafting note:</i> The definition in <sref ref="[range.range]"/> p7 is already unconstrained, 
which contradicts the synopsis.]
</p>
</blockquote>

<blockquote>
<pre>
[&hellip;]
<i>// <sref ref="[range.range]"/>, ranges</i>
template&lt;class T&gt;
concept range = <i>see below</i>;

template&lt;<del>range</del><ins>class</ins> T&gt;
inline constexpr bool enable_safe_range = false;

template&lt;class T&gt;
concept safe_range = <i>see below</i>;
[&hellip;]
</pre>
</blockquote>
</li>

</ol>
</resolution>
</issue>
