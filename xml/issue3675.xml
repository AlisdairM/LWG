<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3675" status="New">
<title><tt>std::ios_base::iword/pword</tt> might be misspecified</title>
<section><sref ref="[ios.base.storage]"/></section>
<submitter>Jiang An</submitter>
<date>14 Feb 2022</date>
<priority>99</priority>

<discussion>
<p>
Currently <sref ref="[ios.base.storage]"/> p5 and p8 say "On failure, a valid <tt>long&amp;/void*&amp;</tt> 
initialized to <tt>0</tt>". Such wording seems wrong, because a <tt>long&amp;/void*&amp;</tt> variable or 
return value can't be initialized with <tt>0</tt>. And the values of referenced objects may be underspecified, 
because an implementation may reuse the same <tt>long/void*</tt> objects on failure, and thus it's insufficient 
to specify the initial values of these objects only.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4901"/>.
</p>

<ol>
<li><p>Modify <sref ref="[ios.base.storage]"/> as indicated:</p>

<blockquote>
<pre>
long&amp; iword(int idx);
</pre>
<blockquote>
<p>
-3- [&hellip;]
<p/>
-4- [&hellip;]
<p/>
-5- <i>Returns:</i> On success <tt>iarray[idx]</tt>. On failure, a<ins>n</ins> <del>valid</del> <ins>lvalue of type</ins> 
<tt>long<del>&amp;</del></tt> <ins>with value <tt>0L</tt></ins><del>initialized to <tt>0</tt></del>.
</p>
</blockquote>
<pre>
void*&amp; pword(int idx);
</pre>
<blockquote>
<p>
-6- [&hellip;]
<p/>
-7- [&hellip;]
<p/>
-8- <i>Returns:</i> On success <tt>parray[idx]</tt>. On failure<ins>,</ins> a<ins>n</ins> <del>valid</del> 
<ins>lvalue of type</ins> <tt>void*<del>&amp;</del></tt> <ins>with a null pointer value</ins><del>initialized 
to <tt>0</tt></del>.
<p/>
-9- <i>Remarks:</i> After a subsequent call to <tt>pword(int)</tt> for the same object, the earlier return value may no
longer be valid.
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
