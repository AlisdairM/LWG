<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3144" status="WP">
<title><tt>span</tt> does not have a <tt>const_pointer</tt> typedef</title>
<section><sref ref="[span.overview]"/></section>
<submitter>Louis Dionne</submitter>
<date>23 Jul 2018</date>
<priority>0</priority>

<discussion>
<p>
<tt>std::span</tt> does not have a typedef for <tt>const_pointer</tt> and <tt>const_reference</tt>. According to 
Marshall Clow, this is merely an oversight.
</p>

<note>2019-01-20 Reflector prioritization</note>
<p>Set Priority to 0 and status to Tentatively Ready</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4750">N4750</a>.
</p>

<ol>
<li>
<p>Change <sref ref="[span.overview]"/>, class template <tt>span</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std {
  template&lt;class ElementType, ptrdiff_t Extent = dynamic_extent&gt;
  class span {
  public:
    <i>// constants and types</i>
    using element_type = ElementType;
    using value_type = remove_cv_t&lt;ElementType&gt;;
    using index_type = ptrdiff_t;
    using difference_type = ptrdiff_t;
    using pointer = element_type*;
    <ins>using const_pointer = const element_type*;</ins>
    using reference = element_type&amp;;
    <ins>using const_reference = const element_type&amp;;</ins>
    using iterator = <i>implementation-defined</i>;
    using const_iterator = <i>implementation-defined</i>;
    using reverse_iterator = reverse_iterator&lt;iterator&gt;;
    using const_reverse_iterator = reverse_iterator&lt;const_iterator&gt;;
    static constexpr index_type extent = Extent;
  
    [&hellip;]
  };
  [&hellip;]
}
</pre>
</blockquote>
</li>
</ol>
</resolution>

</issue>
