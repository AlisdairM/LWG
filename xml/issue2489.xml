<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2489" status="WP">
<title><tt>mem_fn()</tt> should be <tt>noexcept</tt></title>
<section><sref ref="[func.memfn]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>27 Mar 2015</date>
<priority>0</priority>

<discussion>
<p>
<tt>mem_fn()</tt> is wide contract and doesn't do anything that could throw exceptions, so it should be marked <tt>noexcept</tt>.
<p/>
Note that <tt>mem_fn()</tt> is perfectly happy to wrap a null PMF/PMD, it just can't be invoked later. This is exactly like 
<tt>std::function</tt>, which can be constructed from null PMFs/PMDs. Therefore, <tt>mem_fn()</tt> will remain wide contract forever.
</p>

<note>2015-05, Lenexa</note>
<p>
Move to Immediate.
</p>

</discussion>

<resolution>
<p>This wording is relative to N4296.</p>

<ol>
<li><p>Change <sref ref="[function.objects]"/> p2 "Header <tt>&lt;functional&gt;</tt> synopsis" as depicted:</p>

<blockquote>
<pre>
[&hellip;]
<i>// 20.9.11, member function adaptors:</i>
template&lt;class R, class T&gt; <i>unspecified</i> mem_fn(R T::*) <ins>noexcept</ins>;
[&hellip;]
</pre>
</blockquote>
</li>

<li><p>Change <sref ref="[func.memfn]"/> as depicted:</p>

<blockquote>
<pre>
template&lt;class R, class T&gt; <i>unspecified</i> mem_fn(R T::* pm) <ins>noexcept</ins>;
</pre>
<blockquote>
<p>
[&hellip;]
<p/>
<del>-4- <i>Throws</i>: Nothing.</del>
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
