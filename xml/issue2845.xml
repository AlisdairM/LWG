<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2845" status="New">
<title><tt>enable_if</tt>, <tt>result_of</tt>, <tt>common_type</tt> and <tt>aligned_storage</tt> do not meet the definition 
of <tt>TransformationTrait</tt></title>
<section><sref ref="[meta.rqmts]"/></section>
<submitter>Tim Song</submitter>
<date>14 Dec 2016</date>
<priority>3</priority>

<discussion>
<p>
[meta.rqmts]/3 defines <tt>TransformationTrait</tt> as follows:
</p>
<blockquote><p>
A <tt><i>TransformationTrait</i></tt> modifies a property of a type. It shall be a class template that takes 
one template type argument and, optionally, additional arguments that help define the modification. It shall 
define a publicly accessible nested type named <tt>type</tt>, which shall be a synonym for the modified type.
</p></blockquote>
<p>
<tt>enable_if</tt>, <tt>result_of</tt> and <tt>common_type</tt> do not necessarily "define a publicly accessible nested type named <tt>type</tt>". 
<tt>aligned_storage</tt> takes no template type argument (it only has two non-type parameters). Yet [meta.trans]/2 
says that they are all <tt>TransformationTraits</tt>.
<p/>
Incidentally, with the exception of <tt>decay</tt>, it's not clear that any of the traits in [meta.trans.other] 
could really be described as "modify[ing] a property of a type".
</p>

<note>2017-01-27 Telecom</note>
<p>Priority 3</p>
</discussion>

<resolution>
</resolution>

</issue>
