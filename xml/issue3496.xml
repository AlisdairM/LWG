<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3496" status="New">
<title>What does "uniquely associated" mean for <tt>basic_syncbuf::emit()</tt>?</title>
<section><sref ref="[syncstream.syncbuf.members]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>10 Nov 2020</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[syncstream.syncbuf.members]"/> p5 says "May call member functions of <tt>wrapped</tt> while holding a 
lock uniquely associated with <tt>wrapped</tt>."
<p/>
It's unclear what "uniquely associated" means. Is it required to be a one-to-one mapping, so that every 
<tt>streambuf*</tt> that is wrapped is associated with a different lock?
<p/>
I believe the intention is only that for a given <tt>streambuf*</tt> every <tt>syncbuf</tt> that wraps it 
uses the same lock. The intention was that it's a valid implementation for the same lock to be used for more 
than one <tt>streambuf*</tt> (e.g. using a table of <tt>N</tt> locks which are indexed by a hash of the 
<tt>streambuf* value)</tt>. The current wording can be interpreted to forbid that implementation.
</p>
</discussion>

<resolution>
</resolution>

</issue>
