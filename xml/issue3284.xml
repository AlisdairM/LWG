<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3284" status="Voting">
<title><tt>random_access_iterator</tt> semantic constraints accidentally promote difference type
 using unary negate</title>
<section><sref ref="[iterator.concept.random.access]"/></section>
<submitter>Eric Niebler</submitter>
<date>10 Sep 2019</date>
<priority>0</priority>

<discussion>
<p>
<sref ref="[iterator.concept.random.access]"/>/p2.7 says:
</p>
<blockquote><p>
<tt>(b += -n)</tt> is equal to <tt>a</tt>
</p></blockquote>
<p>
Unary minus can do integer promotion. That is not the intent here.
</p>

<note>2019-10-12 Issue Prioritization</note>
<p>Status to Tentatively Ready and priority to 0 after five positive votes on the reflector.</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4830">N4830</a>.</p>

<ol>
<li><p>Modify <sref ref="[iterator.concept.random.access]"/> as indicated:</p>

<blockquote>
<p>
-2- Let <tt>a</tt> and <tt>b</tt> be valid iterators of type <tt>I</tt> such that <tt>b</tt> 
is reachable from <tt>a</tt> after <tt>n</tt> applications of <tt>++a</tt>, let <tt>D</tt> be
<tt>iter_difference_t&lt;I&gt;</tt>, and let <tt>n</tt> denote a value of type <tt>D</tt>. 
<tt>I</tt> models <tt>random_access_iterator</tt> only if:
</p>
<ol style="list-style-type: none">
<li><p>(2.1) &mdash; <tt>(a += n)</tt> is equal to <tt>b</tt>.</p></li>
<li><p>[&hellip;]</p></li>
<li><p>(2.7) &mdash; <tt>(b += <ins>D(</ins>-n<ins>)</ins>)</tt> is equal to <tt>a</tt>.</p></li>
<li><p>[&hellip;]</p></li>
</ol>
</blockquote>
</li>

</ol>

</resolution>
</issue>
