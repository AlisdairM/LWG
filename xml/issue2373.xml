<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2373" status="NAD">
<title>Make new entities and names in namespace <tt>std</tt> conforming extensions</title>
<section><sref ref="[conforming]"/></section>
<submitter>Chandler Carruth</submitter>
<date>22 Mar 2014</date>
<priority>3</priority>

<discussion>
<p>
Technically, right now, it is not a conforming extension to add a new function to namespace <tt>std</tt>. Doing so could cause 
unqualified lookup on the name of that function in the presence of a using directive to find a different function. This seems 
an unreasonable restriction on library vendors providing conforming extensions, as such a using directive seems inherently risky 
in unqualified name lookup.
</p>
<p>
<sref ref="[member.functions]"/> implies that adding overloads to a method <em>is</em> a conforming extension, and within some 
limits the same is true for global functions due to <sref ref="[global.functions]"/>.
<p/>
It would likely be useful to specify that other new entities are valid conforming extensions, or preclude them where they pose 
serious compatibility problems.
</p>

<note>Lenexa 2015-05-06: Move to NAD</note>
<p>JY: It's a design question, move to LEWG?</p>
<p>AM: NAD: extensions led to us being unable to use the names hash_map, leading to unordered_map etc. Will result in collisions between members.</p>
<p>MC: Agrees, implementations that extend std:: must use __ugly_names for this reason.</p>
<p>JY: I would not oppose NAD.</p>
<p>Move to NAD, consensus.</p>

</discussion>

<resolution>
</resolution>

</issue>
