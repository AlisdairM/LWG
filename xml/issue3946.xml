<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3946" status="WP">
<title>The definition of <tt>const_iterator_t</tt> should be reworked</title>
<section><sref ref="[ranges.syn]"/></section>
<submitter>Christopher Di Bella</submitter>
<date>13 Jun 2023</date>
<priority>99</priority>

<discussion>
<p>
During the reflector discussion of <paper num="P2836"/>, consensus was reached that <tt>const_iterator_t&lt;R&gt;</tt> 
doesn't necessarily provide the same type as <tt>decltype(ranges::cbegin(r))</tt>, and that it should be changed to 
the proposed resolution below so that they're consistent.
</p>

<note>Varna 2023-06-14; Move to Ready</note>
<note>2023-11-11 Approved at November 2023 meeting in Kona. Status changed: Voting &rarr; WP.</note>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4950"/>.
</p>

<ol>
<li><p>Modify <sref ref="[ranges.syn]"/>, header <tt>&lt;ranges&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
[&hellip;]
template&lt;range R&gt;
  using const_iterator_t = <ins>decltype(ranges::cbegin(declval&lt;R&amp;&gt;()))</ins><del>const_iterator&lt;iterator_t&lt;R&gt;&gt;</del>; // <i>freestanding</i>
template&lt;range R&gt;
  using const_sentinel_t = <ins>decltype(ranges::cend(declval&lt;R&amp;&gt;()))</ins><del>const_sentinel&lt;sentinel_t&lt;R&gt;&gt;</del>;   // <i>freestanding</i>
[&hellip;]
</pre>
</blockquote>
</li>

</ol>
</resolution>

</issue>
