<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2810" status="Resolved">
<title><tt>use_count</tt> and <tt>unique</tt> in <tt>shared_ptr</tt></title>
<section><sref ref="[util.smartptr.shared]"/></section>
<submitter>Marshall Clow</submitter>
<date>9 Nov 2016</date>
<priority>99</priority>

<discussion>
<p>
<b>Addresses CA 14</b>
</p>
<p>
The removal of the "debug only" restriction for 
<tt>use_count()</tt> and <tt>unique()</tt> in <tt>shared_ptr</tt>
introduced a bug: in order for <tt>unique()</tt> to produce 
a useful and reliable value, it needs a synchronize clause to 
ensure that prior accesses through another reference are visible to the 
successful caller of <tt>unique()</tt>. Many current implementations use 
a relaxed load, and do not provide this guarantee, since it's not stated in the 
Standard. For debug/hint usage that was OK. Without it the specification is 
unclear and misleading.
</p>
<p>
Proposed change:
<p/>
A solution could make <tt>unique()</tt> use <tt>memory_order_acquire</tt>, and 
specifying that reference count decrement operations synchronize with 
<tt>unique()</tt>. This won't provide sequential consistency but may be useful.
We could also specify <tt>use_count()</tt> as only providing an unreliable hint 
of the actual count, or deprecate it.
</p>

<note>Issues Telecon 16-Dec-2016</note>
<p>Resolved by adoption of <a href="http://wg21.link/P0521R0">P0521R0</a>.</p>
</discussion>

<resolution>
</resolution>

</issue>
