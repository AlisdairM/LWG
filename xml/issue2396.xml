<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2396" status="New">
<title><tt>underlying_type</tt> doesn't say what to do for an incomplete enumeration type</title>
<section><sref ref="[meta.trans.other]"/></section>
<submitter>Richard Smith</submitter>
<date>12 Jun 2014</date>
<priority>99</priority>

<discussion>
<p>
Consider:
</p>
<blockquote><pre>
enum E {
  e = std::underlying_type&lt;E&gt;::type(1)
};
</pre></blockquote>
<p>
Clearly this should be ill-formed, but the library section doesn't appear to ban it. Suggestion:
<p/>
Change in <sref ref="[meta.trans.other]"/> Table 57:
</p>
<blockquote>
<p>
Template: <tt>template&lt;class T&gt; struct underlying_type;</tt>
<p/>
Condition: <tt>T</tt> shall be <ins>a complete</ins> <del>an</del> enumeration type (7.2)
<p/>
Comments: [&hellip;]
</p>
</blockquote>
</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Change Table 57 &mdash; "Other transformations" as indicated:</p></li>

<blockquote>
<table border="1">
<caption>Table 3 &mdash; Other type transformations</caption>
<tr>
<th align="center">Template</th>
<th align="center">Condition</th>
<th align="center">Comments</th>
</tr>

<tr>
<td colspan="3" align="center">
<tt>&hellip;</tt>
</td>
</tr>

<tr>
<td>
<tt>template &lt;class T&gt;<br/>
struct underlying_type;</tt>
</td>
<td>
T shall be <ins>a complete</ins> <del>an</del> enumeration type (7.2)
</td>
<td>
[&hellip;]
</td>
</tr>

</table>
</blockquote>

</ol>
</resolution>

</issue>
