<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY hellip "&#x2026;">
  <!ENTITY mdash  "&#x2014;">
] >

<issue num="2518" status="New">
<title>[fund.ts.v2] Non-member <tt>swap</tt> for <tt>propagate_const</tt> should call member <tt>swap</tt></title>
<section><sref ref="[propagate_const.algorithms]"/></section>
<submitter>Tim Song</submitter>
<date>8 Jul 2015</date>
<priority>3</priority>

<discussion>
<p><b>Addresses: fund.ts.v2</b></p>
<p>
 For consistency with the rest of the standard library, the non-member <tt>swap</tt> for <tt>propagate_const</tt> should 
 call member <tt>swap</tt>.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4529.html">N4529</a>.
</p>

<ol>
<li><p>Edit [propagate_const.algorithms] as indicated:</p>
<blockquote>
<pre>
-1- template &lt;class T&gt;
constexpr void swap(propagate_const&lt;T&gt;&amp; pt1, propagate_const&lt;T&gt;&amp; pt2) noexcept(<i>see below</i>)
</pre>
<blockquote>
<p>
-2- The constant-expression in the exception-specification is <tt>noexcept(<del>swap(pt1.t_, pt2.t_)</del><ins>pt1.swap(pt2)</ins>)</tt>.
<p/>
-3- <i>Effects</i>: <tt><del>swap(pt1.t_, pt2.t_)</del><ins>pt1.swap(pt2)</ins></tt>. 
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
