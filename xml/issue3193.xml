<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3193" status="New">
<title><i>Mandates:</i> and <i>Expects:</i> elements are not defined for types</title>
<section><sref ref="[structure.specifications]"/></section>
<submitter>Daniel Kr&uuml;gler</submitter>
<date>04 Mar 2019</date>
<priority>99</priority>

<discussion>
<p>
The working paper uses the special elements <i>Mandates:</i>, <i>Expects:</i> as well as 
<i>Requires:</i> to types, albeit <sref ref="[structure.specifications]"/> defines them 
only for functions, for example <sref ref="[structure.specifications]"/> sub-bullet (3.4):
</p>
<blockquote><p>
<i>Expects:</i> the conditions (sometimes termed preconditions) that the function assumes to hold whenever
it is called.
</p></blockquote>
<p>
Examples for such usages on types are (from <a href="https://wg21.link/n4800">N4800</a>):
</p>
<ul>
<li><p><sref ref="[char.traits.typedefs]"/> for types <tt>int_type</tt> and <tt>state_type</tt></p></li>
<li><p><sref ref="[pair.astuple]"/> for <tt>tuple_element&lt;I, pair&lt;T1, T2&gt;&gt;::type</tt></p></li>
<li><p><sref ref="[tuple.helper]"/> for <tt>tuple_element&lt;I, tuple&lt;Types...&gt;&gt;::type</tt></p></li>
<li><p><sref ref="[tuple.traits]"/> for <tt>uses_allocator&lt;tuple&lt;Types...&gt;, Alloc&gt;</tt></p></li>
<li><p>Table 62 &mdash; "Container requirements" for type <tt>XX::value_type</tt></p></li>
<li><p>Table 65 &mdash; "Allocator-aware container requirements" for type <tt>allocator_type</tt></p></li>
<li><p>Table 69 &mdash; "Associative container requirements" for types <tt>X::value_type</tt> and <tt>X::key_compare</tt></p></li>
<li><p>Table 70 &mdash; "Unordered associative container requirements" for types <tt>X::value_type</tt> and <tt>X::key_equal</tt></p></li>
</ul>
<p>
Instead of replacing these elements usages for these places by extra wording to reach the same effects I
recommend to update instead <sref ref="[structure.specifications]"/> to ensure that requirement-expressing elements
are defined in a way that it also allows to express requirements imposed on types by these elements to standardize 
"existing practice". 
<p/>
Considering details, it seems obvious that <i>Mandates:</i>, <i>Expects:</i> as well as <i>Requires:</i> are "suitable"
to be defined for types (With the acceptance of <a href="https://wg21.link/p1463r1">P1463R1</a> there are now also
<i>Mandates:</i> for types such as Table 65 &mdash; "Allocator-aware container requirements" for type <tt>allocator_type</tt>). 
<p/>
For <i>Constraints:</i> the meaning would not be so clear: Should it mean that there is conditionally a type defined or not? 
According to  the submitters knowledge there are currently no known examples for <i>Constraints:</i> to specify 
constraint on types, therefore I'm suggesting to restrict this extension to <i>Mandates:</i>, <i>Expects:</i>, 
and <i>Requires:</i> alone.
</p>
</discussion>

<resolution>
</resolution>
</issue>
