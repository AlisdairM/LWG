<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3027" status="New">
<title>[networking.ts] <tt>DynamicBuffer</tt> <tt>prepare</tt> exception specification</title>
<section><sref ref="[buffer.reqmts.dynamicbuffer]"/></section>
<submitter>Vinnie Falco</submitter>
<date>16 Oct 2017</date>
<priority>99</priority>

<discussion>
<p><b>Addresses: networking.ts</b></p>
<p>
The current wording for the <tt>DynamicBuffer</tt> <tt>prepare</tt>
member function implies that <tt>std::length_error</tt> is the
only allowable thrown exception. This should be changed to reflect that
any exception may be thrown, with <tt>std::length_error</tt> thrown
in particular when <tt>size() + n</tt> exceeds <tt>max_size()</tt>.
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4588">N4588</a>.</p>

<ol>
<li><p>Change <sref ref="[buffer.reqmts.dynamicbuffer]"/>, Table 14 "DynamicBuffer requirements", as indicated:</p>

<blockquote>
<table border="1">
<caption>Table 14 &mdash; <tt>DynamicBuffer</tt> requirements</caption>
<tr>
<th>expression</th>
<th>return type</th>
<th>assertion/note pre/post-condition</th>
</tr>
<tr>
<td colspan="3" align="center">
<tt>[&hellip;]</tt>
</td>
</tr>
<tr>
<td>
<tt>x.prepare(n)</tt>
</td>
<td>
<tt>X::mutable_buffers_type</tt>
</td>
<td>
Returns a mutable buffer sequence <tt>u</tt><br/>
representing the writable bytes, and where<br/>
<tt>buffer_size(u) == n</tt> . The dynamic buffer<br/>
reallocates memory as required. All constant or<br/> 
mutable buffer sequences previously obtained using<br/>
<tt>data()</tt> or <tt>prepare()</tt> are invalidated.<br/>
<i>Throws:</i> <tt>length_error</tt> if <tt>size() + n</tt><br/>
exceeds <tt>max_size()</tt> <ins>or any other exception<br/> 
if the request cannot otherwise be satisfied</ins>.
</td>
</tr>
</table>
</blockquote>
</li>
</ol>
</resolution>

</issue>
