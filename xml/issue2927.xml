<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2927" status="New">
<title>Encoding a functor and argument types as a function signature for <tt>is_callable</tt> and <tt>result_of</tt> is fragile</title>
<section><sref ref="[meta.type.synop]"/><sref ref="[meta.rel]"/></section>
<submitter>United States</submitter>
<date>3 Feb 2017</date>
<priority>99</priority>

<discussion>
<b>Addresses US 85</b>

<p>The trick of encoding a functor and argument types as a function signature for <tt>is_callable</tt> and 
<tt>result_of</tt> loses <i>cv</i> information on argument types, fails for non-decayed function types, and is confusing. E.g.,</p>
<blockquote><pre>
typedef int MyClass::*mp; result_of_t&lt;mp(const MyClass)&gt;;
// should be const, but isn&rsquo;t
typedef int F(double); is_callable&lt;F(float)&gt;; // ill-formed
</pre></blockquote>

<p>Minimal change: </p>
<p>Replace <tt>is_callable&lt;Fn(ArgTypes...)&gt;</tt> with
<tt>is_callable&lt;Fn, ArgTypes...&gt;</tt>
and replace <tt>is_callable&lt;Fn(ArgTypes...), R&gt;</tt> with <tt>is_callable_r&lt;R, Fn, ArgTypes...&gt;</tt>.
Do the same for <tt>is_nothrow_callable</tt>.</p>

<p>Preferred change: </p>
<p>All of the above, plus <tt>deprecate result_of&lt;Fn(ArgTypes...)&gt;</tt> and replace it with 
<tt>result_of_invoke&lt;Fn, ArgTypes...&gt;</tt></p>

<p>See also LWG <iref ref="2895"/></p>
</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
