<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2837" status="New">
<title><tt>gcd</tt> and <tt>lcm</tt> should support a wider range of input values</title>
<section><sref ref="[numeric.ops.gcd]"/><sref ref="[numeric.ops.lcm]"/></section>
<submitter>Marshall Clow</submitter>
<date>16 Dec 2016</date>
<priority>99</priority>

<discussion>
<p>This is a duplicate of <iref ref="2792"/>, which addressed LFTS 2.</p>

<p>By the current definition, <tt>gcd((int64_t)1234, (int32_t)-2147483648)</tt> is 
ill-formed (because <tt>2147483648</tt> is not representable as a value of <tt>int32_t</tt>.)
We want to change this case to be well-formed. As long as both <tt>|m|</tt> and <tt>|n|</tt> 
are representable as values of the common type, absolute values can 
be calculate <tt>d</tt> without causing unspecified behavior, by converting <tt>m</tt> and <tt>n</tt> 
to the common type before taking the negation.
<p/>
Suggested resolution:
</p>
<blockquote><p>
<del><tt>|m|</tt> shall be representable as a value of type <tt>M</tt> and <tt>|n|</tt> shall 
be representable as a value of type <tt>N</tt></del><ins><tt>|m|</tt> and <tt>|n|</tt> shall be 
representable as a value of <tt>common_type_t&lt;M, N&gt;</tt></ins>.
</p></blockquote>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4604">N4604</a>.</p>

<ol>
<li><p>Edit <sref ref="[numeric.ops.gcd]"/> as indicated:</p>
<blockquote>
<pre>
template&lt;class M, class N&gt;
  constexpr common_type_t&lt;M, N&gt; gcd(M m, N n);
</pre>
<blockquote>
<p>
-2- <i>Requires:</i> <del><tt>|m|</tt> shall be representable as a value of type <tt>M</tt> and <tt>|n|</tt> shall 
be representable as a value of type <tt>N</tt></del><ins><tt>|m|</tt> and <tt>|n|</tt> shall be representable as 
a value of <tt>common_type_t&lt;M, N&gt;</tt></ins>. [<i>Note:</i> These requirements ensure, for example, that 
<tt>gcd(m, m) = |m|</tt> is representable as a value of type <tt>M</tt>. &mdash; <i>end note</i>] 
</p>
</blockquote>
</blockquote>
</li>

<li><p>Edit <sref ref="[numeric.ops.lcm]"/> as indicated:</p>
<blockquote>
<pre>
template&lt;class M, class N&gt;
  constexpr common_type_t&lt;M, N&gt; lcm(M m, N n);
</pre>
<blockquote>
<p>
-2- <i>Requires:</i> <del><tt>|m|</tt> shall be representable as a value of type <tt>M</tt> and <tt>|n|</tt> shall 
be representable as a value of type <tt>N</tt></del><ins><tt>|m|</tt> and <tt>|n|</tt> shall be representable as 
a value of <tt>common_type_t&lt;M, N&gt;</tt></ins>. The least common multiple of <tt>|m|</tt> and <tt>|n|</tt> shall 
be representable as a value of type <tt>common_type_t&lt;M, N&gt;</tt>.
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
