<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2967" status="New">
<title><tt>std::equal</tt> on empty ranges</title>
<section><sref ref="[alg.equal]"/></section>
<submitter>Gennaro Prota</submitter>
<date>26 May 2017</date>
<priority>99</priority>

<discussion>
<p>
The description of the <tt>std::equal()</tt> algorithm in the standard doesn't
make clear what the result of it is on empty ranges:
</p>
<blockquote><pre>
std::equal(first, first, second) ; // what does this return?
</pre></blockquote>
<p>
It should IMHO return true (two empty ranges are always equal).
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4659">N4659</a>.</p>

<ol>
<li>
<p>Edit <sref ref="[alg.equal]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class InputIterator1, class InputIterator2&gt;
  bool equal(InputIterator1 first1, InputIterator1 last1,
             InputIterator2 first2);
[&hellip;]
</pre>
<blockquote>
<p>
-1- <i>Remarks:</i> If <tt>last2</tt> was not given in the argument list, it denotes <tt>first2 + (last1 - first1)</tt> below.
<p/>
-2- <i>Returns:</i> <ins>If <tt>last1 - first1</tt> and <tt>last2 - first2</tt> are both zero, return <tt>true</tt>.</ins> If 
<tt>last1 - first1 != last2 - first2</tt>, return <tt>false</tt>. Otherwise return <tt>true</tt> if for every iterator 
<tt>i</tt> in the range <tt>[first1, last1)</tt> the following corresponding conditions hold: 
<tt>*i == *(first2 + (i - first1)), pred(*i, *(first2 + (i - first1))) != false</tt>. Otherwise, returns <tt>false</tt>.
<p/>
[&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
