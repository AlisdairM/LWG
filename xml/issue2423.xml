<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2423" status="New">
<title>Missing specification <tt>slice_array</tt>, <tt>gslice_array</tt>, <tt>mask_array</tt>, <tt>indirect_array</tt> copy constructor</title>
<section><sref ref="[template.slice.array]"/><sref ref="[template.gslice.array]"/>
         <sref ref="[template.mask.array]"/><sref ref="[template.indirect.array]"/></section>
<submitter>Akira Takahashi</submitter>
<date>12 Aug 2014</date>
<priority>99</priority>

<discussion>
<p>
I found a missing specification of the copy constructor of the following class templates:
</p>
<ul>
<li><p><tt>slice_array</tt> (<sref ref="[template.slice.array]"/>)</p></li>
<li><p><tt>gslice_array</tt> (<sref ref="[template.gslice.array]"/>)</p></li>
<li><p><tt>mask_array</tt> (<sref ref="[template.mask.array]"/>)</p></li>
<li><p><tt>indirect_array</tt> (<sref ref="[template.indirect.array]"/>)</p></li>
</ul>
</discussion>

<resolution>
<ol>
<li><p>Before <sref ref="[slice.arr.assign]"/> insert a new sub-clause as indicated:</p>

<p>
<ins><b>-?- <tt>slice_array</tt> constructors [slice.arr.cons]</b></ins>
</p>
<blockquote>
<pre>
<ins>slice_array(const slice_array&amp;);</ins>
</pre>
<p>
<ins>-?- <i>Effects</i>: Both slices refer to the same underlying array.</ins>
</p>
</blockquote>
</li>

<li><p>Before <sref ref="[gslice.array.assign]"/> insert a new sub-clause as indicated:</p>

<p>
<ins><b>-?- <tt>gslice_array</tt> constructors [gslice.array.cons]</b></ins>
</p>
<blockquote>
<pre>
<ins>gslice_array(const gslice_array&amp;);</ins>
</pre>
<p>
<ins>-?- <i>Effects</i>: Both slices refer to the same underlying array.</ins>
</p>
</blockquote>
</li>

<li><p>Before <sref ref="[mask.array.assign]"/> insert a new sub-clause as indicated:</p>

<p>
<ins><b>-?- <tt>mask_array</tt> constructors [mask.array.cons]</b></ins>
</p>
<blockquote>
<pre>
<ins>mask_array(const mask_array&amp;);</ins>
</pre>
<p>
<ins>-?- <i>Effects</i>: Both slices refer to the same underlying array.</ins>
</p>
</blockquote>
</li>

<li><p>Before <sref ref="[indirect.array.assign]"/> insert a new sub-clause as indicated:</p>

<p>
<ins><b>-?- <tt>indirect_array</tt> constructors [indirect.array.cons]</b></ins>
</p>
<blockquote>
<pre>
<ins>indirect_array(const indirect_array&amp;);</ins>
</pre>
<p>
<ins>-?- <i>Effects</i>: Both slices refer to the same underlying array.</ins>
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
