<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2582" status="New">
<title>[res.on.functions]/2's prohibition against incomplete types shouldn't apply to type traits</title>
<section><sref ref="[meta]"/></section>
<submitter>Tim Song</submitter>
<date>7 Jan 2016</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[res.on.functions]"/>/2.5 says that the behavior is undefined "if an incomplete type is used as a template argument 
when instantiating a template component, unless specifically allowed for that component."
<p/>
This rule should not apply to type traits &mdash; a literal application would make <tt>is_same&lt;void, void&gt;</tt> 
undefined behavior, since nothing in <sref ref="[meta]"/> (or elsewhere) "specifically allows" instantiating <tt>is_same</tt> 
with incomplete types.
<p/>
Traits that require complete types are already explicitly specified as such, so the proposed wording below simply negates 
<sref ref="[res.on.functions]"/>/2.5 for <sref ref="[meta]"/>.
</p>
</discussion>

<resolution>
<p>
This wording is relative to N4567.
</p>

<ol>
<li><p>Insert a new paragraph after <sref ref="[meta.type.synop]"/>/1:</p>

<blockquote>
<p>
<ins>-?- Unless otherwise specified, an incomplete type may be used to instantiate a template in this subclause.</ins>
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
