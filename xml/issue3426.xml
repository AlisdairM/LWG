<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3426" status="Tentatively Ready">
<title><tt>operator&lt;=&gt;(const unique_ptr&lt;T, D&gt;&amp;, nullptr_t)</tt> can't get no satisfaction</title>
<section><sref ref="[unique.ptr.special]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>09 Apr 2020</date>
<priority>0</priority>

<discussion>
<p>
The constraint for <tt>operator&lt;=&gt;(const unique_ptr&lt;T, D&gt;&amp;, nullptr_t)</tt>
cannot be satisfied, because <tt>std::three_way_comparable&lt;nullptr_t&gt;</tt> is <tt>false</tt>,
because <tt>nullptr &lt;=&gt; nullptr</tt> is ill-formed.
<p/>
We can make it work as intended by comparing <tt>x.get()</tt> to <tt>pointer(nullptr)</tt>
instead of to <tt>nullptr</tt> directly.
</p>

<note>2020-04-14; Replacing the functional cast by a <tt>static_cast</tt> as result of reflector discussion</note>

<note>2020-04-18 Issue Prioritization</note> 
<p>
Status set to Tentatively Ready after seven positive votes on the reflector.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4861">N4861</a>.
</p>

<ol>
<li><p>Modify <sref ref="[memory.syn]"/> as indicated:</p>

<blockquote>
<pre>
[&hellip;]
template&lt;class T, class D&gt;
  bool operator&gt;=(nullptr_t, const unique_ptr&lt;T, D&gt;&amp; y);
template&lt;class T, class D&gt;
  requires three_way_comparable<del>_with</del>&lt;typename unique_ptr&lt;T, D&gt;::pointer<del>, nullptr_t</del>&gt;
  compare_three_way_result_t&lt;typename unique_ptr&lt;T, D&gt;::pointer<del>, nullptr_t</del>&gt;
    operator&lt;=&gt;(const unique_ptr&lt;T, D&gt;&amp; x, nullptr_t);
[&hellip;]
</pre>
</blockquote>
</li>

<li><p>Modify <sref ref="[unique.ptr.special]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class T, class D&gt;
  requires three_way_comparable<del>_with</del>&lt;typename unique_ptr&lt;T, D&gt;::pointer<del>, nullptr_t</del>&gt;
  compare_three_way_result_t&lt;typename unique_ptr&lt;T, D&gt;::pointer<del>, nullptr_t</del>&gt;
    operator&lt;=&gt;(const unique_ptr&lt;T, D&gt;&amp; x, nullptr_t);
</pre>

<blockquote>
<p>
-18- <i>Returns:</i> <tt>compare_three_way()(x.get(), <ins>static_cast&lt;typename unique_ptr&lt;T, D&gt;::pointer&gt;(</ins>nullptr<ins>)</ins>)</tt>.
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>
</issue>
