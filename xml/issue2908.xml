<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2908" status="C++17">
<title>The less-than operator for shared pointers could do more</title>
<section><sref ref="[util.smartptr.shared.cmp]"/></section>
<submitter>United States</submitter>
<date>3 Feb 2017</date>
<priority>99</priority>

<discussion>
<b>Addresses US 135</b>

<p>The less-than operator for shared pointers compares only those combinations that can form a composite pointer type. 
With the C++17 wording for the diamond functor, <tt>less&lt;&gt;</tt>, we should be able to support comparison of a wider 
range of shared pointers, such that <tt>less&lt;&gt;::operator(shared_ptr&lt;A&gt;, shared_ptr&lt;B&gt;)</tt> is consistent 
with <tt>less&lt;&gt;::operator(A *, B *)</tt>.</p>

<p>Proposed change: Replace <tt>less&lt;V&gt;</tt> with just <tt>less&lt;&gt;</tt>, and drop the reference to composite 
pointer types.</p>

<note>2017-03-02, Kona, STL comments and provides wording</note>
<p>
We talked about this in LWG, and I talked to Alisdair. The status quo is already maximally general (operator less-than in 
Core always forms a composite pointer type), but we can use diamond-less to significantly simplify the specification.  
(We can't use less-than directly, due to the total ordering issue, which diamond-less was recently "upgraded" to handle.)
</p>

<note>Kona 2017-03-02</note>
<p>Accepted as Immediate to resolve NB comment.</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4640">N4640</a>.
</p>

<ol>
<li><p>Change <sref ref="[util.smartptr.shared.cmp]"/> as depicted:</p>

<blockquote>
<pre>
template&lt;class T, class U&gt;
bool operator&lt;(const shared_ptr&lt;T&gt;&amp; a, const shared_ptr&lt;U&gt;&amp; b) noexcept;
</pre>
<blockquote>
<p>
-2- <i>Returns:</i> <tt>less&lt;<del>V</del>&gt;()(a.get(), b.get())</tt><del>, where <tt>V</tt> is the composite pointer type (Clause 5) of 
<tt>shared_ptr&lt;T&gt;::element_type*</tt> and <tt>shared_ptr&lt;U&gt;::element_type*</tt></del>.
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
