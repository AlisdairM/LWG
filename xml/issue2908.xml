<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2908" status="New">
<title>The less-than operator for shared pointers could do more</title>
<section><sref ref="[util.smartptr.shared.cmp]"/></section>
<submitter>United States</submitter>
<date>3 Feb 2017</date>
<priority>99</priority>

<discussion>
<b>Addresses US 135</b>

<p>The less-than operator for shared pointers compares only those combinations that can form a composite pointer type. With the C++17 wording for the diamond functor, <tt>less&lt;&gt;</tt>, we should be able to support comparison of a wider range of shared pointers, such that <tt>less&lt;&gt;::operator(shared_ptr&lt;A&gt;, shared_ptr&lt;B&gt;)</tt> is consistent with <tt>less&lt;&gt;::operator(A *, B *)</tt>.</p>

<p>Proposed change: Replace <tt>less&lt;V&gt;</tt> with just <tt>less&lt;&gt;</tt>, and drop the reference to composite pointer types.</p>

</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
