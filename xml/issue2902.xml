<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2902" status="NAD">
<title><tt>variant</tt> should only support complete types</title>
<section><sref ref="[variant.variant]"/></section>
<submitter>United States</submitter>
<date>3 Feb 2017</date>
<priority>0</priority>

<discussion>
<b>Addresses US 114</b>

<p><tt>variant</tt> needs to know the size of an object in order to compute the size of its internal buffer, so 
require that any <i>cv</i>-qualified object type in <tt>Types...</tt> be a complete type.</p>
<p>Proposed change: Add 'complete' in p2</p>

<note>2017-07-01, Daniel comments</note>
<p>
I recommend to close this issue as NAD: According to <sref ref="[res.on.functions]"/> p2 plus bullet (2.5):
</p>
<blockquote>
<p>
-2- In particular, the effects are undefined in the following cases:
</p>
<ol style="list-style-type: none">
<li><p>&mdash; [&hellip;]</p></li>
<li><p>(2.5) &mdash; if an incomplete type (6.9) is used as a template argument when instantiating a template component,
unless specifically allowed for that component.</p></li>
</ol>
</blockquote>
<p>
In other words: The standard currently already requires type completeness for all types in <tt>Types...</tt> of
<tt>std::variant&lt;Types...&gt;</tt>, we therefore should not repeat that again (Note that other templates &mdash; such as 
<tt>shared_ptr</tt> &mdash; <em>grant</em> type <b>in</b>completeness allowance for that reason).
<p/>
The criteria for the alternative resolution form <a href="lwg-active.html#Resolved">Resolved</a> do not apply for this case, 
because the quoted constraint do exist since C++98 (see 17.4.3.6 [lib.res.on.functions] p2 b5), so the issue was not 
even an issue at the point of the submission.
</p>

<p><strong>Previous resolution [SUPERSEDED]:</strong></p>
<blockquote class="note">
<p>This wording is relative to <a href="https://wg21.link/N4618">N4618</a>.</p>
<ol>
<li><p>Edit <sref ref="[variant.variant]"/>/2 as indicated:</p>
<blockquote>
All types in <tt>Types...</tt> shall be (possibly <i>cv</i>-qualified)<ins> complete</ins> object types that are not arrays.
</blockquote>
</li>
</ol>
</blockquote>

<note>2017-07-06 Moved to Tentatively NAD after 5 positive votes on c++std-lib.</note>
</discussion>

<resolution>
<p>
The lack of the explicit constraint in <sref ref="[variant.variant]"/> is not a defect, because the general requirements in 
<sref ref="[res.on.functions]"/> p2 already impose the requested type completeness constraints.
</p>
</resolution>

</issue>
