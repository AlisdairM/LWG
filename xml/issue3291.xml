<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3291" status="C++20">
<title><tt>iota_view::iterator</tt> has the wrong <tt>iterator_category</tt></title>
<section><sref ref="[range.iota.iterator]"/></section>
<submitter>Eric Niebler</submitter>
<date>13 Sep 2019</date>
<priority>0</priority>

<discussion>
<p>
In the old way of looking at the world, forward iterators need to return real references. Since 
dereferencing <tt>iota_view</tt>'s iterators returns by value, it cannot be a C++17 forward 
iterator. (It can, however, be a C++20 <tt>forward_iterator</tt>.) However, <tt>iota_view</tt>'s 
iterator has an <tt>iterator_category</tt> that (sometimes) falsely claims that it is forward or 
better (depending on the properties of the <tt>weakly_incrementable</tt> type it wraps).
</p>

<note>2019-10-19 Issue Prioritization</note>
<p>Status to Tentatively Ready and priority to 0 after eight positive votes on the reflector.</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4830">N4830</a>.</p>

<ol>
<li><p>Modify <sref ref="[range.iota.iterator]"/> as indicated:</p>

<blockquote>
<blockquote>
<pre>
namespace std::ranges {
  template&lt;class W, class Bound&gt;
  struct iota_view&lt;W, Bound&gt;::iterator {
  private:
    [&hellip;]
  public:
    using iterator_c<ins>oncept</ins><del>ategory</del> = <i>see below</i>;
    <ins>using iterator_category = input_iterator_tag;</ins>
    using value_type = W;
    using difference_type = <i>IOTA-DIFF-T</i>(W);
    [&hellip;]
  };
  [&hellip;]
}
</pre>
</blockquote>
<p>
-1- <tt>iterator::iterator_c<ins>oncept</ins><del>ategory</del></tt> is defined as follows:
</p>
<ol style="list-style-type: none">
<li><p>(1.1) &mdash; If <tt>W</tt> models <tt><i>advanceable</i></tt>, then 
<tt>iterator_c<ins>oncept</ins><del>ategory</del></tt> is <tt>random_access_iterator_tag</tt>.</p></li>
<li><p>(1.2) &mdash; Otherwise, if <tt>W</tt> models <tt><i>decrementable</i></tt>, then 
<tt>iterator_c<ins>oncept</ins><del>ategory</del></tt> is <tt>bidirectional_iterator_tag</tt>.</p></li>
<li><p>(1.3) &mdash; Otherwise, if <tt>W</tt> models <tt>incrementable</tt>, then 
<tt>iterator_c<ins>oncept</ins><del>ategory</del></tt> is <tt>forward_iterator_tag</tt>.</p></li>
<li><p>(1.4) &mdash; Otherwise, <tt>iterator_c<ins>oncept</ins><del>ategory</del></tt> is 
<tt>input_iterator_tag</tt>.</p></li>
</ol>

</blockquote>
</li>

</ol>

</resolution>
</issue>
