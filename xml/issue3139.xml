<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3139" status="Open">
<title><tt>contract_violation</tt>'s special member functions</title>
<section><sref ref="[support.contract.cviol]"/></section>
<submitter>Tim Song</submitter>
<date>10 Jul 2018</date>
<priority>1</priority>

<discussion>
<p>
<tt>contract_violation</tt> is currently defined as:
</p>
<blockquote>
<pre>
class contract_violation {
public:
  uint_least32_t line_number() const noexcept;
  string_view file_name() const noexcept;
  string_view function_name() const noexcept;
  string_view comment() const noexcept;
  string_view assertion_level() const noexcept;
};
</pre>
</blockquote>
<p>
which implies a full set of defaulted special member functions with entirely 
unclear semantics, and can arguably be read to imply that it is an aggregate.
<p/>
It seems unlikely that we meant for users to default construct or copy
<tt>contract_violation</tt> objects, but if we did want to do that, we need to 
at least specify the behavior of a default constructed <tt>contract_violation</tt>
object and how copying and moving work with respect to the lifetime of the 
strings referenced by the <tt>string_view</tt>s returned by its member functions.
</p>

<note>2018-11 Reflector prioritization</note>
<p>Set Priority to 1</p>

<note>2019 Cologne Wednesday night</note>
<p><tt>= delete</tt> for copy/move assignment; Status to 'Open'; Daniel to provide wording</p>
</discussion>

<resolution>
</resolution>

</issue>
