<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3883" status="New">
<title>&sect;[support.c.headers.other] Ambiguity in the requirements for includes</title>
<section><sref ref="[support.c.headers.other]"/></section>
<submitter>Alex Mills</submitter>
<date>9 Feb 2023</date>
<priority>99</priority>

<discussion>
<p>
In <sref ref="[support.c.headers.other]"/>, it states that the <tt>&lt;<i>name</i>.h&gt;</tt> headers behave 
"as if each name placed in the standard library namespace by the corresponding header is placed within the 
global namespace scope". There are exceptions for several different definitions in the headers, but it's left 
ambiguous as to whether their inclusion in the <tt>&lt;<i>name</i>.h&gt;</tt> headers is required or unspecified.
<p/>
While it is clear that, for example, <tt>::byte</tt> is prohibited, it isn't clear whether <tt>std::byte</tt> 
is required to be included at all (this applies to the other listed exceptions as well). Though example 1 makes 
it appear that their inclusion requirements are meant to be left unspecified, paragraph 1 does not provide clarification. 
Adding specific wording will ensure this will not be misinterpreted in the future.
<p/>
To do this, we should append a sentence to [support.c.headers.other] p1:
</p>
<blockquote><p>
Whether the listed exceptions are included in their corresponding <tt>&lt;<i>name</i>.h&gt;</tt> headers under 
the standard library namespace is unspecified.
</p></blockquote>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4928"/>.
</p>

<ol>
<li><p>Modify <sref ref="[support.c.headers.other]"/> as indicated:</p>

<blockquote>
<p>
-1- Every C header other than <tt>&lt;complex.h&gt;</tt> (<sref ref="[complex.h.syn]"/>), 
<tt>&lt;iso646.h&gt;</tt> (<sref ref="[iso646.h.syn]"/>), 
<tt>&lt;stdalign.h&gt;</tt> (<sref ref="[stdalign.h.syn]"/>),
<tt>&lt;stdatomic.h&gt;</tt> (<sref ref="[stdatomic.h.syn]"/>), 
<tt>&lt;stdbool.h&gt;</tt> (<sref ref="[stdbool.h.syn]"/>), and 
<tt>&lt;tgmath.h&gt;</tt> (<sref ref="[tgmath.h.syn]"/>), each 
of which has a name of the form <tt>&lt;<i>name</i>.h&gt;</tt>, behaves as if each name placed in 
the standard library namespace by the corresponding <tt>&lt;c<i>name</i>&gt;</tt> header is placed 
within the global namespace scope, except for the functions described in <sref ref="[sf.cmath]"/>,
the <tt>std::lerp</tt> function overloads (<sref ref="[c.math.lerp]"/>), the declaration of 
<tt>std::byte</tt> (<sref ref="[cstddef.syn]"/>), and the functions and function templates described 
in <sref ref="[support.types.byteops]"/>. 
It is unspecified whether these names are first declared or defined within namespace scope 
(<sref ref="[basic.scope.namespace]"/>) of the namespace <tt>std</tt> and are then injected into the 
global namespace scope by explicit <i>using-declarations</i> (<sref ref="[namespace.udecl]"/>).
<ins>Whether the listed exceptions are included in their corresponding <tt>&lt;<i>name</i>.h&gt;</tt> 
headers under the standard library namespace is unspecified.</ins>
</p>
</blockquote>

</li>

</ol>
</resolution>

</issue>
