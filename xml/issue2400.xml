<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2400" status="WP">
<title><tt>shared_ptr</tt>'s <tt>get_deleter()</tt> should use <tt>addressof()</tt></title>
<section><sref ref="[util.smartptr.getdeleter]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>14 Jun 2014</date>
<priority>0</priority>

<discussion>
<p>
The Standard Library should consistently use <tt>addressof()</tt> to defend itself against overloaded <tt>operator&amp;()</tt>.
<p/>
While we're in the neighbourhood, we should editorially change <tt>0</tt> to <tt>nullptr</tt>.
</p>

<note>2014-06-16 Rapperswil</note>
<p>
Move to Ready
</p>

</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Change <sref ref="[util.smartptr.getdeleter]"/> as indicated:</p>

<blockquote>
<pre>
template &lt;class D, class T&gt; get_deleter(const shared_ptr&lt;T&gt;&amp; p) noexcept;
</pre>
<p>
-1- <i>Returns</i>: If <tt>p</tt> owns a deleter <tt>d</tt> of type cv-unqualified <tt>D</tt>, returns 
<tt><del>&amp;</del><ins>std::addressof(</ins>d<ins>)</ins></tt>; 
otherwise returns <tt><del>0</del><ins>nullptr</ins></tt>. [&hellip;]
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
