<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2860" status="Core">
<title><tt>launder</tt> and base class subobjects</title>
<section><sref ref="[ptr.launder]"/></section>
<submitter>Hubert Tong</submitter>
<date>31 Jan 2017</date>
<priority>2</priority>

<discussion>
<p>
There is an apparent oversight in the wording for <tt>launder</tt> that allows it to return base class 
subobjects which differ in their polymorphic behaviour between calls to <tt>launder</tt>.
</p>
<p>
This can be fixed by restricting <tt>launder</tt> from returning pointers to base class subobjects:
</p>
<ol>
<li><p>always, or</p></li>
<li><p>only for polymorphic class types.</p></li>
</ol>

<note>2017-03-04, Kona</note>
<p>Set priority to 2. This was discussed in EWG (via a paper). Assign this (and <iref ref="2859"/>) to Core.</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4618">N4618</a>.</p>

<ol style="list-style-type: none">
<li><p>Option 1:</p>

<ol>
<li><p>Modify <sref ref="[ptr.launder]"/> as indicated:</p>
<blockquote>
<pre>
template &lt;class T&gt; constexpr T* launder(T* p) noexcept;
</pre>
<blockquote>
<p>
-1- <i>Requires:</i> <tt>p</tt> represents the address <tt><i>A</i></tt> of a byte in memory. An object <tt><i>X</i></tt> 
that is within its lifetime (<sref ref="[basic.life]"/>) and whose type is similar (<sref ref="[conv.qual]"/>) to <tt>T</tt> 
is located at the address <tt><i>A</i></tt>. <ins><tt><i>X</i></tt> shall either be a most derived object, or 
pointer-interconvertible with a most derived object that is within its lifetime.</ins> All bytes of storage that would be 
reachable through the result are reachable through <tt>p</tt> (see below).
</p>
</blockquote>
</blockquote>
</li>

</ol>

</li>
<li><p>Option 2:</p>

<ol>
<li><p>Modify <sref ref="[ptr.launder]"/> as indicated:</p>
<blockquote>
<pre>
template &lt;class T&gt; constexpr T* launder(T* p) noexcept;
</pre>
<blockquote>
<p>
-1- <i>Requires:</i> <tt>p</tt> represents the address <tt><i>A</i></tt> of a byte in memory. An object <tt><i>X</i></tt> 
that is within its lifetime (<sref ref="[basic.life]"/>) and whose type is similar (<sref ref="[conv.qual]"/>) to <tt>T</tt> 
is located at the address <tt><i>A</i></tt>. <ins>If <tt>T</tt> is a polymorphic class type, then <tt><i>X</i></tt> shall 
be a most derived object.</ins> All bytes of storage that would be reachable through the result are reachable through 
<tt>p</tt> (see below).
</p>
</blockquote>
</blockquote>
</li>

</ol>

</li>
</ol>
</resolution>

</issue>
