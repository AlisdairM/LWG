<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2535" status="New">
<title>Inconsistency between <tt>ostream::write</tt> and <tt>ostream::operator&lt;&lt;</tt></title>
<section><sref ref="[string.io]"/><sref ref="[ostream.unformatted]"/></section>
<submitter>Marshall Clow</submitter>
<date>10 Sep 2015</date>
<priority>2</priority>

<discussion>
<p>
Consider the following program:
</p>
<blockquote><pre>
#include &lt;iostream&gt;
#include &lt;ostream&gt;
#include &lt;string&gt;

template &lt;class CharT&gt;
class testbuf : public std::basic_streambuf&lt;CharT&gt; 
{
public:
  testbuf() {}

protected:
  virtual std::streamsize xsputn(const CharT *s, std::streamsize n)
  {
    std::cout &lt;&lt; "xsputn('" &lt;&lt; s &lt;&lt; "', " &lt;&lt; n &lt;&lt; ")\n";
    return n;
  }
};

int main () 
{
  testbuf&lt;char&gt; sb;
  std::ostream os (&amp;sb);
  
  std::string s1{"abc"};
  os.write(s1.data(), s1.size());
  
  os.write(s1.data(), 0);
  
  std::string s2{"def"};
  os &lt;&lt; s2;
  
  std::string s3{""};
  os &lt;&lt; s3;
  
  os &lt;&lt; "";
}
</pre></blockquote>
<p>
What should it print?
<p/>
libc++:
</p>
<blockquote><pre>
xsputn('abc', 3)
xsputn('def', 3)
</pre></blockquote>
<p>
libstdc++:
</p>
<blockquote><pre>
xsputn('abc', 3)
xsputn('abc', 0)
xsputn('def', 3)
xsputn('', 0)
xsputn('', 0)
</pre></blockquote>
<p>
VS:
</p>
<blockquote><pre>
xsputn('abc', 3)
xsputn('def', 3)
xsputn('', 0)
xsputn('', 0)
</pre></blockquote>
<p>
<sref ref="[string.io]"/>/5 seems to say that an implementation is required to call <tt>sputn</tt> (which calls <tt>xsputn</tt>) 
even if there's nothing to output (in the case of <tt>ostream::operator&lt;&lt;(basic_string)</tt>).
<p/>
<sref ref="[ostream.unformatted]"/>/5.1 implies that it's OK to not call <tt>sputn</tt> if there's nothing to output 
(in the case of <tt>ostream::write</tt>)
<p/>
Backstory: A user has a <tt>ostream</tt> with a subclass of <tt>basic_streambuf</tt>. it creates an output file on first write. 
Sometimes, he calls <tt>ostream::write(p, 0)</tt>, and expects this to create the file. This doesn't work in libc++, and then 
he pointed out the inconsistency between <tt>operator&lt;&lt;</tt> and <tt>write</tt>.
<p/>
For reference to a bug report <a href="https://llvm.org/bugs/show_bug.cgi?id=24437">see here</a>.
<p/>
There are two obvious possible resolutions:
</p>
<ol style="list-style-type: none">
<li><p>a) require all output functions to call <tt>sputn</tt>, even if there are no characters to output. In practice, this 
reduces to "string-like" things which are empty (<tt>string</tt>, <tt>string_view</tt>, <tt>char*</tt>, etc), and 
<tt>write(ptr, len)</tt>.</p></li>
<li><p>b) remove the requirement that <tt>ostream::operator&lt;&lt;</tt> call <tt>sputn</tt> when there are no characters 
to output.</p></li>
</ol>
</discussion>

<resolution>
</resolution>

</issue>
