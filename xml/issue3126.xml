<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3126" status="New">
<title>There's no <tt>std::sub_match::compare(string_view)</tt> overload</title>
<section><sref ref="[re.submatch]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>26 Jun 2018</date>
<priority>99</priority>

<discussion>
<p>
<tt>std::sub_match::compare</tt> can be called with a <tt>basic_string</tt> or a pointer to a null-terminated 
character sequence, but can't be called with a <tt>basic_string_view</tt>. To compare to a <tt>string_view</tt> 
requires either conversion to <tt>basic_string</tt> (with a potential allocation) or a redundant call to 
<tt>traits_type::length</tt> to calculate a length that is already known.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4750">N4750</a>.
</p>

<blockquote class="note">
<p>
[<i>Drafting note:</i> the P/R is incomplete, as we should really overload all the comparison operators 
for <tt>sub_match</tt> to work with <tt>basic_string_view</tt>.]
</p>
</blockquote>

<ol>
<li>
<p>Change <sref ref="[re.submatch]"/>, class template <tt>sub_match</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std {
  template&lt;class BidirectionalIterator&gt;
  class sub_match : public pair&lt;BidirectionalIterator, BidirectionalIterator&gt; {
  public:
    using value_type =
      typename iterator_traits&lt;BidirectionalIterator&gt;::value_type;
    [&hellip;]
    int compare(const sub_match&amp; s) const;
    int compare(const string_type&amp; s) const;
    int compare(const value_type* s) const;
    <ins>int compare(basic_string_view&lt;value_type&gt; s) const;</ins>
  };
}
</pre>
</blockquote>
</li>

<li>
<p>Change <sref ref="[re.submatch.members]"/> as indicated:</p>

<blockquote>
<pre>
int compare(const value_type* s) const;
</pre>
<blockquote>
<p>
-7- <i>Returns:</i> <tt>str().compare(s)</tt>.
</p>
</blockquote>
<pre>
<ins>int compare(basic_string_view&lt;value_type&gt; s) const;</ins>
</pre>
<blockquote>
<p>
<ins>-?- <i>Returns:</i> <tt>str().compare(s)</tt>.</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
