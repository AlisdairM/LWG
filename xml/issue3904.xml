<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3904" status="Voting">
<title><tt>lazy_split_view::<i>outer-iterator</i></tt>'s <tt>const</tt>-converting constructor isn't setting <tt><i>trailing_empty_</i></tt></title>
<section><sref ref="[range.lazy.split.outer]"/></section>
<submitter>Patrick Palka</submitter>
<date>13 Mar 2023</date>
<priority>99</priority>

<discussion>
<p>
It seems the <tt>const</tt>-converting constructor for <tt>lazy_split_view</tt>'s iterator fails
to propagate <tt><i>trailing_empty_</i></tt> from the argument, which effectively results in
the trailing empty range getting skipped over:
</p>
<blockquote><pre>
auto r = views::single(0) | views::lazy_split(0); // r is { {}, {} }
auto i = r.begin();
++i; // i.trailing_empty_ is correctly true
decltype(std::as_const(r).begin()) j = i; // <span style="color:red;font-weight:bolder">j.trailing_empty_ is incorrectly false</span>
auto k = r.end(); // <span style="color:red;font-weight:bolder">k.trailing_empty_ is correctly false, and we wrongly have j == k</span>
</pre></blockquote>

<note>2023-05-24; Reflector poll</note>
<p>
Set status to Tentatively Ready after five votes in favour during reflector poll.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4928"/>.
</p>

<ol>

<li><p>Modify <sref ref="[range.lazy.split.outer]"/> as indicated:</p>

<blockquote>
<pre>
constexpr <i>outer-iterator</i>(<i>outer-iterator</i>&lt;!Const&gt; i)
  requires Const &amp;&amp; convertible_to&lt;iterator_t&lt;V&gt;, iterator_t&lt;<i>Base</i>&gt;&gt;;
</pre>
<blockquote>
<p>
-4- <i>Effects</i>: Initializes <tt><i>parent_</i></tt> with <tt>i.<i>parent_</i></tt><ins>,</ins> 
<del>and</del> <tt><i>current_</i></tt> with <tt>std::move(i.<i>current_</i>)</tt><ins>, and 
<tt><i>trailing_empty_</i></tt> with <tt>i.<i>trailing_empty_</i></tt></ins>.
</p>
</blockquote>
</blockquote>

</li>

</ol>
</resolution>

</issue>
