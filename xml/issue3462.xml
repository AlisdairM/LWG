<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3462" status="New">
<title>&sect;[formatter.requirements]: Formatter requirements forbid use of <tt>fc.arg()</tt></title>
<section><sref ref="[formatter.requirements]"/></section>
<submitter>Alberto Barbati</submitter>
<date>30 Jun 2020</date>
<priority>3</priority>

<discussion>
<p>
The requirements on the expression <tt>f.format(t, fc)</tt> in [tab:formatter] say
</p>
<blockquote><p>
Formats <tt>t</tt> according to the specifiers stored in <tt>*this</tt>, writes the output to <tt>fc.out()</tt> 
and returns an iterator past the end of the output range. The output shall only depend on <tt>t</tt>, 
<tt>fc.locale()</tt>, and the range <tt>[pc.begin(), pc.end())</tt> from the last call to <tt>f.parse(pc)</tt>.
</p></blockquote>
<p>
Strictly speaking, this wording effectively forbids <tt>f.format(t, fc)</tt> from calling <tt>fc.arg(n)</tt>, 
whose motivation is precisely to allow a formatter to rely on arguments different from <tt>t</tt>. According to this 
interpretation, there's no conforming way to implement the <tt>"{ <i>arg-id</i> }"</tt> form of the <i>width</i> and 
<i>precision</i> fields of standard format specifiers. Moreover, the formatter described in the example if paragraph 
<sref ref="[format.context]"/>/8 would also be non-conforming.
</p>

<note>2020-07-12; Reflector prioritization</note>
<p>
Set priority to 3 after reflector discussions.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4861">N4861</a>. 
</p>

<ol>
<li><p>Modify <sref ref="[concept.convertible]"/>, Table [tab:formatter], as indicated:</p>

<blockquote>
<table border="1">
<caption>Table 67: <i>Formatter</i> requirements [tab:formatter]</caption>
<tr>
<th align="center">Expression</th>
<th align="center">Return type</th>
<th align="center">Requirement</th>
</tr>

<tr>
<td colspan="3" align="center">
<tt>&hellip;</tt>
</td>
</tr>

<tr>
<td>
<tt>f.format(t, fc)</tt>
</td>
<td>
<tt>FC::iterator</tt>
</td>
<td>
Formats <tt>t</tt> according to the specifiers stored in
<tt>*this</tt>, writes the output to <tt>fc.out()</tt> and returns
an iterator past the end of the output range. The
output shall only depend on <tt>t</tt>, <tt>fc.locale()</tt>,
<del>and</del> the range <tt>[pc.begin(), pc.end())</tt> from
the last call to <tt>f.parse(pc)</tt><ins>, and <tt>fc.arg(n)</tt>, 
where <tt>n</tt> is a <tt>size_t</tt> index value that has been 
validated with a call to <tt>pc.check_arg_id(n)</tt> in the last 
call to <tt>f.parse(pc)</tt></ins>.
</td>
</tr>

<tr>
<td colspan="3" align="center">
<tt>&hellip;</tt>
</td>
</tr>
</table>
</blockquote>
</li>
</ol>
</resolution>

</issue>
