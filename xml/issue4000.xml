<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4000" status="New">
<title><tt>flat_map::insert_range</tt>'s <i>Effects</i> is not quite right</title>
<section><sref ref="[flat.map.modifiers]"/></section>
<submitter>Hewill Kang</submitter>
<date>23 Oct 2023</date>
<priority>3</priority>

<discussion>
<p>
<tt>flat_map::insert_range</tt> adds elements to the <tt>containers</tt> member via:
</p>
<blockquote><pre>
for (const auto&amp; e : rg) {
  c.keys.insert(c.keys.end(), e.first);
  c.values.insert(c.values.end(), e.second);
}
</pre></blockquote>
<p>
which is incorrect because <tt>rg</tt>'s value type may not be a <tt>pair</tt> (<tt>tuple</tt>, for instance), 
which means that <tt>.first</tt> and <tt>.second</tt> are not valid in such cases.
</p>

<note>2024-02-22; Reflector poll</note>
<p>
Set priority to 3 after reflector poll in October 2023.
</p>

<p>
"This is <paper num="P2767"/> section 6 which LWG looked at in Varna,
and was turned into https://github.com/cplusplus/draft/pull/6274 as an
editorial change."
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4964"/>.
</p>

<ol>

<li><p>Modify <sref ref="[flat.map.modifiers]"/> as indicated:</p>

<blockquote><pre>
template&lt;<i>container-compatible-range</i>&lt;value_type&gt; R&gt;
  void insert_range(R&amp;&amp; rg);
</pre>
<blockquote>
<p>
-12- <i>Effects</i>: Adds elements to <tt>c</tt> as if by:
</p>
<blockquote><pre>
for (<ins>value_type</ins><del>const auto&amp;</del> e : rg) {
  c.keys.insert(c.keys.end(), <ins>std::move(</ins>e.first<ins>)</ins>);
  c.values.insert(c.values.end(), <ins>std::move(</ins>e.second<ins>)</ins>);
}
</pre></blockquote>
<p>
[&hellip;]
</p>
</blockquote>
</blockquote>

</li>

</ol>
</resolution>

</issue>
