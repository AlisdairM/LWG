<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4227" status="Tentatively Ready">
<title>Missing `noexcept` operator in [exec.when.all]</title>
<section>
<sref ref="[exec.when.all]"/>
</section>
<submitter>Ian Petersen</submitter>
<date>17 Mar 2025</date>
<priority>99</priority>

<discussion>
<p>
In <sref ref="[exec.when.all]"/> p7, the <tt><i>impls-for</i>&lt;when_all_t&gt;::<i>get-state</i></tt> 
member is defined to be equivalent to the following lambda:
</p>
<blockquote><pre>
[]&lt;class Sndr, class Rcvr&gt;(Sndr&amp;&amp; sndr, Rcvr&amp; rcvr) noexcept(<i>e</i>) -> decltype(<i>e</i>) {
  return <i>e</i>;
}
</pre></blockquote>
<p>
and <tt><i>e</i></tt> is later defined to be:
</p>
<blockquote><pre>
std::forward&lt;Sndr&gt;(sndr).apply(<i>make-state</i>&lt;Rcvr&gt;())
</pre></blockquote>
<p>
Together, the two definitions imply that the `noexcept` clause on the provided lambda is:
</p>
<blockquote><pre>
noexcept(std::forward&lt;Sndr&gt;(sndr).apply(<i>make-state</i>&lt;Rcvr&gt;()))
</pre></blockquote>
<p>
which is invalid.
<p/>
Presumably, the lambda should be defined like so (with an extra `noexcept` operator in the `noexcept` clause):
</p>
<blockquote><pre>
[]&lt;class Sndr, class Rcvr&gt;(Sndr&amp;&amp; sndr, Rcvr&amp; rcvr) noexcept(<ins>noexcept(</ins><i>e</i><ins>)</ins>) -&gt; decltype(<i>e</i>) {
  return <i>e</i>;
}
</pre></blockquote>

<note>2025-06-13; Reflector poll</note>
<p>
Set status to Tentatively Ready after seven votes in favour during reflector poll.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N5008"/>.
</p>

<ol>

<li><p>Modify <sref ref="[exec.when.all]"/> as indicated:</p>

<blockquote>
<p>
-7- The member <tt><i>impls-for</i>&lt;when_all_t&gt;::<i>get-state</i></tt> is initialized with a callable object 
equivalent to the following lambda expression:
</p>
<blockquote><pre>
[]&lt;class Sndr, class Rcvr&gt;(Sndr&amp;&amp; sndr, Rcvr&amp; rcvr) noexcept(<ins>noexcept(</ins><i>e</i><ins>)</ins>) -&gt; decltype(<i>e</i>) {
  return <i>e</i>;
}
</pre></blockquote>
</blockquote>
</li>

</ol>
</resolution>

</issue>
