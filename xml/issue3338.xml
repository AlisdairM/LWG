<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3338" status="New">
<title>Rename <tt>default_constructible</tt> to <tt>default_initializable</tt></title>
<section><sref ref="[concept.defaultconstructible]"/></section>
<submitter>Casey Carter</submitter>
<date>18 Nov 2019</date>
<priority>99</priority>

<discussion>
<p>
WG21 merged <a href="http://wg21.link/p1754r1">P1754R1</a> "Rename concepts to <tt>standard_case</tt> for C++20" 
into the working draft as LWG Motion 11 in 2019 Cologne. That proposal contains editorial instructions to 
rename what was the <tt>DefaultConstructible</tt> concept:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;">
<pre>
IF LWG3151 ACCEPTED:
  default_initializable
ELSE
  default_constructible
</pre>
</blockquote>
<p>
Notably LWG <iref ref="3151"/> "<tt>ConvertibleTo</tt> rejects conversions from array and function types" is 
not the intended issue number, LWG <iref ref="3149"/> "<tt>DefaultConstructible</tt> should require default 
initialization" is. It was made clear during discussion in LEWG that 3149 would change the concept to require default-initialization to be valid rather than value-initialization which the <tt>is_default_constructible</tt> 
trait requires. LEWG agreed that it would be confusing to have a trait and concept with very similar names 
yet slightly different meanings, and approved <a href="http://wg21.link/p1754r1">P1754R1</a>'s proposed renaming.
<p/>
LWG <iref ref="3149"/> was moved to "Ready" but not approved by WG21 until Belfast &mdash; after the application 
of P1754R1 to the working draft &mdash; so this renaming has not happened, but the rationale remains valid.
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4835">N4835</a>.</p>

<blockquote class="note">
<p>
[<i>Drafting note:</i> The issue assumes that LWG <iref ref="3149"/> has been applied and shows the changes
delta relative to its application]
</p>
</blockquote>

<ol>
<li><p>Change <sref ref="[concepts.syn]"/>, header <tt>&lt;concepts&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
[&hellip;]
<i>// <sref ref="[concept.defaultconstructible]"/>, concept default_<del>constructible</del><ins>initializable</ins></i>
template&lt;class T&gt;
  concept default_<del>constructible</del><ins>initializable</ins> = <i>see below</i>;
[&hellip;]
</pre>
</blockquote>
</li>

<li><p>Change <sref ref="[concept.defaultconstructible]"/> as indicated:</p>

<blockquote>
<pre>
[&hellip;]
template&lt;class T&gt;
  concept default_<del>constructible</del><ins>initializable</ins> = constructible_from&lt;T&gt; &amp;&amp; requires { T{}; } &amp;&amp; <i>is-default-initializable</i>&lt;T&gt;;
[&hellip;]
</pre>
</blockquote>
</li>

<li><p>Change the stable name "[concept.defaultconstructible]" to "[concept.default.init]" and retitle 
"Concept <tt>default_constructible</tt>" to "Concept <tt>default_initializable</tt>". Replace all references 
to the name <tt>default_constructible</tt> with <tt>default_initializable</tt>.</p>
</li>
</ol>
</resolution>
</issue>
