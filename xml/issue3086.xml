<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3086" status="New">
<title>Possible problem in &sect;[new.delete.single]</title>
<section><sref ref="[new.delete.single]"/></section>
<submitter>William M. Miller</submitter>
<date>16 Mar 2018</date>
<priority>3</priority>

<discussion>
<p>
In general requirements on a whole program, as opposed to a single translation unit, generally specify 
"no diagnostic required", since we don't want to require implementations to do multi-translation-unit 
analysis. However, <sref ref="[new.delete.single]"/> paragraph 11 says,
</p>
<blockquote><p>
If a function with a <tt>size</tt> parameter is defined, the program shall also define the corresponding 
version without the <tt>size</tt> parameter.
</p></blockquote>
<p>
This is clearly not restricted to a single translation unit; should "no diagnostic required" be added?
</p>

<note>2018-04-03; Thomas K&ouml;ppe and Tim Song suggest wording</note>

<note>2018-06-18 after reflector discussion</note>
<p>Priority set to 3</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4727">N4727</a>.
</p>

<ol>
<li><p>Edit <sref ref="[new.delete.single]"/> as indicated:</p>
<blockquote>
<pre>
void operator delete(void* ptr) noexcept;
void operator delete(void* ptr, std::size_t size) noexcept;
void operator delete(void* ptr, std::align_val_t alignment) noexcept;
void operator delete(void* ptr, std::size_t size, std::align_val_t alignment) noexcept;
</pre>
<blockquote>
<p>
-10- <i>Effects:</i> [&hellip;]
<p/>
-11- <i>Replaceable:</i> A C++ program may define functions with any of these function signatures, and thereby
displace the default versions defined by the C++ standard library. If a function without a <tt>size</tt> parameter
is defined, the program should also define the corresponding function with a <tt>size</tt> parameter. If a
function with a <tt>size</tt> parameter is defined, the program shall also define the corresponding version
without the <tt>size</tt> parameter<ins>; no diagnostic is required</ins>. [<i>Note:</i> The default behavior 
below may change in the future, which will require replacing both deallocation functions when replacing the 
allocation function. &mdash; <i>end note</i>]
</p>
</blockquote>
</blockquote>
</li>

<li><p>Edit <sref ref="[new.delete.array]"/> as indicated:</p>
<blockquote>
<pre>
void operator delete[](void* ptr) noexcept;
void operator delete[](void* ptr, std::size_t size) noexcept;
void operator delete[](void* ptr, std::align_val_t alignment) noexcept;
void operator delete[](void* ptr, std::size_t size, std::align_val_t alignment) noexcept;
</pre>
<blockquote>
<p>
-9- <i>Effects:</i> [&hellip;]
<p/>
-10- <i>Replaceable:</i> A C++ program may define functions with any of these function signatures, and thereby
displace the default versions defined by the C++ standard library. If a function without a <tt>size</tt> parameter
is defined, the program should also define the corresponding function with a <tt>size</tt> parameter. If a
function with a <tt>size</tt> parameter is defined, the program shall also define the corresponding version
without the <tt>size</tt> parameter<ins>; no diagnostic is required</ins>. [<i>Note:</i> The default behavior 
below may change in the future, which will require replacing both deallocation functions when replacing the 
allocation function. &mdash; <i>end note</i>]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
