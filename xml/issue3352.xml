<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3352" status="New">
<title><tt>strong_equality</tt> isn't a thing</title>
<section><sref ref="[container.requirements.general]"/></section>
<submitter>Casey Carter</submitter>
<date>06 Dec 2019</date>
<priority>1</priority>

<discussion>
<p>
[tab:container.req] includes the row:
</p>
<blockquote>
<p>
<b>Expression:</b> <tt>i &lt;=&gt; j</tt>
<p/>
<b>Return Type:</b> <tt>strong_ordering</tt> if <tt>X::iterator</tt> meets the random access iterator requirements, 
otherwise <tt>strong_equality</tt>.
<p/>
<b>Complexity:</b> constant
</p>
</blockquote>
<p>
"<tt>strong_equality</tt>" is (now) a meaningless term that appears nowhere else in the working draft. Presumably 
we want to make the Return Type unconditionally <tt>strong_ordering</tt>, and require this expression to be 
valid only when <tt>i</tt> and <tt>j</tt> are random access iterators. It's not clear to me if the best way to 
do so would be to add a "<i>Constraints</i>" to the "Assertion/note/pre-/post-condition" column of this table row, 
or if we should pull the row out into yet another "conditionally-supported iterator requirements" table.
</p>

<note>2019-12-21 Issue Prioritization</note>
<p>Priority to 1 after reflector discussion.</p>

<note>2020-02-10, Prague; David Olsen provides new wording based upon Tim Songs suggestion</note>
</discussion>

<resolution>

<blockquote>
<table border="1">
<caption>Table 71 &mdash; Container requirements [tab:container.req]</caption>
<tr style="text-align:center">
<th>Expression</th>
<th>Return type</th>
<th>Operational<br/>semantics</th>
<th>Assertion/note<br/>pre/post-condition</th>
<th>Complexity</th>
</tr>
<tr>
<td colspan="5" align="center">
<tt>[&hellip;]</tt>
</td>
</tr>
<tr>
<td>
<tt>i &lt;=&gt; j</tt>
</td>
<td>
<tt>strong_ordering</tt> <del>if<br/>
<tt>X::iterator</tt> meets the<br/>
random access iterator<br/>
requirements, otherwise<br/>
<tt>strong_equality</tt></del>
</td>
<td></td>
<td>
<ins><i>Constraints:</i> <tt>X::iterator</tt> meets the random access iterator requirements.</ins>
</td>
<td>
constant
</td>
</tr>

<tr>
<td colspan="5" align="center">
<tt>[&hellip;]</tt>
</td>
</tr>
</table>
</blockquote>
</resolution>
</issue>
