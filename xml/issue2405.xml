<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2405" status="NAD">
<title><tt>rotate()</tt>'s return value is incorrect when <tt>middle == first</tt></title>
<section><sref ref="[alg.rotate]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>14 Jun 2014</date>

<discussion>
<p>
When LWG <iref ref="488"/> was resolved, the intention was to return "where the subrange <tt>[first, middle)</tt> starts after 
the rotate is performed". However, this wasn't achieved in one case.
<p/>
When <tt>middle == last</tt>, <tt>rotate()</tt> does nothing and returns <tt>first</tt>. This is good.
<p/>
When <tt>middle == first</tt>, <tt>rotate()</tt> does nothing and returns <tt>last</tt>. This is bad. In addition to being 
inconsistent with the other do-nothing case, it prevents <tt>rotate()</tt> from providing the useful guarantee that LWG 
<iref ref="488"/> wanted: when <tt>[first, last)</tt> is non-empty, <tt>rotate()</tt>'s return value should always be 
dereferenceable to get the originally-first element.
<p/>
Howard Hinnant:
<p/>
As the author of LWG <iref ref="488"/> I can assure everyone that the edge cases the proposed resolution specifies were 
not specified by accident. <tt>rotate(i, i, j)</tt> should return <tt>j</tt> and <tt>rotate(i, j, j)</tt> should return <tt>i</tt>.  
Doing otherwise will break working code. These return values were motivated by the uses of <tt>rotate</tt> in the implementation 
of algorithms such as <tt>stable_partition</tt> and <tt>inplace_merge</tt>. The results of these edge cases were not chosen lightly.
<p/>
Also a good read:
<p/>
<a href="http://www.cs.rpi.edu/~musser/gsd/notes-on-programming-2006-10-13.pdf">notes-on-programming-2006-10-13</a>
<p/>
Summary: NAD.
</p>

<note>2014-06-16 Rapperswill</note>
<p>
Closed as NAD.
</p>


</discussion>

<resolution>
<p>This wording is relative to N3936.</p>

<ol>
<li><p>Change <sref ref="[alg.rotate]"/> p2 as indicated:</p>

<blockquote>
<p>
-2- <i>Returns</i>: <ins>If <tt>middle == first</tt>, returns <tt>first</tt>. Otherwise, returns</ins> <tt>first + (last - middle)</tt>.
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
