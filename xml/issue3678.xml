<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3678" status="New">
<title>Constructors of <tt>std::chrono::time_zone</tt> might be overly unspecified</title>
<section><sref ref="[time.zone.overview]"/></section>
<submitter>Jiang An</submitter>
<date>23 Feb 2022</date>
<priority>4</priority>

<discussion>
<p>
In <sref ref="[time.zone.overview]"/>, only defaulted move constructor and move assignment operator for 
<tt>std::chrono::time_zone</tt> are shown, other constructors are said to be "unspecified additional constructors". 
Presumably the intent is that the default constructor is not declared (suppressed) and the copy constructor is 
implicitly deleted, but it is not clear if they are not "unspecified additional constructors" and hence 
implicitly specified.
<p/>
On the other hand, the defaulted definitions of move functions bring almost no specification, as no exposition 
only member is shown. So it is unspecified whether these functions are deleted, trivial, <tt>constexpr</tt>, 
or <tt>noexcept</tt>. Perhaps we want these functions to be non-deleted and <tt>noexcept</tt>, while triviality 
and <tt>constexpr</tt>-ness should be left unspecified.
</p>

<note>2022-03-04; Reflector poll</note>
<p>
Set priority to 4 after reflector poll.
</p>

<note>2025-03-18; Jonathan provides wording</note>
<p>
I don't think it matters whether they are trivial or constexpr, because they
cannot be used. Users only have access to `const time_zone` lvalues via
`locate_zone` and the `tzdb::zones` container.
The move constructor and move assignment operator only need to exist so that
the implementation can populate that container.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N5001"/>.
</p>

<ol>
<li><p>Modify <sref ref="[time.zone.overview]"/> as indicated:</p>
<blockquote><pre><code>
namespace std::chrono {
  class time_zone {
    <ins>time_zone(<i>unspecified</i>);</ins>
  public:
    time_zone(time_zone&amp;&amp;) = default;
    time_zone&amp; operator=(time_zone&amp;&amp;) = default;

    <del><i>// unspecified additional constructors</i></del>

    <i>[...]</i>
  };
}</code></pre></blockquote>
<p>-1-
A `time_zone` represents all time zone transitions for a specific geographic
area.
`time_zone` construction is unspecified, and performed
<ins>only</ins>
as part of database initialization.
</p>
<p>
[<i>Note 1</i>:
`const time_zone` objects can be accessed via functions such as `locate_zone`.
&mdash; <i>end note</i>]
</p>
</li>
</ol>
</resolution>

</issue>
