<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3556" status="New">
<title>Specification of when semantic constraints are imposed by use of concepts
is unclear</title>
<section><sref ref="[structure.requirements]"/></section>
<submitter>Tim Song</submitter>
<date>23 May 2021</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[structure.requirements]"/> p9 says:
</p>
<blockquote>
<p>
A declaration may explicitly impose requirements through its associated
constraints (<sref ref="[temp.constr.decl]"/>). When the associated constraints
refer to a concept (<sref ref="[temp.concept]"/>), the semantic constraints
specified for that concept are additionally imposed on the use of the declaration.
</p>
</blockquote>
<p>
There are at least two issues with this wording:
</p>
<ol>
<li><p>
First, "associated constraints" is a Core term that refers to the constraints
on a declaration <i>after normalization</i>, at which point direct uses of
concepts have been decomposed into the constituent atomic constraints and are
no longer visible.
</p></li>
<li><p>
Second, "refers to" is too vague. Does <tt>!C&lt;T&gt;</tt> "refer to"
<tt>C</tt> and impose its semantic constraints? Does <tt>C1&lt;T&gt; || C2&lt;T&gt;</tt>
"refer to" both <tt>C1</tt> and <tt>C2</tt> and therefore impose the semantic
constraints of both?
</p></li>
</ol>
</discussion>

<resolution>
</resolution>
</issue>
