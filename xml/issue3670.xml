<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3670" status="C++23">
<title><i>Cpp17InputIterator</i>s don't have integer-class difference types</title>
<section><sref ref="[range.iota.iterator]"/></section>
<submitter>Casey Carter</submitter>
<date>04 Feb 2022</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[range.iota.iterator]"/> defines 
</p>
<blockquote><pre>
using iterator_category = input_iterator_tag; <i>// present only if W models incrementable</i>
</pre></blockquote>
<p>
but when <tt>difference_type</tt> is an integer-class type the iterator does not meet the 
<i>Cpp17InputIterator</i> requirements.
</p>

<note>2022-02-07; Daniel comments</note>
<p>
As requested by LWG <iref ref="3376"/> and wording implemented by <paper num="P2393R1"/>,
integer-class types are no longer required to have class type.
</p>

<p>
<strong>Previous resolution [SUPERSEDED]:</strong>
</p>
<blockquote class="note">
<p>
This wording is relative to <paper num="N4901"/>.
</p>

<ol>
<li><p>Modify <sref ref="[range.iota.iterator]"/>, class <tt>iota_view::<i>iterator</i></tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std::ranges {
  template&lt;weakly_incrementable W, semiregular Bound&gt;
    requires <i>weakly-equality-comparable-with</i>&lt;W, Bound&gt; &amp;&amp; copyable&lt;W&gt;
  struct iota_view&lt;W, Bound&gt;::<i>iterator</i> {
    [&hellip;]
    using iterator_category = input_iterator_tag; <i>// present only if W models incrementable <ins>and</ins></i> 
                                                  <i><ins>// IOTA-DIFF-T(W) is not a class type</ins></i>
    using value_type = W;
    using difference_type = <i>IOTA-DIFF-T</i>(W);
    [&hellip;]
  };
}
</pre>
</blockquote>
</li>
</ol>
</blockquote>

<note>2022-02-07; Casey Carter provides improved wording</note>

<note>2022-03-04; Reflector poll</note>
<p>
Set status to Tentatively Ready after seven votes in favour during reflector poll.
</p>

<note>2022-07-15; LWG telecon: move to Ready</note>

<note>2022-07-25 Approved at July 2022 virtual plenary. Status changed: Ready &rarr; WP.</note>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4901"/>.
</p>

<ol>
<li><p>Modify <sref ref="[range.iota.iterator]"/>, class <tt>iota_view::<i>iterator</i></tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std::ranges {
  template&lt;weakly_incrementable W, semiregular Bound&gt;
    requires <i>weakly-equality-comparable-with</i>&lt;W, Bound&gt; &amp;&amp; copyable&lt;W&gt;
  struct iota_view&lt;W, Bound&gt;::<i>iterator</i> {
    [&hellip;]
    using iterator_category = input_iterator_tag; <i>// present only if W models incrementable <ins>and</ins></i> 
                                                  <i><ins>// IOTA-DIFF-T(W) is an integral type</ins></i>
    using value_type = W;
    using difference_type = <i>IOTA-DIFF-T</i>(W);
    [&hellip;]
  };
}
</pre>
</blockquote>
</li>
</ol>
</resolution>

</issue>
