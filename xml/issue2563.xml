<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2563" status="New">
<title>LWG 2259 relaxes requirements, perhaps unintentionally</title>
<section><sref ref="[member.functions]"/></section>
<submitter>Ville Voutilainen</submitter>
<date>29 Nov 2015</date>
<priority>99</priority>

<discussion>
<p>
The combination of <sref ref="[member.functions]"/>, paragraphs 2 and 3 that LWG 
<iref ref="2259"/> does seems to drop a requirement that any call behaves as if 
no overloads were added. Paragraph 3 used to say
"A call to a member function signature described in the C ++ standard
library behaves as if the implementation
declares no additional member function signatures."
whereas the new wording says
"provided that any call to the member function that would select an
overload from the set of declarations described in this standard
behaves as if that overload were selected."
<p/>
This can be read as meaning that if there's no default constructor
specified, like for instance for <tt>std::ostream</tt>, an implementation is free to
add it. It can also be read as meaning that an implementation is free to
add any overloads that wouldn't change the overload resolution result
of any call expression that would select a specified overload. That's
vastly different from allowing extensions that add new functions rather
than new overloads.
<p/>
Was this relaxation intentional?
</p>
</discussion>

<resolution>
</resolution>

</issue>
