<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3341" status="New">
<title><tt>basic_regex</tt> range constructor: Missing requirements for iterator types</title>
<section><sref ref="[re.regex.construct]"/></section>
<submitter>&Dcy;&iecy;&ncy;&icy;&scy; &Zcy;&acy;&khcy;&acy;&rcy;&ocy;&vcy;</submitter>
<date>17 Nov 2019</date>
<priority>3</priority>

<discussion>
<p>
This is description of a <tt>basic_regex</tt> range constructor from <a href="https://wg21.link/n4835">N4835</a>,
<sref ref="[re.regex.construct]"/>:
</p>
<blockquote>
<pre>
template&lt;class ForwardIterator&gt;
  basic_regex(ForwardIterator first, ForwardIterator last,
              flag_type f = regex_constants::ECMAScript);
</pre>
<blockquote>
<p>
-17- <i>Throws:</i> <tt>regex_error</tt> if the sequence <tt>[first, last)</tt> is not a valid regular expression.
<p/>
-18- <i>Effects:</i> Constructs an object of class <tt>basic_regex</tt>; the object's internal finite state 
machine is constructed from the regular expression contained in the sequence of characters <tt>[first, last)</tt>, 
and interpreted according to the flags specified in <tt>f</tt>.
<p/>
-19- <i>Ensures:</i> <tt>flags()</tt> returns <tt>f. mark_count()</tt> returns the number of marked sub-expressions 
within the expression.
</p>
</blockquote>
</blockquote>
<p>
It seems that there are no requirements about dereferenced iterator's element type, that, apparently, 
must be implicitly convertible to the <tt>basic_regex::value_type</tt>. For example, containers having 
range constructor satisfy a SequenceContainer requirements, where implicit converting to its elements 
is specified.
</p>

<note>2019-11-30 Issue Prioritization</note>
<p>Priority to 3 after reflector discussion.</p>

<note>2021-10-04; Jonathan adds a comment</note>
<p>
There isn't even a requirement that the arguments are iterators.
And <tt>assign(InputIterator, InputIterator, flag_type)</tt> is not
constrained to only accept iterators either, meaning you can call it with
two integers and call the
<tt>basic_string(size_type, char_type)</tt> constructor.
</p>
</discussion>

<resolution>
</resolution>
</issue>
