<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2843" status="New">
<title>Unclear behavior of <tt>std::pmr::memory_resource::do_allocate()</tt></title>
<section><sref ref="[mem.res.private]"/></section>
<submitter>Jens Maurer</submitter>
<date>13 Dec 2016</date>
<priority>3</priority>

<discussion>
<p>
The specification of <tt>do_allocate()</tt> (<sref ref="[mem.res.private]"/> p2+p3) says:
</p>
<blockquote>
<p>
<i>Returns:</i> A derived class shall implement this function to return a
pointer to allocated storage (3.7.4.2) with a size of at least <tt>bytes</tt>.
The returned storage is aligned to the specified alignment, if such
alignment is supported (3.11); otherwise it is aligned to <tt>max_align</tt>.
<p/>
<i>Throws:</i> A derived class implementation shall throw an appropriate
exception if it is unable to allocate memory with the requested size
and alignment.
</p>
</blockquote>
<p>
It is unclear whether a request for an unsupported alignment
(e.g. larger than <tt>max_align</tt>) yields an exception or the returned
storage is silently aligned to <tt>max_align</tt>.
<p/>
This is <a href="https://github.com/cplusplus/draft/issues/966">editorial issue #966</a>.
</p>

<note>2017-01-27 Telecon</note>
<p>Priority 3; Marshall to ping Pablo for intent and provide wording.</p>
</discussion>

<resolution>
</resolution>

</issue>
