<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3790" status="New">
<title>P1467 accidentally changed <tt>nexttoward</tt>'s signature</title>
<section><sref ref="[cmath.syn]"/></section>
<submitter>David Olsen</submitter>
<date>30 Sep 2022</date>
<priority>99</priority>

<discussion>
<p>
<paper num="P1467"/> (Extended floating-point types), which was adopted for C++23 at the July plenary, 
has a typo (which is entirely my fault) that no one noticed during wording review.  The changes to the 
<tt>&lt;cmath&gt;</tt> synopsis in the paper included changing this:
</p>
<blockquote><pre>
constexpr float nexttoward(float x, long double y);       // see [library.c]
constexpr double nexttoward(double x, long double y);
constexpr long double nexttoward(long double x, long double y);   // see [library.c]
</pre></blockquote>
<p>
to this:
</p>
<blockquote><pre>
constexpr <i>floating-point-type</i> nexttoward(<i>floating-point-type</i> x, <i>floating-point-type</i> y);
</pre></blockquote>
<p>
That changed the second parameter of <tt>nexttoward</tt> from always being <tt>long double</tt> to being 
<tt><i>floating-point-type</i></tt>, which matches the type of the first parameter.
<p/>
The change is obviously incorrect. The purpose of the changes to <tt>&lt;cmath&gt;</tt> was to add overloads 
of the functions for extended floating-point types, not to change any existing signatures.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4917"/>.
</p>

<ol>
<li><p>Modify <sref ref="[cmath.syn]"/>, header <tt>&lt;cmath&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
[&hellip;]
constexpr <i>floating-point-type</i> nexttoward(<i>floating-point-type</i> x, <del><i>floating-point-type</i></del><ins>long double</ins> y);
constexpr float nexttowardf(float x, long double y);
constexpr long double nexttowardl(long double x, long double y);
[&hellip;]
</pre>
</blockquote>
</li>
</ol>
</resolution>

</issue>
