<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3503" status="New">
<title><tt>chrono::ceil</tt> has surprising requirement</title>
<section><sref ref="[time.duration.cast]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>18 Nov 2020</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[time.duration.cast]"/> p7 requires that the return value is "The least result <tt>t</tt> 
representable in <tt>ToDuration</tt> for which <tt>t &gt;= d</tt>".
<p/>
This means that <tt>chrono::ceil&lt;chrono::microseconds&gt;(chrono::duration&lt;float, milli&gt;(m)).count()</tt> 
is required to be the smallest integer <tt>n</tt> such that <tt>(float)n == m*1000.0f</tt>, which might be less 
than the mathematically correct value of <tt>m x 1000</tt>.
<p/>
(The specific values below assume <tt>float</tt> uses the IEEE binary32 format and default rounding, but 
similar problems will exist for other formats, even if the specific values are different.)
<p/>
For example, if <tt>m == 13421772.0f</tt> then the naively expected result is <tt>n == 13421772000</tt>, but 
the standard requires <tt>n == 13421771265</tt>, a significantly lower value. This surprising result is a 
consequence of how the <tt>chrono::ceil</tt> spec interacts with floating-point arithmetic, due to the fact that 
for the integers in the range <tt>[13421770753, 13421772799]</tt>, only one can be exactly represented as 
32-bit <tt>float</tt>. All but that one will be rounded to a different value when converted to <tt>float</tt>.
<p/>
A straightforward implementation of <tt>chrono::ceil</tt> will produce <tt>(long long)(13421772.0f * 1000)</tt> 
which is <tt>13421771776</tt>, which is less than the expected result, but compares equal using the <tt>t &gt;= d</tt> 
expression. That expression converts both operands to their <tt>common_type</tt>, which is 
<tt>chrono::duration&lt;float, micro&gt;</tt>. That means we compare <tt>(float)13421771776 &gt;= (13421772.0f * 1000)</tt> 
which is <tt>true</tt>. But the spec requires an even worse result. All integers in <tt>[13421771265, 13421771776)</tt> 
are also rounded to that value when converted to <tt>float</tt>. That means <tt>chrono::microseconds(13421771265)</tt> 
is "the least result representable in <tt>ToDuration</tt> for which <tt>t &gt;= d</tt>".
<p/>
Meeting the "least result" requirement is impractical, and unhelpful. The straightforward result <tt>13421771776</tt> 
is already lower than the naively expected result (which is surprising for a "ceil" function). To meet the 
standard's requirements the implementation would have to do extra work, just to produce an even lower (and even 
more surprising) result.
<p/>
It might be impractical to require the naively expected value to be returned (the additional work might have 
unacceptable performance implications), but the standard  should at least permit the straightforward result 
instead of requiring an even worse one.
<p/>
The same problem almost certainly exists for <tt>chrono::floor</tt> in reverse.
</p>
</discussion>

<resolution>
</resolution>

</issue>
