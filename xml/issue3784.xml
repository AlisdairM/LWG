<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3784" status="WP">
<title><tt>std.compat</tt> should not provide <tt>::byte</tt> and its friends</title>
<section><sref ref="[std.modules]"/></section>
<submitter>Jiang An</submitter>
<date>19 Sep 2022</date>
<priority>99</priority>

<discussion>
<p>
Currently <sref ref="[std.modules]"/>/3 seemly requires that the <tt>std.compat</tt> module 
has to provide <tt>byte</tt> (via <tt>&lt;cstddef&gt;</tt>), <tt>beta</tt> (via <tt>&lt;cmath&gt;</tt>) 
etc. in the global namespace, which is defective to me as these components are C++-only, 
and doing so would increase the risk of conflict.
<p/>
I think we should only let <tt>std.compat</tt> provide the same set of global declarations as 
<tt>&lt;xxx.h&gt;</tt> headers.
</p>

<note>2022-10-12; Reflector poll</note>
<p>
Set status to Tentatively Ready after nine votes in favour during reflector poll.
</p>

<note>2022-11-12 Approved at November 2022 meeting in Kona. Status changed: Voting &rarr; WP.</note>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4917"/>.
</p>

<ol>

<li><p>Modify <sref ref="[std.modules]"/> as indicated:</p>

<blockquote>
<p>
-3- The named module <tt>std.compat</tt> exports the same declarations as the named module <tt>std</tt>, 
and additionally exports declarations in the global namespace corresponding to the declarations in 
namespace <tt>std</tt> that are provided by the C++ headers for C library facilities 
(Table 26)<ins>, except the explicitly excluded declarations described in <sref ref="[support.c.headers.other]"/></ins>.
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
