<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2703" status="New">
<title>No provision for fill-padding when <tt>boolalpha</tt> is set</title>
<section><sref ref="[facet.num.put.virtuals]"/></section>
<submitter>Hubert Tong</submitter>
<date>7 May 2016</date>
<priority>3</priority>

<discussion>
<p>
N4582 subclause <sref ref="[facet.num.put.virtuals]"/> paragraph 6 makes no provision for fill-padding in its 
specification of the behaviour when <tt>(str.flags() &amp; ios_base::boolalpha) != 0</tt>.
</p>

<note>2017-07-06, Marshall comments</note>
<p>
All the other cases from <tt>num_put</tt> &mdash; <tt>int</tt>, <tt>long</tt>, etc all are covered in 
<sref ref="[facet.num.put.virtuals]"/> p1 .. p5, which describe how to align and pad the output. (Specifically, 
stage 3) p6 does not.
<p/>
With this description:
</p>
<blockquote><pre>
cout &lt;&lt; std::setw(15) &lt;&lt; false;
</pre></blockquote>
<p>
outputs:
</p>
<pre>
&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;&#x2001;0
&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;&#xFE4E;// Column counter
</pre>
<p>
but
</p>
<blockquote><pre>
cout &lt;&lt; std::setw(15) &lt;&lt; boolalpha &lt;&lt; false;
</pre></blockquote>
<p>
outputs:
</p>
<pre>
false
</pre>
<p>
libc++ implements this exactly.<br/>
Dinkumware, libstdc++ and MSVC apply padding and alignment.
<p/>
I think that applying padding and alignment is more appropriate.
</p>
</discussion>

<resolution>
</resolution>

</issue>
