<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2945" status="New">
<title>Order of template parameters in <tt>optional</tt> comparisons</title>
<section><sref ref="[optional.comp_with_t]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>13 Mar 2017</date>
<priority>99</priority>

<discussion>
<p>
LWG <iref ref="2934"/> added an additional template parameter to the comparison
operators for <tt>std::optional</tt>, but the ones that compare <tt>U</tt> with
<tt>optional&lt;T&gt;</tt> have the parameters backwards compared to the function parameters:
</p>

<blockquote>
<pre>
template &lt;class T, class U&gt; 
constexpr bool operator==(const U&amp;, const optional&lt;T&gt;&amp;);
</pre>
</blockquote>

<p>
Ville confirmed there's no particular reason for this, it's just how
he wrote the proposed resolution, but as this has normative effect we
should consider if we really want the template parameters and function
parameters to be in different orders or not.
</p>
</discussion>

<resolution>
</resolution>

</issue>

