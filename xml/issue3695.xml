<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3695" status="Tentatively NAD">
<title>The standard-layout property of char-like types serves for nothing</title>
<section><sref ref="[strings.general]"/></section>
<submitter>Jiang An</submitter>
<date>07 May 2022</date>
<priority>4</priority>

<discussion>
<p>
Currently char-like types are defined as non-array trivial and standard-layout types (<sref ref="[strings.general]"/>). 
However, as far as I know, there is no actual operation specified in the standard or used in implementations 
requiring a char-like type to be standard-layout (unlike the triviality, which is related to <tt>charT()</tt>, etc.). 
Implementations are merely <tt>static_assert</tt>-ing the standard-layout property of element types.
<p/>
As the standard library almost never requires a user-provided type to be standard-layout now (other suspicious 
exceptions are program-defined specializations of <tt>std::atomic&lt;T*&gt;</tt>), I think char-like types should 
just be non-array trivial types.
</p>

<note>2022-05-17; Reflector poll</note>
<p>
Set priority to 4 after reflector poll. Six votes for NAD.
Changing this would require a proposal through LEWG.
</p>

</discussion>

<resolution>
</resolution>

</issue>
