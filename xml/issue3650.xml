<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3650" status="New">
<title>Are <tt>std::basic_string</tt>'s <tt>iterator</tt> and <tt>const_iterator</tt> constexpr iterators?</title>
<section><sref ref="[basic.string.general]"/></section>
<submitter>Jiang An</submitter>
<date>04 Dec 2021</date>
<priority>99</priority>

<discussion>
<p>
<tt>std::vector</tt>'s <tt>iterator</tt> and <tt>const_iterator</tt> are required to meet constexpr iterator 
requirements in C++20 per <paper num="P1004R2"/>, but it seems that the similar wording is missing for 
<tt>std::basic_string</tt> in both <paper num="P0980R1"/> and the current working draft.
<p/>
I think we should add a bullet "The types <tt>iterator</tt> and <tt>const_iterator</tt> meet the constexpr 
iterator requirements (<sref ref="[iterator.requirements.general]"/>)." to <sref ref="[basic.string.general]"/>.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4901"/>.
</p>

<ol>

<li><p>Modify <sref ref="[basic.string.general]"/>, as indicated:</p>

<blockquote>
<p>
-3- In all cases, <tt>[data(), data() + size()]</tt> is a valid range, <tt>data() + size()</tt> 
points at an object with value <tt>charT()</tt> (a "null terminator"), and <tt>size() &lt;= capacity()</tt>
is <tt>true</tt>.
<p/>
-4- A <tt>size_type</tt> parameter type in a <tt>basic_string</tt> deduction guide refers to the 
<tt>size_type</tt> member type of the type deduced by the deduction guide.
<p/>
<ins>-?- The types <tt>iterator</tt> and <tt>const_iterator</tt> meet the constexpr iterator requirements 
(<sref ref="[iterator.requirements.general]"/>).</ins>
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
