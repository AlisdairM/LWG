<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3850" status="Voting">
<title><tt>views::as_const</tt> on <tt>empty_view&lt;T&gt;</tt> should return <tt>empty_view&lt;const T&gt;</tt></title>
<section><sref ref="[range.as.const.overview]"/></section>
<submitter>Hewill Kang</submitter>
<date>06 Jan 2023</date>
<priority>99</priority>

<discussion>
<p>
Currently, applying <tt>views::as_const</tt> to an <tt>empty_view&lt;int&gt;</tt>
will result in an <tt>as_const_view&lt;empty_view&lt;int&gt;&gt;</tt>,
and its iterator type will be <tt>basic_const_iterator&lt;int*&gt;</tt>.
</p>
<p>
This amount of instantiation is not desirable for such a simple view,
in which case simply returning <tt>empty_view&lt;const int&gt;</tt> should be enough.
</p>

<note>2023-02-01; Reflector poll</note>
<p>
Set status to Tentatively Ready after eight votes in favour during reflector poll.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4917"/>.
</p>

<ol>
<li><p>Modify <sref ref="[range.as.const.overview]"/> as indicated:</p>

<blockquote>
<p>
-2- The name <tt>views::as_const</tt> denotes a range adaptor object (<sref ref="[range.adaptor.object]"/>). 
Let <tt>E</tt> be an expression, let <tt>T</tt> be <tt>decltype((E))</tt>, and let <tt>U</tt> be 
<tt>remove_cvref_t&lt;T&gt;</tt>. The expression <tt>views::as_const(E)</tt> is expression-equivalent
to:
</p>
<ol style="list-style-type: none">
<li><p>(2.1) &mdash; If <tt>views::all_t&lt;T&gt;</tt> models <tt>constant_range</tt>, then <tt>views::all(E)</tt>.</p></li>
<li><p><ins>(2.?) &mdash; Otherwise, if <tt>U</tt> denotes <tt>empty_view&lt;X&gt;</tt> for some type <tt>X</tt>, then <tt>auto(views::empty&lt;const X&gt;)</tt>.</ins></p></li>
<li><p>(2.2) &mdash; Otherwise, if <tt>U</tt> denotes <tt>span&lt;X, Extent&gt;</tt> for some type <tt>X</tt> and some 
extent <tt>Extent</tt>, then <tt>span&lt;const X, Extent&gt;(E)</tt>.</p></li>
<li><p>(2.3) &mdash; Otherwise, if <tt>E</tt> is an lvalue, <tt>const U</tt> models <tt>constant_range</tt>, and 
<tt>U</tt> does not model <tt>view</tt>, then <tt>ref_view(static_cast&lt;const U&amp;&gt;(E))</tt>.</p></li>
<li><p>(2.4) &mdash; Otherwise, <tt>as_const_view(E)</tt>.</p></li>
</ol>
</blockquote>
</li>

</ol>

</resolution>

</issue>
