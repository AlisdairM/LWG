<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3691" status="New">
<title>Replacement of keys in associative containers</title>
<section><sref ref="[associative.reqmts.general]"/><sref ref="[unord.req.general]"/></section>
<submitter>Jens Maurer</submitter>
<date>19 Apr 2022</date>
<priority>3</priority>

<discussion>
<p>
Keys for elements of associative containers are presented as <tt>const</tt> subobjects, 
preventing their modification by user code according to <sref ref="[dcl.type.cv]"/> p4.
<p/>
However, that does not prevent those keys to be transparently replaced, for example via
</p>
<blockquote><pre>
std::map&lt;int, int&gt; map;
map.emplace(1, 2);
using KT = std::map&lt;int, int&gt;::key_type;
auto it = map.begin();
it-&gt;first.~KT();
new (const_cast&lt;int*&gt;(&amp;it-&gt;first)) KT(3);
</pre></blockquote>
<p>
This, of course, breaks the ordering of the keys, and should be undefined behavior.
<p/>
Related issue: <a href="https://wg21.link/cwg2514">CWG 2514</a>.
</p>

<note>2022-05-17; Reflector poll</note>
<p>
Set priority to 3 after reflector poll. One vote for NAD.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4910"/>.
</p>

<ol>
<li><p>Modify <sref ref="[associative.reqmts.general]"/> as indicated:</p>

<blockquote>
<p>
-5- For <tt>set</tt> and <tt>multiset</tt> the value type is the same as the key type. For 
<tt>map</tt> and <tt>multimap</tt> it is equal to <tt>pair&lt;const Key, T&gt;</tt>. 
<ins>Ending the lifetime of the key subobject of a container element by means other than 
invoking a member function of the container results in undefined behavior.</ins>
</p>
</blockquote>
</li>

<li><p>Modify <sref ref="[unord.req.general]"/> as indicated:</p>

<blockquote>
<p>
-7- For <tt>unordered_set</tt> and <tt>unordered_multiset</tt> the value type is the same as the key type. 
For <tt>unordered_map</tt> and <tt>unordered_multimap</tt> it is <tt>pair&lt;const Key, T&gt;</tt>.
<ins>Ending the lifetime of the key subobject of a container element by means other than 
invoking a member function of the container results in undefined behavior.</ins>
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
