<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4300" status="New">
<title>Missing <i>Returns:</i> element in <tt>optional&lt;T&amp;&gt;::emplace</tt></title>
<section><sref ref="[optional.ref.assign]"/></section>
<submitter>Giuseppe D'Angelo</submitter>
<date>15 Jul 2025</date>
<priority>99</priority>

<discussion>
<p>
The specification for <tt>optional&lt;T&amp;&gt;::emplace</tt> in <sref ref="[optional.ref.assign]"/>
is not specifying the returned value via a <i>Returns</i>: element; however the
function does indeed return something (a <tt>T&amp;</tt>). Such a <i>Returns</i>: element is there
for the primary template's `emplace` (cf. <sref ref="[optional.assign]"/>).
</p>
</discussion>

<resolution>
<p>
This wording is relative to this 
<a href="https://github.com/cplusplus/draft/actions/runs/16433597877/artifacts/3583518547">CD preview draft</a>.
</p>

<ol>

<li><p>Modify <sref ref="[optional.ref.assign]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class U&gt;
  constexpr T&amp; emplace(U&amp;&amp; u) noexcept(is_nothrow_constructible_v&lt;T&amp;, U&gt;);
</pre>
<blockquote>
<p>
-4- <i>Constraints</i>: [&hellip;]
<p/>
-5- <i>Effects</i>: Equivalent to: <tt><i>convert-ref-init-val</i>(std::forward&lt;U&gt;(u))</tt>.
<p/>
<ins>-?- <i>Returns</i>: <tt>*<i>val</i></tt>.</ins>
</p>
</blockquote>
</blockquote>
</li>

</ol>
</resolution>

</issue>
