<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3303" status="Ready">
<title>Bad "<tt>constexpr</tt>" marker for <tt>destroy/destroy_n</tt></title>
<section><sref ref="[memory.syn]"/></section>
<submitter>Jens Maurer</submitter>
<date>10 Oct 2019</date>
<priority>0</priority>

<discussion>
<p>
This issue was submitted as editorial issue 
<a href="https://github.com/cplusplus/draft/issues/3181">cplusplus/draft#3181</a> but is 
considered non-editorial.
<p/>
<a href="http://wg21.link/p0784r7">P0784R7</a>, approved in Cologne, added "<tt>constexpr</tt>" markers to
the overloads of <tt>destroy</tt> and <tt>destroy_n</tt> taking an <tt>ExecutionPolicy</tt> 
parameter.  This seems to be in error; parallel algorithms should not be marked "<tt>constexpr</tt>".
(None of the parallel algorithms in <tt>&lt;algorithm&gt;</tt> is marked "<tt>constexpr</tt>".)
</p>
<note>2019-11 Marked as 'Ready' during Monday issue prioritization in Belfast</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4830">N4830</a>.</p>

<ol>
<li><p>Modify <sref ref="[memory.syn]"/>, header <tt>&lt;memory&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
namespace std {
  [&hellip;]
  
  <i>// <sref ref="[specialized.destroy]"/>, destroy</i>
  template&lt;class T&gt;
    constexpr void destroy_at(T* location);
  template&lt;class ForwardIterator&gt;
    constexpr void destroy(ForwardIterator first, ForwardIterator last);
  template&lt;class ExecutionPolicy, class ForwardIterator&gt;
    <del>constexpr</del> void destroy(ExecutionPolicy&amp;&amp; exec, <i>// see <sref ref="[algorithms.parallel.overloads]"/></i>
                           ForwardIterator first, ForwardIterator last);
  template&lt;class ForwardIterator, class Size&gt;
    constexpr ForwardIterator destroy_n(ForwardIterator first, Size n);
  template&lt;class ExecutionPolicy, class ForwardIterator, class Size&gt;
    <del>constexpr</del> ForwardIterator destroy_n(ExecutionPolicy&amp;&amp; exec, <i>// see <sref ref="[algorithms.parallel.overloads]"/></i>
                                        ForwardIterator first, Size n);  
  [&hellip;]
}
</pre>
</blockquote>
</li>

</ol>

</resolution>
</issue>
