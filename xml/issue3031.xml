<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3031" status="New">
<title>Algorithms and predicates with non-const reference arguments</title>
<section><sref ref="[alg.sorting]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>8 Nov 2017</date>
<priority>2</priority>

<discussion>
<p>
This doesn't compile with any major implementation:
</p>
<blockquote><pre>
int i[1] = { };
std::stable_sort(i, i, [](int&amp; x, int&amp; y) { return x &lt; y; });
</pre></blockquote>
<p>
The problem is that the <tt>Compare</tt> expects non-const references. We say "It is assumed that 
<tt>comp</tt> will not apply any non-constant function through the dereferenced iterator" But that 
isn't sufficient to forbid the example.
<p/>
My first thought was to modify [alg.sorting] to make the <tt>Compare</tt> requirements use <tt>comp(as_const(x), as_const(x))</tt> but that would get very verbose to add to every expression using <tt>comp</tt>.
</p>

<note>2017-11 Albuquerque Wednesday night issues processing</note>
<p>Priority set to 2; Jonathan to improve the statement of the problem.</p>
</discussion>

<resolution>
</resolution>

</issue>
