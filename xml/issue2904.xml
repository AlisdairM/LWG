<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2904" status="New">
<title>Make <tt>variant</tt> move-assignment more exception safe</title>
<section><sref ref="[variant.assign]"/></section>
<submitter>United States</submitter>
<date>3 Feb 2017</date>
<priority>99</priority>

<discussion>
<b>Addresses US 119</b>

<p>The copy-assignment operator is very careful to not destroy the contained element until after a temporary has been constructed, 
which can be safely moved from. </p>
<p>This makes the <tt>valueless_by_exception</tt> state extremely rare, by design.</p>
<p>However, the same care and attention is not paid to the move-assignment operator, nor the assignment-from-deduced-value 
assignment template. This concern should be similarly important in these cases, especially the latter.</p>

<p>Proposed change: &mdash;</p>
</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
