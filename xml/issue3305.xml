<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3305" status="Ready">
<title><tt>any_cast&lt;void&gt;</tt></title>
<section><sref ref="[any.nonmembers]"/></section>
<submitter>John Shaw</submitter>
<date>16 Oct 2019</date>
<priority>2</priority>

<discussion>
<blockquote><pre>
any foo;
void* p = any_cast&lt;void&gt;(&amp;foo);
</pre></blockquote>
<p>
Per <sref ref="[any.nonmembers]"/>/9, since the operand isn't <tt>nullptr</tt> and 
<tt>operand-&gt;type() == typeid(T)</tt> (because <tt>T = void</tt> in this case), we should 
return a pointer to the object contained by <tt>operand</tt>. But there is no such object.
<p/>
We need to handle the <tt>T = void</tt> case, probably by just explicitly returning <tt>nullptr</tt>.
</p>

<note>2019-11 Priority to 2 during Monday issue prioritization in Belfast. There is implementation divergence here.</note>
<note>2020-02 LWG discussion in Prague did not reach consensus. Status to Open.</note>
<p>There was discussion about whether or not <tt>any_cast&lt;void&gt;(a)</tt> should be ill-formed, or return <tt>nullptr</tt>.</p>
<p>Poll "should it return nullptr" was 0-4-5-5-1.</p>
<note>2022-02 Currently ill-formed in MSVC ("error C2338: std::any cannot contain void") and returns null pointer in libstdc++ and libc++.</note>
<superseded>
<p>This wording is relative to <a href="https://wg21.link/n4835">N4835</a>.</p>

<ol>
<li><p>Modify <sref ref="[any.nonmembers]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class T&gt;
  const T* any_cast(const any* operand) noexcept;
template&lt;class T&gt;
  T* any_cast(any* operand) noexcept;
</pre>
<blockquote>
<p>
-9- <i>Returns:</i> If <tt>operand != nullptr &amp;&amp; operand-&gt;type() == typeid(T) <ins>&amp;&amp; 
is_object_v&lt;T&gt;</ins></tt>, a pointer to the object contained by <tt>operand</tt>; otherwise, 
<tt>nullptr</tt>.
<p/>
[&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>

</superseded>

<note>2023-06-14 Varna; Jonathan provides improved wording</note>
<note>2023-06-14 Varna; Move to Ready</note>
<p>Poll: 7-0-1</p>

</discussion>

<resolution>

<p>This wording is relative to <paper num="N4950"/>.</p>

<ol>
<li><p>Modify <sref ref="[any.nonmembers]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class T&gt;
  const T* any_cast(const any* operand) noexcept;
template&lt;class T&gt;
  T* any_cast(any* operand) noexcept;
</pre>
<blockquote>
<p>
<ins>
-8-
<i>Mandates</i>:
<code>is_void_v&lt;T&gt;</code> is <code>false</code>.
</ins>
</p>
<p>
-9-
<i>Returns</i>: If <tt>operand != nullptr &amp;&amp; operand-&gt;type() == typeid(T)</tt> <ins>is <code>true</code></ins>, a pointer to the object contained by <tt>operand</tt>; otherwise,
<tt>nullptr</tt>.
<p/>
[&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>
</issue>
