<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2675" status="New">
<title>Provide <code>filesystem::path</code> overloads for <i>File-based streams</i></title>
<section><sref ref="[file.streams]"/></section>
<submitter>Beman Dawes</submitter>
<date>16 March 2016</date>

<discussion>
  <p>
    The constructor and <code>open</code> functions for <i>File-based streams</i> in
    27.9 [file.streams] currently provide overloads for <code>const char*</code> and
    <code>const string&amp;</code> arguments that specify the path for the file to be opened.
    With the addition of the File System TS to the standard library, these same
    constructors and <code>open</code> functions need to add overloads for <code>
      const filesystem::path&amp;
    </code> so that file-based streams can take advantage of
    character types <code>wchar_t</code>, <code>char16_t</code>, and <code>char32_t</code>
    supported by <code>filesystem::path</code>.
  </p>
  <p>
    The <code>
      const filesystem::path&amp; p
    </code> overload for a member function is like the
    existing <code>const string&amp;</code> overload; it simply calls the overload of
    the same function that takes a C-style string. For operating systems like POSIX
    that traffic in <code>char</code> strings for filenames, nothing more is
    required. For operating systems like Windows that traffic in <code>wchar_t</code>
    strings for filenames, an additional C-style string overload is required.
  </p>
  <h3>Implementation experience</h3>
  <p>
    The Boost Filesystem library has provided header <code>&lt;boost/filesystem/fstream.hpp&gt;</code>
    implementing the full proposed resolution for over a decade.
  </p>
  <p>
    The Microsoft/Dinkumware
    implementation of standard library header <code>&lt;fstream&gt;</code> has provided
    the <code>const wchar_t*</code>
    overloads for many years.
  </p>

</discussion>

<resolution>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        At the end of 27.9.1 File streams
        [
      </span>
      <span style="background-color: #E1E9FD">fstreams</span>
      <span style="background-color: #E1E9FD">
        ]
        add a paragraph:
      </span>
    </i>
  </p>

  <p>
    In this subclause, member functions taking arguments of <code>
      const std::filesystem::path::value_type*
    </code> shall only be provided on systems
    where <code>std::filesystem::path::value_type</code> ([class.path]) is not <code>
      char
    </code>. [<i>Note:</i> These functions enable class <code>path</code>
    support for systems with a wide native path character type, such as <code>
      wchar_t
    </code>. &mdash; <i>end note</i>]
  </p>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.1 Class template
        basic_filebuf [filebuf] as indicated:
      </span>
    </i>
  </p>

  <pre>
    basic_filebuf&lt;charT,traits&gt;* open(const char* s,
    ios_base::openmode mode);
    <ins>basic_filebuf&lt;charT,traits&gt;* open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode);  // wide systems only; see [fstreams]</ins>
    basic_filebuf&lt;charT,traits&gt;* open(const string&amp; s,
    ios_base::openmode mode);
    <ins>basic_filebuf&lt;charT,traits&gt;* open(const filesystem::path&amp; p,</ins>
    <ins>ios_base::openmode mode);</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.4 Member functions [filebuf.members]
        as indicated:
      </span>
    </i>
  </p>

  <pre>
    basic_filebuf&lt;charT,traits&gt;* open(const char* s,
    ios_base::openmode mode);
    <ins>basic_filebuf&lt;charT,traits&gt;* open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode);  // wide systems only; see [fstreams]</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        To 27.9.1.4 Member functions [filebuf.members]
        add:
      </span>
    </i>
  </p>

  <pre>
    basic_filebuf&lt;charT,traits&gt;* open(const filesystem::path&amp; p,
    ios_base::openmode mode);
  </pre>

  <blockquote>
    <p>
      <i>Returns:</i>
      <code>open(p.c_str(), mode);</code>
    </p>
  </blockquote>

  <p>---------------------------------- ifstream -----------------------------------------</p>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.6 Class template
        basic_ifstream [ifstream] as indicated:
      </span>
    </i>
  </p>

  <pre>
    explicit basic_ifstream(const char* s,
    ios_base::openmode mode = ios_base::in);
    <ins>explicit basic_ifstream(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in);  // wide systems only; see [fstreams]</ins>
    explicit basic_ifstream(const string&amp; s,
    ios_base::openmode mode = ios_base::in);
    <ins>explicit basic_ifstream(const filesystem::path&amp; p,</ins>
    <ins>ios_base::openmode mode = ios_base::in);</ins>
    ...
    void open(const char* s,
    ios_base::openmode mode = ios_base::in);
    <ins>void open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in);  // wide systems only; see [fstreams]</ins>
    void open(const string&amp; s,
    ios_base::openmode mode = ios_base::in);
    <ins>void open(const filesystem::path&amp; p,</ins>
    <ins>ios_base::openmode mode = ios_base::in);</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.7 basic_ifstream
        constructors [ifstream.cons] as indicated:
      </span>
    </i>
  </p>

  <pre>
    explicit basic_ifstream(const char* s,
    ios_base::openmode mode = ios_base::in);
    <ins>explicit basic_ifstream(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in);  // wide systems only; see [fstreams]</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        To 27.9.1.7 basic_ifstream
        constructors [ifstream.cons]
        add:
      </span>
    </i>
  </p>
  <pre>
    explicit basic_ifstream(const filesystem::path&amp; p,
    ios_base::openmode mode = ios_base::in);
  </pre>
  <blockquote>
    <p>
      <i>Effects: </i>the same as <code>basic_ifstream(p.c_str(), mode)</code>.
    </p>
  </blockquote>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.9 Member functions [ifstream.members]
        as indicated:
      </span>
    </i>
  </p>

  <pre>
    void open(const char* s,
    ios_base::openmode mode = ios_base::in);
    <ins>void open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in);  // wide systems only; see [fstreams]</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        To 27.9.1.9 Member functions [ifstream.members]
        add:
      </span>
    </i>
  </p>
  <pre>
    void open(const filesystem::path&amp; p,
    ios_base::openmode mode = ios_base::in);
  </pre>
  <blockquote>
    <p>
      <i>Effects:</i> calls <code>open(p.c_str(), mode)</code>.
    </p>
  </blockquote>

  <p>-------------------------------- ofstream -------------------------------------------</p>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.10 Class template
        basic_ofstream [ofstream] as indicated:
      </span>
    </i>
  </p>

  <pre>
    explicit basic_ofstream(const char* s,
    ios_base::openmode mode = ios_base::out);
    <ins>explicit basic_ofstream(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::out);  // wide systems only; see [fstreams]</ins>
    explicit basic_ofstream(const string&amp; s,
    ios_base::openmode mode = ios_base::out);
    <ins>explicit basic_ofstream(const filesystem::path&amp; p,</ins>
    <ins>ios_base::openmode mode = ios_base::out);</ins>
    ...
    void open(const char* s,
    ios_base::openmode mode = ios_base::out);
    <ins>void open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::out);  // wide systems only; see [fstreams]</ins>
    void open(const string&amp; s,
    ios_base::openmode mode = ios_base::out);
    <ins>void open(const filesystem::path&amp; p,</ins>
    <ins>ios_base::openmode mode = ios_base::out);</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.11 basic_ofstream
        constructors [ofstream.cons] as indicated:
      </span>
    </i>
  </p>

  <pre>
    explicit basic_ofstream(const char* s,
    ios_base::openmode mode = ios_base::out);
    <ins>explicit basic_ofstream(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::out);  // wide systems only; see [fstreams]</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        To 27.9.1.11 basic_ofstream
        constructors [ofstream.cons]
        add:
      </span>
    </i>
  </p>
  <pre>
    explicit basic_ofstream(const filesystem::path&amp; p,
    ios_base::openmode mode = ios_base::out);
  </pre>
  <blockquote>
    <p>
      <i>Effects: </i>the same as <code>basic_ofstream(p.c_str(), mode)</code>.
    </p>
  </blockquote>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.13 Member functions [ofstream.members]
        as indicated:
      </span>
    </i>
  </p>

  <pre>
    void open(const char* s,
    ios_base::openmode mode = ios_base::out);
    <ins>void open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::out);  // wide systems only; see [fstreams]</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        To 27.9.1.13 Member functions [ofstream.members]
        add:
      </span>
    </i>
  </p>
  <pre>
    void open(const filesystem::path&amp; p,
    ios_base::openmode mode = ios_base::out);
  </pre>
  <blockquote>
    <p>
      <i>Effects:</i> calls <code>open(p.c_str(), mode)</code>.
    </p>
  </blockquote>

  <p>------------------------------ fstream ----------------------------------------------</p>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.14 Class template
        basic_fstream [fstream] as indicated:
      </span>
    </i>
  </p>

  <pre>
    explicit basic_fstream(const char* s,
    ios_base::openmode mode = ios_base::in|ios_base::out);
    <ins>explicit basic_fstream(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in|ios_base::out);  // wide systems only; see [fstreams]</ins>
    explicit basic_fstream(const string&amp; s,
    ios_base::openmode mode = ios_base::in|ios_base::out);
    <ins>explicit basic_fstream(const filesystem::path&amp; p,</ins>
    <ins>ios_base::openmode mode = ios_base::in|ios_base::out);</ins>
    ...
    void open(const char* s,
    ios_base::openmode mode = ios_base::in|ios_base::out);
    <ins>void open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in|ios_base::out);  // wide systems only; see [fstreams]</ins>
    void open(const string&amp; s,
    ios_base::openmode mode = ios_base::in|ios_base::out);
    <ins>void open(const filesystem::path&amp; p,</ins>
    <ins>ios_base::openmode mode = ios_base::in|ios_base::out);</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.15 basic_fstream
        constructors [fstream.cons] as indicated:
      </span>
    </i>
  </p>

  <pre>
    explicit basic_fstream(const char* s,
    ios_base::openmode mode = ios_base::in|ios_base::out);
    <ins>explicit basic_fstream(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in|ios_base::out);  // wide systems only; see [fstreams]</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        To 27.9.1.15 basic_fstream
        constructors [fstream.cons]
        add:
      </span>
    </i>
  </p>
  <pre>
    explicit basic_fstream(const filesystem::path&amp; p,
    ios_base::openmode mode = ios_base::in|ios_base::out);
  </pre>
  <blockquote>
    <p>
      <i>Effects: </i>the same as <code>basic_fstream(p.c_str(), mode)</code>.
    </p>
  </blockquote>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        Change 27.9.1.17 Member functions [fstream.members]
        as indicated:
      </span>
    </i>
  </p>

  <pre>
    void open(const char* s,
    ios_base::openmode mode = ios_base::in|ios_base::out);
    <ins>void open(const std::filesystem::path::value_type* s,</ins>
    <ins>ios_base::openmode mode = ios_base::in|ios_base::out);  // wide systems only; see [fstreams]</ins>
  </pre>

  <p>
    <i>
      <span style="background-color: #E1E9FD">
        To 27.9.1.17 Member functions [fstream.members]
        add:
      </span>
    </i>
  </p>
  <pre>
    void open(const filesystem::path&amp; p,
    ios_base::openmode mode = ios_base::in|ios_base::out);
  </pre>
  <blockquote>
    <p>
      <i>Effects:</i> calls <code>open(p.c_str(), mode)</code>.
    </p>
  </blockquote>

</resolution>

</issue>
