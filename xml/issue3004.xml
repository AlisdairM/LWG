<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3004" status="Tentatively Ready">
<title>&sect;[string.capacity] and &sect;[vector.capacity] should specify time complexity for <tt>capacity()</tt></title>
<section><sref ref="[string.capacity]"/><sref ref="[vector.capacity]"/></section>
<submitter>Andy Giese</submitter>
<date>24 Jul 2017</date>
<priority>0</priority>

<discussion>
<p>
<tt>basic_string</tt> and <tt>vector</tt> both have a <tt>capacity</tt> function that returns the size of the internally 
allocated buffer. This function does not specify a time complexity nor does it have an implied time complexity. However, 
given the complexities for <tt>data()</tt> to be <tt>&#x1d4aa;(1)</tt> and <tt>size()</tt> to be <tt>&#x1d4aa;(1)</tt>, 
we can imagine that it's reasonable to also require <tt>capacity()</tt> to be <tt>&#x1d4aa;(1)</tt>, since the 
implementation will most likely be caching the size of the allocated buffer so as to check for the need to reallocate 
on insertion.
</p>

<note>
2017-11-01 Moved to Tentatively Ready after 10 positive votes for P0 on c++std-lib.
</note>
</discussion>

<resolution>
<p>This resolution is relative to <a href="http://wg21.link/n4659">N4659</a>.</p>

<ol>
<li><p>Edit <sref ref="[string.capacity]"/> as indicated:</p>

<blockquote>
<pre>
size_type capacity() const noexcept;
</pre>
<blockquote>
<p>
-9- <i>Returns:</i> The size of the allocated storage in the string.
<p/>
<ins>-?- <i>Complexity:</i> Constant time.</ins>
</p>
</blockquote>
</blockquote>
</li>

<li><p>Edit <sref ref="[vector.capacity]"/> as indicated:</p>

<blockquote>
<pre>
size_type capacity() const noexcept;
</pre>
<blockquote>
<p>
-1- <i>Returns:</i> The total number of elements that the vector can hold without requiring reallocation.
<p/>
<ins>-?- <i>Complexity:</i> Constant time.</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>
</issue>
