<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2514" status="New">
<title>Type traits must not be <tt>final</tt></title>
<section><sref ref="[meta.rqmts]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>3 Jul 2015</date>
<priority>3</priority>

<discussion>
<p>
We should make it clear that all standard <tt>UnaryTypeTraits</tt>,
<tt>BinaryTypeTraits</tt> and <tt>TransformationTraits</tt> are not <tt>final</tt>.
<p/>
Otherwise it is not safe to use them as arguments to a template like this:
</p>
<blockquote><pre>
template&lt;typename C1, typename C2&gt;
struct conjunction
  : conditional_t&lt;C1::value, C2, C1&gt;
{ };
</pre></blockquote>

<note>2016-08-03 Chicago LWG</note>
<p>
Walter, Nevin, and Jason provide initial Proposed Resolution.
</p>
</discussion>

<resolution>
<p>This wording is relative to N4606.</p>

<ol>
<li><p>Change <sref ref="[meta.rqmts]"/> as indicated:</p>

<blockquote>
<p>
-1- A <em>UnaryTypeTrait</em> describes a property of a type. It shall be a <ins>non-<code>final</code></ins> 
class template [&hellip;]
<p/>
-2- A <em>BinaryTypeTrait</em> describes a relationship between two types. It shall be a 
<ins>non-<code>final</code></ins> class template [&hellip;]
<p/>
-3- A <em>TransformationTrait</em> modifies a property of a type. It shall be a 
<ins>non-<code>final</code></ins> class template [&hellip;]
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
