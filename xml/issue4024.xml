<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4024" status="New">
<title>Underspecified destruction of objects created in <tt>std::make_shared_for_overwrite/std::allocate_shared_for_overwrite</tt></title>
<section><sref ref="[util.smartptr.shared.create]"/></section>
<submitter>Jiang An</submitter>
<date>16 Dec 2023</date>
<priority>2</priority>

<discussion>
<p>
Currently, only destructions of non-array (sub)objects created in <tt>std::make_shared</tt> and <tt>std::allocate_shared</tt> 
are specified in <sref ref="[util.smartptr.shared.create]"/>. Presumably, objects created in 
<tt>std::make_shared_for_overwrite</tt> and <tt>std::allocate_shared_for_overwrite</tt> should be destroyed by plain 
destructor calls.
</p>

<note>2024-03-11; Reflector poll</note>
<p>
Set priority to 2 after reflector poll in December 2023.
</p>
<p>
This was the <paper num="P1020R1"/> author's intent (see LWG reflector mail
in November 2018) but it was never clarified in the wording. This fixes that.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4964"/>.
</p>

<ol>

<li><p>Modify <sref ref="[util.smartptr.shared.create]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class T, ...&gt;
  shared_ptr&lt;T&gt; make_shared(<i>args</i>);
template&lt;class T, class A, ...&gt;
  shared_ptr&lt;T&gt; allocate_shared(const A&amp; a, <i>args</i>);
template&lt;class T, ...&gt;
  shared_ptr&lt;T&gt; make_shared_for_overwrite(<i>args</i>);
template&lt;class T, class A, ...&gt;
  shared_ptr&lt;T&gt; allocate_shared_for_overwrite(const A&amp; a, <i>args</i>);
</pre>
<blockquote>
<p>
[&hellip;]
<p/>
-7- <i>Remarks:</i>
</p>
<ol style="list-style-type: none">
<li><p>[&hellip;]</p></li>
<li><p>(7.11) &mdash; When a (sub)object of non-array type <tt>U</tt> that was initialized by 
<tt>make_shared</tt><ins>, <tt>make_shared_for_overwrite</tt>, or <tt>allocate_shared_for_overwrite</tt></ins> 
is to be destroyed, it is destroyed via the expression <tt>pv-&gt;~U()</tt> where <tt>pv</tt> points to that 
object of type <tt>U</tt>.</p></li>
<li><p>[&hellip;]</p></li>
</ol>
</blockquote>
</blockquote>
</li>

</ol>


</resolution>

</issue>
