<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3754" status="New">
<title>Class template <code>expected</code> synopsis contains declarations that do not match the detailed description</title>
<section><sref ref="[expected.object.general]"/></section>
<submitter>S. B. Tam</submitter>
<date>23 Aug 2022</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[expected.object.general]"/> declares the following constructors:
</p>

<blockquote><pre>
template&lt;class G&gt;
  constexpr expected(const unexpected&lt;G&gt;&amp;);
template&lt;class G&gt;
  constexpr expected(unexpected&lt;G&gt;&amp;&amp;);
</pre></blockquote>

<p>
But in <sref ref="[expected.object.ctor]"/>, these constructors are declared as:
</p>

<blockquote><pre>
template&lt;class G&gt;
  constexpr explicit(!is_convertible_v&lt;const G&amp;, E&gt;) expected(const unexpected&lt;G&gt;&amp; e);
template&lt;class G&gt;
  constexpr explicit(!is_convertible_v&lt;G, E&gt;) expected(unexpected&lt;G&gt;&amp;&amp; e);
</pre></blockquote>

<p>
Note that they have no explicit-specifiers in <sref ref="[expected.object.general]"/>,
but are conditionally explicit in <sref ref="[expected.object.ctor]"/>.
</p>

<p>
I presume that <sref ref="[expected.object.general]"/>
is missing a few <code>explicit(<i>see below</i>)</code>.
</p>

<p>
The same inconsistency exists in <sref ref="[expected.void]"/>.
</p>

</discussion>

<resolution>
</resolution>

</issue>
