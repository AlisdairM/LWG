<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3647" status="New">
<title><tt><i>nothrow-input-iterator</i></tt> constraints should not mention copying</title>
<section><sref ref="[special.mem.concepts]"/></section>
<submitter>Konstantin Varlamov</submitter>
<date>30 Nov 2021</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[special.mem.concepts]"/> states that a type qualifies as a <tt><i>nothrow-input-iterator</i></tt> 
only if no exceptions are thrown from, among other things, <em>copy</em> construction and <em>copy</em> 
assignment. However, being copyable isn't part of the requirements for an <tt>input_iterator</tt> on which 
<tt><i>nothrow-input-iterator</i></tt> is based (indeed, one of the things <tt>forward_iterator</tt> 
adds to <tt>input_iterator</tt> is copyability), and the <tt><i>nothrow-input-iterator</i></tt> concept 
doesn't add any new constraints related to copyability.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4901"/>.
</p>

<ol>

<li><p>Modify <sref ref="[special.mem.concepts]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class I&gt;
concept <i>nothrow-input-iterator</i> = <i>// exposition only</i>
  input_iterator&lt;I&gt; &amp;&amp;
  is_lvalue_reference_v&lt;iter_reference_t&lt;I&gt;&gt; &amp;&amp;
  same_as&lt;remove_cvref_t&lt;iter_reference_t&lt;I&gt;&gt;, iter_value_t&lt;I&gt;&gt;;
</pre>
<blockquote>
<p>
-2- A type <tt>I</tt> models <tt><i>nothrow-input-iterator</i></tt> only if no exceptions are thrown 
from increment, <del>copy construction,</del> move construction, <del>copy assignment,</del> move assignment, 
or indirection through valid iterators.
</p>
</blockquote>
</blockquote>
</li>

</ol>
</resolution>

</issue>
