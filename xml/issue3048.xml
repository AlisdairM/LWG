<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3048" status="New">
<title><tt>transform_reduce(exec, first1, last1, first2, init)</tt> discards execution policy</title>
<section><sref ref="[transform.reduce]"/></section>
<submitter>Billy Robert O'Neal III</submitter>
<date>15 Dec 2017</date>
<priority>99</priority>

<discussion>
<p>
Since there exists only one common <i>Effects</i> element for both the parallel and the non-parallel form of
<tt>transform_reduce</tt> without explicit operation parameters, the current specification of a function call 
<tt>std::transform_reduce(exec, first1, last1, first2, init)</tt> has the same effect as if the 
<tt>ExecutionPolicy</tt> would have been ignored. Presumably this effect is unintended.
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4713">N4713</a>.</p>

<ol>
<li><p>Modify <sref ref="[transform.reduce]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class InputIterator1, class InputIterator2, class T&gt;
  T transform_reduce(InputIterator1 first1, InputIterator1 last1,
                     InputIterator2 first2,
                     T init);
</pre>
<blockquote>
<p>
<ins>-?- <i>Effects:</i> Equivalent to:</ins> 
</p>
<blockquote><pre>
<ins>return transform_reduce(first1, last1, first2, init, plus&lt;&gt;(), multiplies&lt;&gt;());</ins>
</pre></blockquote>
</blockquote>
<pre>
template&lt;class ExecutionPolicy,
         class ForwardIterator1, class ForwardIterator2, class T&gt;
  T transform_reduce(ExecutionPolicy&amp;&amp; exec,
                     ForwardIterator1 first1, ForwardIterator1 last1,
                     ForwardIterator2 first2,
                     T init);
</pre>
<blockquote>
<p>
-1- <i>Effects:</i> Equivalent to: 
</p>
<blockquote><pre>
return transform_reduce(<ins>std::forward&lt;ExecutionPolicy&gt;(exec),</ins> first1, last1, first2, init, plus&lt;&gt;(), 
multiplies&lt;&gt;());
</pre></blockquote>
</blockquote>
</blockquote>

</li>
</ol>
</resolution>

</issue>