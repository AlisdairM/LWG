<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3268" status="New">
<title><tt>memory_order::memory_order_foo</tt> broken in C++20</title>
<section><sref ref="[atomics.order]"/></section>
<submitter>Eric Fiselier</submitter>
<date>31 Aug 2019</date>
<priority>4</priority>

<discussion>
<p>
<a href="http://wg21.link/p0439r0">P0439R0</a> renamed the <tt>std::memory_order</tt> enumerators 
when making it a scoped enumeration. The paper makes the old unscoped names available in the 
global namespace, but not within the scope of the enumeration.
<p/>
For example:
<p/>
<tt>std::memory_order::memory_order_consume</tt> is no longer well-formed but 
<tt>std::memory_order::consume</tt> and <tt>std::memory_order_consume</tt> are.
<p/>
In order to prevent unnecessary breakage, we should re-add the <tt>memory_order_foo</tt> names 
to the enumeration.
</p>
<note>2019-10 Priority set to 4 after reflector discussion</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4830">N4830</a>.</p>

<ol>
<li><p>Add a new sub-clause at the end of Clause <sref ref="[depr]"/> as indicated:</p>

<blockquote>
<p>
<ins><b>D.?? Deprecated <tt>memory_order</tt> enumerators</b></ins>
<p/>
<ins>-?- The following enumerators are declared in addition to those specified in <sref ref="[atomics.order]"/>:</ins>
</p>
<blockquote>
<pre>
<ins>namespace std {
  enum class memory_order : <i>unspecified</i> {
    memory_order_relaxed = relaxed, memory_order_consume = consume, memory_order_acquire = acquire, 
    memory_order_release = release, memory_order_acq_rel = acq_rel, memory_order_seq_cst = seq_cst
  };
}</ins>
</pre>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>
</issue>
