<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2374" status="New">
<title>Remarks for <tt>optional::to_value</tt> are too restrictive</title>
<section><sref ref="[optional.object.observe]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>25 Mar 2014</date>
<priority>99</priority>

<discussion>
<p><b>Addresses: fund.ts</b></p>

<p>
In Bristol I think I claimed that the remarks for <tt>optional::to_value()</tt>
were unimplementable and the function could only be <tt>constexpr</tt> if both
constructors that could be called were <tt>constexpr</tt>, but I was wrong.
The remarks should be reverted to the original pre-n3793 form.
</p>

</discussion>

<resolution>
<p>This wording is relative to <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3908.html">N3908</a>.</p>

<ol>
<li><p>Change [optional.object.observe] p23 of the 
<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3908.html#optional.object.observe">Library Fundamentals specification</a>
as indicated:
</p>

<blockquote><pre>
template &lt;class U&gt; constexpr T value_or(U&amp;&amp; v) const &amp;;
</pre><blockquote>
<p>
[&hellip;]
<p/>
-23- <i>Remarks</i>: If <del>both constructors of <tt>T</tt> which could be selected are <tt>constexpr</tt> constructors</del><ins>the 
selected constructor of <tt>T</tt> is a <tt>constexpr</tt> constructor</ins>, this function 
shall be a <tt>constexpr</tt> function. 
</p>
</blockquote>
</blockquote>
</li>

</ol>
</resolution>

</issue>
