<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3203" status="New">
<title><tt>span</tt> element access invalidation</title>
<section><sref ref="[span.overview]"/></section>
<submitter>Johel Ernesto Guerrero Pe&ntilde;a</submitter>
<date>4 May 2019</date>
<priority>2</priority>

<discussion>
<p>
<tt>span</tt> doesn't explicitly point out when its accessed elements are invalidated like <tt>string_view</tt> 
does in <sref ref="[string.view.iterators]"/> p2.
</p>

<note>2019-06-12 Priority set to 2 after reflector discussion</note>

<superseded>
<p>This wording is relative to <paper num="N4910"/>.</p>

<ol>
<li><p>Modify <sref ref="[span.overview]"/> as indicated:</p>

<blockquote>
<p>
-4- <tt>ElementType</tt> is required to be a complete object type that is not an abstract class type.
<p/>
<ins>-?- For a <tt>span s</tt>, any operation that invalidates a pointer in the range 
<tt>[s.data(), s.data() + s.size())</tt> invalidates pointers, iterators, and references other than 
<tt>*this</tt> returned from <tt>s</tt>'s member functions.</ins>
</p>
</blockquote>
</li>
</ol>
</superseded>

<note>2023-06-13; Varna</note>
<p>
The reference to <paper num="N4910"/> <sref ref="[string.view.iterators]"/> p2 is located now in
<paper num="N4950"/> <sref ref="[string.view.template.general]"/> p2 where its says:
</p>
<blockquote><p>
For a <tt>basic_string_view str</tt>, any operation that invalidates a pointer in the range
</p>
<blockquote><pre>
[str.data(), str.data() + str.size())
</pre></blockquote>
<p>
invalidates pointers, iterators, and references returned from <tt>str</tt>'s member functions.
</p></blockquote>
<p>
The group also suggested to adjust <sref ref="[string.view.template.general]"/> p2 similarly.
</p>
</discussion>

<resolution>
<p>This wording is relative to <paper num="N4950"/>.</p>

<ol>
<li><p>Modify <sref ref="[string.view.template.general]"/> as indicated:</p>

<blockquote class="note">
<p>
[<i>Drafting note:</i> The proposed wording also removes the extra code block that previously
defined the range]
</p>
</blockquote>

<blockquote>
<p>
-2- For a <tt>basic_string_view str</tt>, any operation that invalidates a pointer in the range
<tt>[str.data(), str.data() + str.size())</tt> invalidates pointers, iterators, and references 
<ins>to elements of <tt>str</tt></ins><del>returned from <tt>str</tt>'s member functions</del>.
</p>
</blockquote>
</li>

<li><p>Modify <sref ref="[span.overview]"/> as indicated:</p>

<blockquote>
<p>
-4- <tt>ElementType</tt> is required to be a complete object type that is not an abstract class type.
<p/>
<ins>-?- For a <tt>span s</tt>, any operation that invalidates a pointer in the range 
<tt>[s.data(), s.data() + s.size())</tt> invalidates pointers, iterators, and references to elements 
of <tt>s</tt>.</ins>
</p>
</blockquote>
</li>
</ol>
</resolution>
</issue>
