<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3871" status="New">
<title>Adjust note about <tt>terminate</tt></title>
<section><sref ref="[compliance]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>01 Feb 2023</date>
<priority>99</priority>

<discussion>
<p>
This is the resolution for NB comment <b><a href="https://github.com/cplusplus/nbballot/issues/463">CA-076</a></b>
</p>
<p>
<sref ref="[compliance]"/> p4 has this note:
</p>
<blockquote>
[<i>Note 1</i>: Throwing a standard library provided exception is not
observably different from <tt>terminate()</tt> if the implementation
does not unwind the stack during exception handling
(<sref ref="[except.handle]"/>)
and the user's program contains no catch blocks. &mdash; <i>end note</i>]
</blockquote>
<p>
Even under the conditions described by the note, a call to <tt>terminate()</tt>
is observably different from throwing an exception if the current
<tt>terminate_handler</tt> function observes what would have been
the currently handled exception in the case where the exception was thrown.
</p>
<p>
The set of conditions should be extended to include something along the lines of
"and the current <tt>terminate_handler</tt> function simply calls <tt>abort()</tt>".
</p>
</discussion>

<resolution>

<p>
This wording is relative to <paper num="N4928"/>.
</p>

<ol>
<li>
<p>
Modify <sref ref="[compliance]"/>, "Freestanding implementations", as indicated:
</p>

<blockquote>
-4-
[<i>Note 1</i>: Throwing a standard library provided exception is not
observably different from <tt>terminate()</tt> if the implementation
does not unwind the stack during exception handling
(<sref ref="[except.handle]"/>)
and the user's program contains no catch blocks
<ins>and the current <tt>terminate_handler</tt> function simply calls
<tt>abort()</tt></ins>.
&mdash; <i>end note</i>]
</blockquote>
</li>
</ol>

</resolution>

</issue>
