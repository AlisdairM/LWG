<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3478" status="New">
<title><tt>views::split</tt> drops trailing empty range</title>
<section><sref ref="[range.split]"/></section>
<submitter>Barry Revzin</submitter>
<date>20 Aug 2020</date>
<priority>99</priority>

<discussion>
<p>
From <a href="https://stackoverflow.com/q/63497978/2069064">StackOverflow</a>, the program:
</p>
<blockquote><pre>
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;ranges&gt;

int main() 
{
  std::string s = " text ";
  auto sv = std::ranges::views::split(s, ' ');                    
  std::cout &lt;&lt; std::ranges::distance(sv.begin(), sv.end());
}
</pre></blockquote>
<p>
prints 2 (as specified), but it really should print 3. If a range has <tt>N</tt> delimiters in it, 
splitting should produce <tt>N+1</tt> pieces. If the <tt>N</tt><sup>th</sup> delimiter is the last 
element in the input range, <tt>views::split</tt> produces only <tt>N</tt> pieces &mdash; it doesn't 
emit a trailing empty range.
<p/>
For other language comparisons, Python and Rust both give you three pieces in this example.
</p>
</discussion>

<resolution>
</resolution>

</issue>
