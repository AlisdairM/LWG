<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3709" status="Tentatively Ready">
<title>LWG-3703 was underly ambitious</title>
<section><sref ref="[optional.optional.general]"/><sref ref="[variant.variant.general]"/></section>
<submitter>Casey Carter</submitter>
<date>08 Jun 2022</date>
<priority>99</priority>

<discussion>
<p>
LWG <iref ref="3703"/> struck redundant language from <sref ref="[expected.void.general]"/> specifying that 
(1) space allocated for an object is suitably aligned, and (2) a member annotated <tt><i>// exposition only</i></tt> 
in a class synopsis "is provided for exposition only." 
<p/>
Let's also strike similar occurrences from the wording for <tt>optional</tt> and <tt>variant</tt>.
</p>

<note>2022-06-21; Reflector poll</note>
<p>
Set status to Tentatively Ready after nine votes in favour during reflector poll.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4910"/>.
</p>

<ol>
<li><p>Modify <sref ref="[optional.optional.general]"/> as indicated:</p>

<blockquote>
<p>
-1- Any instance of <tt>optional&lt;T&gt;</tt> at any given time either contains a value 
or does not contain a value. When an instance of <tt>optional&lt;T&gt;</tt> <i>contains a value</i>, 
it means that an object of type <tt>T</tt>, referred to as the optional object's <i>contained value</i>, 
is allocated within the storage of the optional object. Implementations are not permitted to use 
additional storage, such as dynamic memory, to allocate its contained value. <del>The contained
value shall be allocated in a region of the <tt>optional&lt;T&gt;</tt> storage suitably aligned 
for the type <tt>T</tt>.</del> When an object of type <tt>optional&lt;T&gt;</tt> is contextually 
converted to <tt>bool</tt>, the conversion returns <tt>true</tt> if the object contains a value; 
otherwise the conversion returns <tt>false</tt>.
<p/>
-2- <del>Member <tt>val</tt> is provided for exposition only.</del> When an <tt>optional&lt;T&gt;</tt> 
object contains a value, <ins>member</ins> <tt>val</tt> points to the contained value.
</p>
</blockquote>
</li>

<li><p>Modify <sref ref="[variant.variant.general]"/> as indicated:</p>

<blockquote>
<p>
-1- Any instance of <tt>variant</tt> at any given time either holds a value of one of its alternative 
types or holds no value. When an instance of <tt>variant</tt> holds a value of alternative type <tt>T</tt>, 
it means that a value of type <tt>T</tt>, referred to as the <tt>variant</tt> object's <i>contained value</i>, 
is allocated within the storage of the <tt>variant</tt> object. Implementations are not permitted to use 
additional storage, such as dynamic memory, to allocate the contained value. <del>The contained value shall 
be allocated in a region of the variant storage suitably aligned for all types in <tt>Types</tt>.</del>
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
