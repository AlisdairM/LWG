<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3330" status="WP">
<title>Include <tt>&lt;compare&gt;</tt> from most library headers</title>
<section><sref ref="[coroutine.syn]"/><sref ref="[system.error.syn]"/><sref ref="[utility.syn]"/>
<sref ref="[tuple.syn]"/><sref ref="[optional.syn]"/><sref ref="[variant.syn]"/>
<sref ref="[memory.syn]"/><sref ref="[type.index.synopsis]"/><sref ref="[string.syn]"/>
<sref ref="[string.view.synop]"/><sref ref="[array.syn]"/><sref ref="[deque.syn]"/>
<sref ref="[forward.list.syn]"/><sref ref="[list.syn]"/><sref ref="[vector.syn]"/>
<sref ref="[associative.map.syn]"/><sref ref="[associative.set.syn]"/><sref ref="[unord.map.syn]"/>
<sref ref="[unord.set.syn]"/><sref ref="[queue.syn]"/><sref ref="[stack.syn]"/>
<sref ref="[iterator.synopsis]"/><sref ref="[ranges.syn]"/><sref ref="[time.syn]"/>
<sref ref="[fs.filesystem.syn]"/><sref ref="[re.syn]"/><sref ref="[thread.syn]"/></section>
<submitter>United States</submitter>
<date>07 Nov 2019</date>
<priority>0</priority>

<discussion>
<p><b>Addresses <a href="https://github.com/cplusplus/nbballot/issues/179">US 181</a></b></p>

<p>
The spaceship <tt>operator&lt;=&gt;</tt> is typically not usable unless the library 
header <tt>&lt;compare&gt;</tt> is directly included by the user. Many standard
library headers provide overloads for this operator. Worse, several standard classes
have replaced their existing definition for comparison operators with a reliance on the
spaceship operator, and existing code will break if the necessary header is not
(transitively) included. In a manner similar to the mandated library headers
transitively <tt>#include</tt>-ing <tt>&lt;initializer_list&gt;</tt> in C++11, 
these headers should mandate a transitive <tt>#include &lt;compare&gt;</tt>.
<p/>
Proposed change:
<p/>
Add:
<p/>
<tt>#include &lt;compare&gt;</tt>
<p/>
to the header synopsis for each of the following headers:
</p>
<blockquote>
<pre>
&lt;array&gt;
&lt;chrono&gt;
&lt;coroutine&gt;
&lt;deque&gt;
&lt;forward_list&gt;
&lt;filesystem&gt;
&lt;iterator&gt;
&lt;list&gt;
&lt;map&gt;
&lt;memory&gt;
&lt;optional&gt;
&lt;queue&gt;
&lt;ranges&gt;
&lt;regex&gt;
&lt;set&gt;
&lt;stack&gt;
&lt;string&gt;
&lt;string_view&gt;
&lt;system_error&gt;
&lt;thread&gt;
&lt;tuple&gt;
&lt;type_index&gt;
&lt;unordered_map&gt;
&lt;unordered_set&gt;
&lt;utility&gt;
&lt;variant&gt;
&lt;vector&gt;
</pre>
</blockquote>

<note>2019-11 Moved to Ready on Friday AM in Belfast</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4835">N4835</a>.</p>

<ol>
<li><p>Add</p>
<blockquote><pre>
#include &lt;compare&gt;
</pre></blockquote>
<p>
to the following header synopses:
</p>
<ol>
<li><sref ref="[coroutine.syn]"/></li>
<li><sref ref="[system.error.syn]"/></li>
<li><sref ref="[utility.syn]"/></li>
<li><sref ref="[tuple.syn]"/></li>
<li><sref ref="[optional.syn]"/></li>
<li><sref ref="[variant.syn]"/></li>
<li><sref ref="[memory.syn]"/></li>
<li><sref ref="[type.index.synopsis]"/></li>
<li><sref ref="[string.syn]"/></li>
<li><sref ref="[string.view.synop]"/></li>
<li><sref ref="[array.syn]"/></li>
<li><sref ref="[deque.syn]"/></li>
<li><sref ref="[forward.list.syn]"/></li>
<li><sref ref="[list.syn]"/></li>
<li><sref ref="[vector.syn]"/></li>
<li><sref ref="[associative.map.syn]"/></li>
<li><sref ref="[associative.set.syn]"/></li>
<li><sref ref="[unord.map.syn]"/></li>
<li><sref ref="[unord.set.syn]"/></li>
<li><sref ref="[queue.syn]"/></li>
<li><sref ref="[stack.syn]"/></li>
<li><sref ref="[iterator.synopsis]"/></li>
<li><sref ref="[ranges.syn]"/></li>
<li><sref ref="[time.syn]"/></li>
<li><sref ref="[fs.filesystem.syn]"/></li>
<li><sref ref="[re.syn]"/></li>
<li><sref ref="[thread.syn]"/></li>
</ol>
</li>
</ol>
</resolution>
</issue>
