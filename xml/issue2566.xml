<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2566" status="New">
<title>Requirements on the first template parameter of container adaptors</title>
<section><sref ref="[container.adaptors]"/></section>
<submitter>Tim Song</submitter>
<date>8 Dec 2015</date>
<priority>99</priority>

<discussion>
<p>
As noted in <a href="http://stackoverflow.com/questions/34128782/what-is-the-use-of-first-template-parameter-in-priority-queue">this 
StackOverflow question</a>, <sref ref="[container.adaptors]"/> doesn't seem to place any requirement on the first template parameter 
(<tt>T</tt>) of <tt>stack</tt>, <tt>queue</tt>, and <tt>priority_queue</tt>: the only use of <tt>T</tt> is in the default template 
argument (which need not be used) for the second template parameter (<tt>Container</tt>), while all of the operations of the adaptors 
are defined using <tt>Container</tt>'s member typedefs.
<p/>
This permits confusing and arguably nonsensical types like <tt>queue&lt;double, deque&lt;std::string&gt;&gt;</tt> or 
<tt>priority_queue&lt;std::nothrow_t, vector&lt;int&gt;&gt;</tt>, which presumably wasn't intended.
</p>
</discussion>

<resolution>
<p>This wording is relative to N4567.</p>

<ol>
<li><p>Edit <sref ref="[container.adaptors.general]"/>/2 as indicated:</p>

<blockquote>
<p>
-2- The container adaptors each take a <tt>Container</tt> template parameter, and each constructor takes a <tt>Container</tt>
reference argument. This container is copied into the <tt>Container</tt> member of each adaptor. If the container
takes an allocator, then a compatible allocator may be passed in to the adaptor's constructor. Otherwise,
normal copy or move construction is used for the container argument. <ins>The first template parameter <tt>T</tt> of the container 
adaptors shall denote the same type as <tt>Container::value_type</tt>.</ins>
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
