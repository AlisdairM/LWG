<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2791" status="Resolved">
<title><tt>string_view</tt> objects and strings should yield the same hash values</title>
<section><sref ref="[string.view.hash]"/></section>
<submitter>Nicolai Josuttis </submitter>
<date>9 Nov 2016</date>
<priority>99</priority>

<discussion>
<p>
Under certain conditions we want to be able to use <tt>string_view</tt> instead
of <tt>string</tt>. As a consequence both types should behave the same as long we
talk about value specific behavior (if possible). For this reason, we should require 
that both strings and <tt>string_view</tt> yield the same hash values.
<p/>
Should be solved in C++17 to ensure that following this use
does not require to change hash values (which is allowed but possibly
unfortunate).
</p>

<note>2016-11-12, Issaquah</note>
<p>Resolved by P0513R0</p>
</discussion>

<resolution>
<p>This wording is relative to N4606.</p>

<blockquote class="note">
<p>
A more formal formulation would be:
</p>
<blockquote>
<p>
For any <tt>sv</tt> of type <tt>SV</tt> (being <tt>string_view</tt>, <tt>u16string_view</tt>,
<tt>u32string_view</tt>, or <tt>wstring_view</tt>) and <tt>s</tt> of the corresponding
type <tt>S</tt> (being <tt>string</tt>, <tt>u16string</tt>, <tt>u32string</tt>, or <tt>wstring</tt>),
<tt>hash&lt;SV&gt;()(sv) == hash&lt;S&gt;()(s)</tt>.
</p>
</blockquote>
</blockquote>

<ol>
<li><p>Edit <sref ref="[string.view.hash]"/> as indicated:</p>
<blockquote>
<pre>
template&lt;&gt; struct hash&lt;string_view&gt;;
template&lt;&gt; struct hash&lt;u16string_view&gt;;
template&lt;&gt; struct hash&lt;u32string_view&gt;;
template&lt;&gt; struct hash&lt;wstring_view&gt;>;
</pre>
<blockquote>
<p>
-1- The template specializations shall meet the requirements of class template <tt>hash</tt> (<sref ref="[unord.hash]"/>). 
<ins>The hash values shall be the same as the hash values for the corresponding string class 
(<sref ref="[basic.string.hash]"/>).</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
