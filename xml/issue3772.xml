<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3772" status="New">
<title><tt>repeat_view</tt>'s piecewise constructor is missing <i>Postconditions</i></title>
<section><sref ref="[range.repeat.view]"/></section>
<submitter>Your name</submitter>
<date>12 Sep 2022</date>
<priority>99</priority>

<discussion>
<p>
The first two value-bound pair constructors of <tt>repeat_view</tt> have the
<i>Preconditions</i> that the integer-like object <tt>bound</tt> must be
non-negative.
However, the piecewise constructor does not mention the valid values for
<tt>bound_args</tt>.
It would be nice to add a <i>Postconditions</i> that the initialized
<tt>bound_</tt> must be greater than or equal to <tt>0</tt> here.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="n4917"/>.
</p>

<ol>
<li>
<p>Modify <sref ref="[range.repeat.view]"/> as shown:</p>

<blockquote>
<pre>
template&lt;class... WArgs, class... BoundArgs&gt;
  requires constructible_from&lt;W, WArgs...&gt; &amp;&amp;
           constructible_from&lt;Bound, BoundArgs...&gt;
constexpr explicit repeat_view(piecewise_construct_t,
  tuple&lt;Wargs...&gt; value_args, tuple&lt;BoundArgs...&gt; bound_args = tuple&lt;&gt;{});
</pre>

<blockquote>
<p>
-5- <i>Effects</i>: Initializes <tt><i>value_</i></tt> with arguments of types <tt>WArgs...</tt> obtained by forwarding the elements of <tt>value_args</tt> and initializes <tt><i>bound_</i></tt> 
with arguments of types <tt>BoundArgs...</tt> obtained by forwarding the elements of <tt>bound_args</tt>. (Here, forwarding an element <tt>x</tt> of type <tt>U</tt> within a tuple object means calling <tt>std::forward&lt;U&gt;(x)</tt>.)  
</p>
<p>
<ins>-?- <i>Postconditions</i>: If <tt>Bound</tt> is not <tt>unreachable_sentinel_t</tt>, <tt><i>bound_</i></tt> &ge; 0.</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>

</resolution>

</issue>
