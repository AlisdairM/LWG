<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2818" status="New">
<title><tt>"::std::"</tt> everywhere rule needs tweaking</title>
<section><sref ref="[contents]"/></section>
<submitter>Tim Song</submitter>
<date>11 Nov 2016</date>
<priority>2</priority>

<discussion>
<p>
[contents]/3 says
</p>
<blockquote><p>
Whenever a name <tt>x</tt> defined in the standard library is mentioned, the name <tt>x</tt> is assumed to be fully 
qualified as <tt>::std::x</tt>, unless explicitly described otherwise. For example, if the <i>Effects</i> section 
for library function <tt>F</tt> is described as calling library function <tt>G</tt>, the function <tt>::std::G</tt> is meant.
</p></blockquote>
<p>
With the introduction of nested namespaces inside <tt>std</tt>, this rule needs tweaking. For instance, 
<tt>time_point_cast</tt>'s <i>Returns</i> clause says "<tt>time_point&lt;Clock, 
ToDuration&gt;(duration_cast&lt;ToDuration&gt;(t.time_since_epoch()))</tt>"; that reference to <tt>duration_cast</tt> 
obviously means <tt>::std::chrono::duration_cast</tt>, not <tt>::std::duration_cast</tt>, which doesn't exist.
</p>

<note>Issues Telecom 16-Dec-2016</note>
<p>Priority 2; Jonathan to provide wording</p>
</discussion>

<resolution>
</resolution>

</issue>
