<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3279" status="New">
<title><tt>shared_ptr&lt;int&gt;&amp;</tt> does not not satisfy <tt>readable</tt></title>
<section><sref ref="[iterator.concept.readable]"/></section>
<submitter>Eric Niebler</submitter>
<date>9 Sep 2019</date>
<priority>1</priority>

<discussion>
<p>
In the current spec, <tt>shared_ptr&lt;int&gt;</tt> is <tt>readable</tt>, but <tt>shared_ptr&lt;int&gt;&amp;</tt> 
is not. That is because <tt>readable_traits</tt> is not stripping top-level references before testing 
for nested typedefs.
<p/>
Either <tt>readable_traits</tt> should see through <i>cv</i>- and ref-qualifiers, or else the 
<tt>readable</tt> concept should strip top-level references when building the <tt>iter_value_t</tt> 
associated type (e.g., <tt>iter_value_t&lt;remove_reference_t&lt;In&gt;&gt;</tt>).
<p/>
Suggest priority P1 because it effects the definition of a concept which cannot change after C++20.
</p>
<note>2019-10 Priority set to 1 after reflector discussion</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4830">N4830</a>.</p>

<ol>
<li><p>Modify <sref ref="[iterator.concept.readable]"/>, concept <tt>readable</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
template&lt;class In&gt;
  concept readable =
    requires {
      typename iter_value_t&lt;<ins>remove_reference_t&lt;</ins>In<ins>&gt;</ins>&gt;;
      typename iter_reference_t&lt;In&gt;;
      typename iter_rvalue_reference_t&lt;In&gt;;
    } &amp;&amp;
    common_reference_with&lt;iter_reference_t&lt;In&gt;&amp;&amp;, iter_value_t&lt;<ins>remove_reference_t&lt;</ins>In<ins>&gt;</ins>&gt;&amp;&gt; &amp;&amp;
    common_reference_with&lt;iter_reference_t&lt;In&gt;&amp;&amp;, iter_rvalue_reference_t&lt;In&gt;&amp;&amp;&gt; &amp;&amp;
    common_reference_with&lt;iter_rvalue_reference_t&lt;In&gt;&amp;&amp;, const iter_value_t&lt;<ins>remove_reference_t&lt;</ins>In<ins>&gt;</ins>&gt;&amp;&gt;;
</pre>
</blockquote>
</li>
</ol>

</resolution>
</issue>
