<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2950" status="New">
<title><tt>std::byte</tt> operations are misspecified</title>
<section><sref ref="[support.types.byteops]"/></section>
<submitter>Thomas K&ouml;ppe </submitter>
<date>24 Mar 2017</date>
<priority>99</priority>

<discussion>
<p>
The operations for <tt>std::byte</tt> (<sref ref="[support.types.byteops]"/>) are currently specified to have undefined 
behaviour in general cases, since the type of the expression <i>expr</i> that appears in <tt>return byte(<i>expr</i>)</tt> is 
obtained by the arithmetic conversion rules and has higher conversion rank than <tt>unsigned char</tt>. Therefore, the 
value of the expression may be outside the range of the enum (for example, consider <tt>~0</tt>), and by 
<sref ref="[expr.static.cast]"/> p10 the conversion results in undefined behaviour.
<p/>
I believe the original intent of the specification could be expressed correctly with the following, more verbose sequence 
of casts. I will only give one representative example:
</p>
<blockquote>
<pre>
byte operator&lt;&lt;(byte b, IntType shift)
</pre>
<blockquote>
<p>
Equivalent to: <tt>return byte(static_cast&lt;unsigned char&gt;(static_cast&lt;unsigned char&gt;(b) &lt;&lt; shift));</tt>
</p>
</blockquote>
</blockquote>
</discussion>

<resolution>
</resolution>

</issue>
