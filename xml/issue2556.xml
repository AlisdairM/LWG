<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2556" status="New">
<title>Wide contract for <tt>future::share()</tt></title>
<section><sref ref="[futures.unique_future]"/></section>
<submitter>Agust&iacute;n K-ballo Berg&eacute;</submitter>
<date>5 Nov 2015</date>
<priority>3</priority>

<discussion>
<p>
<tt>future::share()</tt> is not <tt>noexcept</tt>, it has a narrow contact requiring <tt>valid()</tt> as per the blanket 
wording in <sref ref="[futures.unique_future]"/> p3. Its effects, however, are <tt>return shared_future&lt;R&gt;(std::move(*this))</tt>, 
which is <tt>noexcept</tt> as it has a wide contract. If the source <tt>future</tt> isn't valid then the target 
<tt>shared_future</tt> simply won't be valid either. There appears to be no technical reason preventing <tt>future::share()</tt> 
from having a wide contract, and thus being <tt>noexcept</tt>.
</p>
</discussion>

<resolution>
<p>This wording is relative to N4567.</p>

<ol>
<li><p>Change <sref ref="[futures.unique_future]"/> as indicated:</p>

<blockquote>
<p>
-3- The effect of calling any member function other than the destructor, the move-assignment operator, <ins><tt>share</tt>,</ins> 
or <tt>valid</tt> on a <tt>future</tt> object for which <tt>valid() == false</tt> is undefined. [<i>Note</i>: Implementations 
are encouraged to detect this case and throw an object of type <tt>future_error</tt> with an error condition of 
<tt>future_errc::no_state</tt>. &mdash; <i>end note</i>]
</p>
<blockquote><pre>
namespace std {
  template &lt;class R&gt;
  class future {
  public:
    [&hellip;]
    shared_future&lt;R&gt; share() <ins>noexcept</ins>;
    [&hellip;]
  };
}
</pre></blockquote>
<p>
[&hellip;]
</p>
<pre>
shared_future&lt;R&gt; share() <ins>noexcept</ins>;
</pre>
<blockquote>
<p>
-12- <i>Returns</i>: <tt>shared_future&lt;R&gt;(std::move(*this))</tt>.
<p/>
-13- <i>Postcondition</i>: <tt>valid() == false</tt>.
</p>
</blockquote>
<p>
[&hellip;]
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
