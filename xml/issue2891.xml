<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2891" status="New">
<title>Relax library requirements on volatile types</title>
<section><sref ref="[conforming]"/></section>
<submitter>Great Britain</submitter>
<date>3 Feb 2017</date>
<priority>99</priority>

<discussion>
<b>Addresses GB 35</b>

<p>Most implementations have poor testing and support for instantiating standard library templates with volatile-qualified types. We should grant a library-freedom to conforming implementations so that support for volatile (and const volatile) qualified types in standard library templates is not required unless explicitly specified - and mandate such support for all templates in the &lt;type_traits&gt; header. Additional support is already specified in most places we would be interested (e.g., tuple API). We may want to additionally guarantee support through forwarding references.</p>
<p>Proposed change: add a new 17.6.5.x Volatile Qualified Types [res.on.volatile.type] describing the intended level of support for volatile qualifiers.</p>

</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
