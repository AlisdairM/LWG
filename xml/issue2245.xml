<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2245" status="Open">
<title><tt>packaged_task::reset()</tt> memory allocation</title>
<section><sref ref="[futures.task.members]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>5 Mar 2013</date>
<priority>3</priority>

<discussion>

<p>
The effects of <tt>packaged_task::reset()</tt> result in memory allocation, but
don't allow a user to provide an allocator.
<p/>
<tt>packaged_task::reset()</tt> needs to be overloaded like so:
</p>

<blockquote><pre>
template&lt;class Alloc&gt;  
void reset(const Alloc&amp;);
</pre></blockquote>

<p>
Alternatively, the effects of <tt>reset()</tt> need to require the same allocator is used 
as at construction, which would require the constructor to store the allocator for later use.
<p/>
I like to remark that GCC at the moment uses the second option, i.e. the allocator passed to the constructor 
(if any) is used to create the new shared state, because this didn't require any change to the
interface.
</p>

<note>2015-02 Cologne</note>
<p>
Handed over to SG1.
</p>

<note>2015-05 Lenexa, SG1 response</note>
<p>
No strong opinions in SG1, and this is really an LWG issue.  Back to you.
</p>

</discussion>

<resolution>
</resolution>

</issue>
