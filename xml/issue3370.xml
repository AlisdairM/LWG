<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3370" status="New">
<title>&sect;[cstdint.syn]p2 and &sect;[headers]p5 are not sufficiently clear</title>
<section><sref ref="[cstdint.syn]"/><sref ref="[headers]"/></section>
<submitter>Dawid Pilarski</submitter>
<date>14 Jan 2020</date>
<priority>3</priority>

<discussion>
<p>
This issue has been submitted, because the editorial change requests 
<a href="https://github.com/cplusplus/draft/issues/3521">c++-draft-issue 3521</a> and
<a href="https://github.com/cplusplus/draft/pull/3528">c++-draft-pull request 3528</a>
has been rejected as not being editorial changes:
</p>
<p>
Currently given wording of <sref ref="[cstdint.syn]"/>p2:
</p>
<blockquote><p>
The header defines all types and macros the same as the C standard library header <tt>&lt;stdint.h&gt;</tt>.
</p></blockquote>
<p>
might be understood as intended: typedefs inside <tt>stdint.h</tt> and inside <tt>cstdint</tt> in namespace 
<tt>std::</tt> refer to the same types, but another interpretation could be, that it's understood as:
<p/>
Definitions in both files are done the same way (<tt>cstdint</tt> provides typedefs not in namespace 
<tt>std</tt>, because it would be a different definition than one in <tt>stdint.h</tt>).
<p/>
Also <sref ref="[headers]"/>p5 is non sufficiently clear:
</p>
<blockquote><p>
[&hellip;] the contents of each header <tt>c<i>name</i></tt> is the same as that of the corresponding header 
<tt><i>name</i>.h</tt> [&hellip;]
</p></blockquote>
<p>
As it doesn't say what does "same content" mean. For example is an implementation allowed to do following:
</p>
<blockquote><pre>
// __impl.h
typedef int __my_int;
namespace std { typedef long __my_int; }

// cname header
#include "__impl.h"

namespace std {
  typedef __my_int uint32_t;
}

// name.h header
#include "__impl.h"
typedef __my_int uint32_t;
</pre></blockquote>
<p>
? 
<p/>
In this case typedef from namespace <tt>std</tt> and from global namespace refer to different types?
<p/>
Proposed change:
<p/>
Apply wording, that will unambiguously make typedefs from namespace <tt>std</tt> refer to the same types 
as typedefs from global namespace for all headers <tt><i>name</i>.h</tt> and their corresponding headers 
<tt>c<i>name</i></tt>.
</p>

<note>2020-01-25 Issue Prioritization</note>
<p>Priority to 3 after reflector discussion.</p></discussion>

<resolution>
</resolution>

</issue>
