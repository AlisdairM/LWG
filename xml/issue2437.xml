<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2437" status="New">
<title><tt>iterator_traits&lt;OutIt&gt;::reference</tt> can and can't be <tt>void</tt></title>
<section><sref ref="[iterator.iterators]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>1 Oct 2014</date>
<priority>99</priority>

<discussion>
<p>
<sref ref="[iterator.iterators]"/>/2 requires an <tt>Iterator</tt>'s <tt>*r</tt> to return <tt>reference</tt>, 
i.e. <tt>iterator_traits&lt;X&gt;::reference</tt> according to <sref ref="[iterator.requirements.general]"/>/11.
<p/>
<sref ref="[output.iterators]"/>/1 requires an <tt>OutputIterator</tt>'s <tt>*r = o</tt> to do its job, 
so <tt>*r</tt> clearly can't return <tt>void</tt>.
<p/>
<sref ref="[iterator.traits]"/>/1 says: "In the case of an output iterator, the types
</p>
<blockquote><pre>
iterator_traits&lt;Iterator&gt;::difference_type
iterator_traits&lt;Iterator&gt;::value_type
iterator_traits&lt;Iterator&gt;::reference
iterator_traits&lt;Iterator&gt;::pointer
</pre></blockquote>
<p>
may be defined as <tt>void</tt>."
<p/>
This is contradictory. I suggest fixing this by moving the offending requirement down from <tt>Iterator</tt> to 
<tt>InputIterator</tt>, and making <tt>Iterator</tt> say that <tt>*r</tt> returns an unspecified type. This will 
have the following effects:
</p>
<ul>
<li><p>Output-only iterators will inherit Iterator's "<tt>*r</tt> returns unspecified" requirement, while 
<sref ref="[iterator.traits]"/>/1 clearly permits reference/etc. to be <tt>void</tt>.</p></li>
<li><p>Input-or-stronger iterators (whether constant or mutable) are unaffected &mdash; they still have to satisfy 
"<tt>*r</tt> returns reference", they're just getting that requirement from <tt>InputIterator</tt> instead of 
<tt>Iterator</tt>.</p></li>
</ul>
</discussion>

<resolution>
<p>
This wording is relative to N3936.
</p>

<ol>
<li><p>In <sref ref="[iterator.iterators]"/> Table 106 "Iterator requirements" change as indicated:</p>

<blockquote>
<table border="1">
<caption>Table 106 &mdash; Iterator requirements</caption>
<tr>
<th>Expression</th>
<th>Return type</th>
<th>Operational<br/>semantics</th>
<th>Assertion&#47;note pre-&#47;post-condition</th>
</tr>

<tr>
<td>
<tt>*r</tt>
</td>
<td>
<del><tt>reference</tt></del><ins>unspecified</ins>
</td>
<td>
<tt></tt>
</td>
<td>
<i>pre</i>: <tt>r</tt> is dereferenceable.
</td>
</tr>

<tr>
<td colspan="4" align="center">
<tt>&hellip;</tt>
</td>
</tr>
</table>
</blockquote></li>

<li><p>In <sref ref="[input.iterators]"/> Table 107 "Input iterator requirements" change as indicated:</p>

<blockquote>
<table border="1">
<caption>Table 107 &mdash; Input iterator requirements (in addition to Iterator)</caption>
<tr>
<th>Expression</th>
<th>Return type</th>
<th>Operational<br/>semantics</th>
<th>Assertion&#47;note pre-&#47;post-condition</th>
</tr>

<tr>
<td colspan="4" align="center">
<tt>&hellip;</tt>
</td>
</tr>

<tr>
<td>
<tt>*a</tt>
</td>
<td>
<ins><tt>reference</tt>,</ins> convertible to <tt>T</tt>
</td>
<td>
<tt></tt>
</td>
<td>
[&hellip;]
</td>
</tr>

<tr>
<td colspan="4" align="center">
<tt>&hellip;</tt>
</td>
</tr>
</table>
</blockquote></li>
</ol>

</resolution>

</issue>
