<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2805" status="New">
<title><tt>void</tt> and reference type alternatives in <tt>variant</tt>, <tt>variant&lt;&gt;</tt> and 
<tt>index()</tt></title>
<section><sref ref="[variant]"/><sref ref="[variant.variant]"/><sref ref="[variant.ctor]"/></section>
<submitter>Marshall Clow</submitter>
<date>10 Nov 2016</date>
<priority>99</priority>

<discussion>
<p>
<b>Addresses CH 3, CH 4, CH 5, CH 6, CH 8</b>
</p>
<ol>
<li><p><tt>variant</tt> allows reference types as   
alternatives; <tt>optional</tt> explicitly forbids  
to  be  instantiated for reference types.  
This is inconsistent.</p></li>
<li><p><tt>variant&lt;int, void&gt;</tt> should be as   
usable as <tt>variant&lt;int&gt;</tt></p></li>
<li><p><tt>variant&lt;&gt;</tt> should not have an     
<tt>index()</tt> function</p></li>
<li><p>Clarify the intended behavior of     
<tt>variant</tt> for alternative  types  that  are  
references.</p></li>
<li><p>Clarify <tt>variant</tt> construction.</p></li>
</ol>
<p>
Proposed change:
<p/>
<ol>
<li><p>Consider allowing reference types for both or none.</p></li>
<li><p>&mdash;</p></li>
<li><p>Consider  specifying a specialization for <tt>variant&lt;&gt;</tt>
like:</p>
<blockquote><pre>
template&lt;&gt; 
class variant&lt;&gt; 
{ 
public: 
  variant() = delete; 
  variant(const variant&amp;) = delete; 
  variant&amp; operator=(variant const&amp;) = delete;
};
</pre></blockquote>
</li>
<li><p>Add a respective note.</p></li>
<li><p>Add a note that <tt>variant&lt;&gt;</tt> cannot be constructed.</p></li>
</ol>
</p>

</discussion>

<resolution>
</resolution>

</issue>
