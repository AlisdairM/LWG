<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3844" status="Open">
<title>Non-numeric formats for negative durations</title>
<section><sref ref="[time.format]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>20 Dec 2022</date>
<priority>3</priority>

<discussion>
<p>
The wording of <sref ref="[time.format]"/> p4 seems to have some
unwanted consequences. It says:
</p>
<blockquote>
The result of formatting a <tt>std::chrono::duration</tt> instance holding a
negative value, or an <tt>hh_mm_ss</tt> object <tt>h</tt> for which
<tt>h.is_negative()</tt> is <tt>true</tt>, is equivalent to the output
of the corresponding positive value,
with a <tt><i>STATICALLY-WIDEN</i>&lt;charT&gt;("-")</tt>
character sequence placed before the replacement of
the initial conversion specifier.
</blockquote>

<p>
Taken literally, I think that means:
</p>

<blockquote><pre>
format("{:%q}", -1s) == "-s"
format("{:%t%j}", -25h) == "-\t1"
format("{:%p%I}", -11h) == "-am11"
</pre></blockquote>

<p>
The last one probably doesn't matter (what does -11am mean anyway?)
but some of them do matter, for example something like
"<tt>{:(%q)%t%Q}"</tt> intends to put the unit suffix first in parens
but will print <tt>"(-s)\t1"</tt> which probably isn't what the user wanted.
</p>

<p>
I think we want to place the sign before the first <u>numeric</u>
conversion specifier, not "the initial conversion specifier".
That is what Howard's <tt>date::format</tt> and &lt;fmt&gt; both do.
</p>

<note>Issaquah 2023-02-10; LWG issue processing</note>
<p>
Set priority to 3. Proposed a hybrid resolution.
</p>

<p><strong>Previous resolution [SUPERSEDED]:</strong></p>
<blockquote class="note">
<blockquote class="note">
Two alternatives are presented,
choose one of <b>Option A</b> or <b>Option B</b>.
</blockquote>

<ol>
<li>
<p> Modify <sref ref="[time.format]"/> as indicated: </p>
<blockquote>

<p><b>Option A</b></p>

<p>-4-
The result of formatting a <tt><del>std::</del>chrono::duration</tt>
instance holding a negative value, or a<del>n</del>
<tt><ins>chrono::</ins>hh_mm_ss</tt> object <tt>h</tt> for which
<tt>h.is_negative()</tt> is <tt>true</tt>,
is equivalent to the output
of the corresponding positive value,
with a <tt><i>STATICALLY-WIDEN</i>&lt;charT&gt;("-")</tt>
character sequence placed before the replacement of
the <del>initial</del> <ins>first</ins>
conversion specifier
<ins>that is not one of %n, %p, %q, %t, or %%</ins>.
</p>

<p><b>Option B</b></p>

<p>-4-
<ins>Among the specifiers, %H, %I, %M, %S, and %T, the</ins> <del>The</del>
result of formatting a <tt><del>std::</del>chrono::duration</tt>
instance holding a negative value, or a<del>n</del>
<tt><ins>chrono::</ins>hh_mm_ss</tt> object <tt>h</tt> for which
<tt>h.is_negative()</tt> is <tt>true</tt>,
is equivalent to the output
of the corresponding positive value,
with a <tt><i>STATICALLY-WIDEN</i>&lt;charT&gt;("-")</tt>
character sequence placed before the replacement of
the initial conversion specifier.
</p>

</blockquote>
</li>
</ol>
</blockquote>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4928"/>.
</p>

<ol>
<li>
<p> Modify <sref ref="[time.format]"/> as indicated: </p>
<blockquote>
<p>-4-
The result of formatting a <tt><del>std::</del>chrono::duration</tt>
instance holding a negative value, or a<del>n</del>
<tt><ins>chrono::</ins>hh_mm_ss</tt> object <tt>h</tt> for which
<tt>h.is_negative()</tt> is <tt>true</tt>,
is equivalent to the output
of the corresponding positive value,
with a <tt><i>STATICALLY-WIDEN</i>&lt;charT&gt;("-")</tt>
character sequence placed before the replacement of
the <del>initial</del> <ins>first</ins>
conversion specifier
<ins>that is one of %H, %I, %M, %S, or %T</ins>.
</p>
</blockquote>
</li>
</ol>

</resolution>

</issue>
