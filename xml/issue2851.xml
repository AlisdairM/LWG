<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2851" status="WP">
<title><tt>std::filesystem</tt> enum classes are now underspecified</title>
<section><sref ref="[fs.enum.file_type]"/><sref ref="[fs.enum.copy.opts]"/><sref ref="[fs.enum.dir.opts]"/></section>
<submitter>Tim Song</submitter>
<date>18 Dec 2016</date>
<priority>2</priority>

<discussion>
<p>
LWG <iref ref="2678"/> stripped the numerical values of the enumerators from three enum classes in <sref ref="[fs.enum]"/>; 
in doing so it also removed the implicit specification 1) of the bitmask elements for the two bitmask types (<tt>copy_options</tt> 
and <tt>directory_options</tt>) and 2) that the <tt>file_type</tt> constants are distinct.
</p>

<note>2017-01-27 Telecon</note>
<p>Priority 2; Jonathan to work with Tim to tweak wording.</p>

<note>2018-01-16, Jonathan comments</note>
<p>
I no longer remember what I didn't like about Tim's P/R so I think we should accept the original P/R.
</p>

<note>2018-1-26 issues processing telecon</note>
<p>Status to 'Tentatively Ready'</p>
<note>2018-3-17 Adopted in Jacksonville</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4713">N4713</a>.</p>

<ol>
<li><p>Edit <sref ref="[fs.enum.file_type]"/>/1 as indicated:</p>
<blockquote>
<p>
This enum class specifies constants used to identify file types, with the meanings listed in Table 123. 
<ins>The values of the constants are distinct.</ins>
</p>
</blockquote>
</li>

<li><p>Edit <sref ref="[fs.enum.copy.opts]"/>/1 as indicated:</p>
<blockquote>
<p>
The <tt>enum class</tt> type <tt>copy_options</tt> is a bitmask type (<sref ref="[bitmask.types]"/>) that 
specifies bitmask constants used to control the semantics of copy operations. The constants are specified 
in option groups with the meanings listed in Table 124. <ins>The constant <tt>none</tt> represents the empty bitmask, and </ins><del>Constant <tt>none</tt></del> is shown in each option group for purposes of 
exposition; implementations shall provide only a single definition. <ins>Every other constant in the 
table represents a distinct bitmask element.</ins> Calling a library function with more than a single 
constant for an option group results in undefined behavior.
</p>
</blockquote>
</li>

<li><p>Edit <sref ref="[fs.enum.dir.opts]"/>/1 as indicated:</p>
<blockquote>
<p>
The <tt>enum class</tt> type <tt>directory_options</tt> is a bitmask type (<sref ref="[bitmask.types]"/>) 
that specifies bitmask constants used to identify directory traversal options, with the meanings listed 
in Table 127. <ins>The constant <tt>none</tt> represents the empty bitmask; every other constant in the 
table represents a distinct bitmask element.</ins>
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
