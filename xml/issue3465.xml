<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3465" status="Tentatively Ready">
<title><tt>compare_partial_order_fallback</tt> requires <tt>F &lt; E</tt></title>
<section><sref ref="[cmp.alg]"/></section>
<submitter>Stephan T. Lavavej</submitter>
<date>18 Jul 2020</date>
<priority>0</priority>

<discussion>
<p>
<tt>compare_partial_order_fallback</tt> uses three expressions, but requires only two. The decayed types 
of <tt>E</tt> and <tt>F</tt> are required to be identical, but variations in constness might make a difference.
</p>

<note>2020-07-26; Reflector prioritization</note>
<p>
Set priority to 0 and status to Tentatively Ready after seven votes in favour during reflector discussions.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4861">N4861</a>. 
</p>

<ol>
<li><p>Modify <sref ref="[cmp.alg]"/> as indicated:</p>

<blockquote>
<p>
-6- The name <tt>compare_partial_order_fallback</tt> denotes a customization point object 
(<sref ref="[customization.point.object]"/>). Given subexpressions <tt>E</tt> and <tt>F</tt>, 
the expression <tt>compare_partial_order_fallback(E, F)</tt> is expression-equivalent
(<sref ref="[defns.expression-equivalent]"/>) to:
</p>
<ol style="list-style-type: none">
<li><p>(6.1) &mdash; If the decayed types of <tt>E</tt> and <tt>F</tt> differ, 
<tt>compare_partial_order_fallback(E, F)</tt> is ill-formed.</p></li>
<li><p>(6.2) &mdash; Otherwise, <tt>partial_order(E, F)</tt> if it is a well-formed expression.</p></li>
<li><p>(6.3) &mdash; Otherwise, if the expressions <tt>E == F</tt><ins>,</ins> <del>and</del> 
<tt>E &lt; F</tt><ins>, and <tt>F &lt; E</tt></ins> are <ins>all</ins><del>both</del> well-formed 
and convertible to <tt>bool</tt>,</p>
<blockquote>
<pre>
E == F ? partial_ordering::equivalent :
E &lt; F  ? partial_ordering::less :
F &lt; E  ? partial_ordering::greater :
         partial_ordering::unordered
</pre>
</blockquote>
<p>
except that <tt>E</tt> and <tt>F</tt> are evaluated only once.
</p>
</li>
<li><p>(6.4) &mdash; Otherwise, <tt>compare_partial_order_fallback(E, F)</tt> is ill-formed.</p></li></ol>
</blockquote>
</li>
</ol>
</resolution>

</issue>
