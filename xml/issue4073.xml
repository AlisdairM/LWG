<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4073" status="New">
<title>`concat_view::size` may overflow</title>
<section><sref ref="[range.concat.view]"/></section>
<submitter>Hewill Kang</submitter>
<date>21 Apr 2024</date>
<priority>99</priority>

<discussion>
<p>
Currently, `concat_view::size` returns the sum of sizes of all underlying ranges, 
and the return type is specified to be the common type of all sizes, which may lead to 
potential overflow:
</p>
<blockquote><pre>
auto r = std::views::iota(0uz, SIZE_MAX);
std::print("{}\n", r.size());            // 18446744073709551615 (size_t)
std::print("{}\n", r.end() - r.begin()); // 18446744073709551615 (__int128)

auto c = std::views::concat(r, r);    
std::print("{}\n", c.size());            // <span style="color:red;font-weight:bolder">18446744073709551614 (size_t)</span>
std::print("{}\n", c.end() - c.begin()); // 36893488147419103230 (__int128)
</pre></blockquote>
</discussion>

<resolution>
</resolution>

</issue>
