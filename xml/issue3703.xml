<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3703" status="New">
<title>Missing requirements for <tt>expected&lt;T, E&gt; requires is_void&lt;T&gt;</tt></title>
<section><sref ref="[expected.void.general]"/></section>
<submitter>Casey Carter</submitter>
<date>24 May 2022</date>
<priority>99</priority>

<discussion>
<p>
The partial specialization <tt>expected&lt;T, E&gt; requires is_void&lt;T&gt;</tt> specified in 
<sref ref="[expected.void.general]"/> is missing some template parameter requirements that should 
have been copied from <sref ref="[expected.object.general]"/>. We should copy the pertinent 
requirements from the first two paragraphs of the latter subclause into new paragraphs in the first 
subclause (the pertinent requirement from the third paragraph is already present in 
<sref ref="[expected.void.general]"/>).
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4910"/>.
</p>

<blockquote class="note">
<p>
[<i>Drafting note:</i> There is some drive-by cleanup that I couldn't resist while touching this wording: (1) 
strike the redundant "suitably aligned" guarantee, (2) Don't repeat in prose that the exposition-only members 
are exposition-only.]
</p>
</blockquote>

<ol>
<li><p>Modify <sref ref="[expected.object.general]"/> as indicated:</p>

<blockquote>
<p>
-1- Any object of type <tt>expected&lt;T, E&gt;</tt> either contains a value of type <tt>T</tt> or a value 
of type <tt>E</tt> within its own storage. Implementations are not permitted to use additional storage, such 
as dynamic memory, to allocate the object of type <tt>T</tt> or the object of type <tt>E</tt>. <del>These objects 
are allocated in a region of the <tt>expected&lt;T, E&gt;</tt> storage suitably aligned for the types <tt>T</tt> 
and <tt>E</tt>. Members <tt><i>has_val</i></tt>, <tt><i>val</i></tt>, and <tt><i>unex</i></tt> are provided 
for exposition only.</del> <tt><i>has_val</i></tt> indicates whether the <tt>expected&lt;T, E&gt;</tt> object 
contains an object of type <tt>T</tt>.
</p>
</blockquote>
</li>

<li><p>Modify <sref ref="[expected.void.general]"/> as indicated:</p>

<blockquote>
<p>
<ins>-?- Any object of type <tt>expected&lt;T, E&gt;</tt> either represents a value of type <tt>T</tt>, or contains 
a value of type <tt>E</tt> within its own storage. Implementations are not permitted to use additional storage, 
such as dynamic memory, to allocate the object of type <tt>E</tt>. <tt><i>has_val</i></tt> indicates whether the 
<tt>expected&lt;T, E&gt;</tt> object contains an object of type <tt>T</tt>.</ins>
<p/>
<ins>-?- A program that instantiates the definition of the template <tt>expected&lt;T, E&gt;</tt> with a type for the 
<tt>E</tt> parameter that is not a valid template argument for <tt>unexpected</tt> is ill-formed.</ins>
<p/>
-1- <tt>E</tt> shall meet the requirements of <i>Cpp17Destructible</i> (Table [tab:cpp17.destructible]).
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
