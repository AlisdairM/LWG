<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3140" status="New">
<title><tt><i>COMMON_REF</i></tt> is unimplementable as specified</title>
<section><sref ref="[meta.trans.other]"/></section>
<submitter>Casey Carter</submitter>
<date>7 Jul 2018</date>
<priority>99</priority>

<discussion>

<p>
<sref ref="[meta.trans.other]"/>/3.2 states:
<blockquote>
[Let] <tt><i>XREF</i>(A)</tt> denote a unary class template <tt>T</tt> such that <tt>T&lt;U&gt;</tt>
denotes the same type as <tt>U</tt> with the addition of <tt>A</tt>’s cv and reference qualifiers,
for a non-reference cv-unqualified type <tt>U</tt>,
</blockquote>
which is nonsensical: a specialization of a <em>class</em> template cannot possibly be a cv-qualified
type or reference type. <tt><i>XREF</i>(A)</tt> must be a unary alias template.
</p>

</discussion>

<resolution>

<p>This wording is relative to <a href="http://wg21.link/n4762">N4762</a>.</p>

<p>Change <sref ref="[meta.trans.other]"/> as indicated:</p>
<blockquote>
<p>
-3- Let:
</p>
<blockquote>
<p>
(3.1) &mdash; <tt><i>CREF</i>(A)</tt> be <tt>add_lvalue_reference_t&lt;const remove_reference_t&lt;A&gt;&gt;</tt>,
</p><p>
(3.2) &mdash; <tt><i>XREF</i>(A)</tt> denote a unary <del>class</del><ins>alias</ins> template <tt>T</tt>
such that <tt>T&lt;U&gt;</tt> denotes the same type as <tt>U</tt> with the addition of <tt>A</tt>’s
cv and reference qualifiers, for a non-reference cv-unqualified type <tt>U</tt>,
</p><p>
(3.3) &mdash; <tt><i>COPYCV</i>(FROM, TO)</tt> be an alias for type <tt>TO</tt> with the addition of
<tt>FROM</tt>’s top-level cv-qualifiers. [<i>Example</i>: <tt><i>COPYCV</i>(const int, volatile short)</tt>
is an alias for <tt>const volatile short</tt>. &mdash;<i>end example</i>]
</p>
</blockquote>
</blockquote>

</resolution>

</issue>
