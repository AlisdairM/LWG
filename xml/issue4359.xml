<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4359" status="New">
<title>`as_awaitable(expr, p)` does not define semantics of call if `p` is not an lvalue</title>
<section>
<sref ref="[exec.as.awaitable]"/>
</section>
<submitter>Lewis Baker</submitter>
<date>27 Aug 2025</date>
<priority>99</priority>

<discussion>
<p>
The wording in <sref ref="[exec.as.awaitable]"/> p7 defines the semantics of a call to `as_awaitable(expr, p)` 
where `p` is an lvalue. However, it does not specify what the behaviour is if `p` is not an lvalue.
<p/>
We should probably say that `as_awaitable(expr, p)` is ill-formed if `p` is not an lvalue.
</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N5014"/>.
</p>

<ol>

<li><p>Modify <sref ref="[exec.as.awaitable]"/> as indicated:</p>

<blockquote>
<p>
-7- `as_awaitable` is a customization point object. For subexpressions `expr` and `p` where <del>`p` 
is an lvalue,</del> `Expr` names the type `decltype((expr))` and `Promise` names the type 
<tt>decay_t&lt;decltype((p))&gt;</tt>, <ins>if `p` is not an lvalue, `as_awaitable(expr, p)` is 
ill-formed, otherwise</ins> `as_awaitable(expr, p)` is expression-equivalent to, 
except that the evaluations of `expr` and `p` are indeterminately sequenced:
</p>
</blockquote>

</li>

</ol>
</resolution>

</issue>
