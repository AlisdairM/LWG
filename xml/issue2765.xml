<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2765" status="New">
<title>Did LWG 1123 go too far?</title>
<section><sref ref="[ios::Init]"/></section>
<submitter>Richard Smith</submitter>
<date>13 Aug 2016</date>
<priority>99</priority>

<discussion>
<p>
<iref ref="1123"/> fixed a bug where users of <tt>&lt;iostream&gt;</tt> were not guaranteed to have their streams flushed 
on program shutdown. However, it also added this rule:
</p>
<blockquote><p>
"Similarly, the entire program shall behave as if there were at least one instance of <tt>ios_base::Init</tt> with static 
lifetime."
</p></blockquote>
<p>
This seems pointless: it only affects the behavior of programs that never include <tt>&lt;iostream&gt;</tt> (because programs 
that do include it are already guaranteed at least one such instance), and those programs do not need an implicit flush 
because they cannot have written to the relevant streams.
<p/>
It's also actively harmful, because it requires the iostreams component to be linked into programs that do not use it, 
apparently even including freestanding implementations! Fortunately, C++ implementations appear to uniformly ignore this rule.
<p/>
Can it be removed?
</p>
</discussion>

<resolution>
</resolution>

</issue>

