<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2787" status="Pending WP">
<title>&sect;[fs.file_status.cons] doesn't match class definition</title>
<section><sref ref="[fs.class.file_status]"/><sref ref="[fs.file_status.cons]"/></section>
<submitter>Tim Song</submitter>
<date>21 Oct 2016</date>
<priority>0</priority>

<discussion>
<p><sref ref="[fs.class.file_status]"/> depicts:</p>
<blockquote><pre>
explicit file_status(file_type ft = file_type::none, perms prms = perms::unknown) noexcept;
</pre></blockquote>
<p>
while <sref ref="[fs.file_status.cons]"/> describes two constructors:
</p>
<blockquote><pre>
explicit file_status() noexcept;
explicit file_status(file_type ft, perms prms = perms::unknown) noexcept;
</pre></blockquote>
<p>
It's also not clear why the default constructor needs to be explicit. Unlike tag types, there doesn't seem to be 
a compelling reason to disallow constructing a <tt>file_status</tt> without naming the type.
</p>
<note>2016-11-12, Issaquah</note>
<p>Sat AM: Priority 0; move to Ready</p>
</discussion>

<resolution>
<p>This wording is relative to N4606.</p>

<ol>
<li><p>Edit <sref ref="[fs.class.file_status]"/> as indicated:</p>

<blockquote><pre>
class file_status {
public:
  // 27.10.11.1, constructors and destructor:
  <ins>file_status() noexcept : file_status(file_type::none) {}</ins>
  explicit file_status(file_type ft <del>= file_type::none</del>,
                       perms prms = perms::unknown) noexcept;
  [&hellip;]
};
</pre></blockquote>
</li>

<li><p>Edit <sref ref="[fs.file_status.cons]"/> as indicated:</p>

<blockquote>
<pre>
<del>explicit file_status() noexcept;</del>
</pre>
<blockquote>
<p>
<del>-1- <i>Postconditions:</i> <tt>type() == file_type::none</tt> and <tt>permissions() == perms::unknown</tt>.</del>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
