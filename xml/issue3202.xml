<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3202" status="WP">
<title>P0318R1 was supposed to be revised</title>
<section><sref ref="[functional.syn]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>23 Apr 2019</date>
<priority>0</priority>

<discussion>
<p>
<a href="https://wg21.link/p0318r1">P0318R1</a> was discussed in Batavia and the requested changes were made in D0318R2. 
In San Diego the R1 paper was voted into the WP, despite not having the requested changes. There were also changes to 
D0318R2 suggested on the reflector, which are incorporated below.
</p>

<note>2019-04-30 Priority to 0 and Status to Tentatively Ready after six positive votes on the reflector.</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4810">N4810</a>.</p>

<ol>
<li><p>Modify <sref ref="[functional.syn]"/>, header <tt>&lt;functional&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
template&lt;class T&gt; struct unwrap_reference;
<ins>template&lt;class T&gt; using unwrap_reference_t = typename unwrap_reference&lt;T&gt;::type;</ins>
template&lt;class T&gt; struct unwrap_ref_decay<del> : unwrap_reference&lt;decay_t&lt;T&gt;&gt; {}</del>;
template&lt;class T&gt; using unwrap_ref_decay_t = typename unwrap_ref_decay&lt;T&gt;::type;
</pre>
</blockquote>
</li>

<li><p>Modify <sref ref="[refwrap.unwrapref]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;class T&gt;
  struct unwrap_reference;
</pre>
<blockquote>
<p>
-1- If <tt>T</tt> is a specialization [&hellip;]
</p>
</blockquote>
<pre>
<ins>template&lt;class T&gt;
  struct unwrap_ref_decay;</ins>
</pre>
<blockquote>
<p>
<ins>-?- The member typedef <tt>type</tt> of <tt>unwrap_ref_decay&lt;T&gt;</tt> denotes the type 
<tt>unwrap_reference_t&lt;decay_t&lt;T&gt;&gt;</tt>.</ins>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>
</issue>
