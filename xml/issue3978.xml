<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3978" status="New">
<title>The "no effect" requirement for <tt>std::ignore</tt> is unimplementable for <tt>volatile</tt> bit-fields</title>
<section><sref ref="[tuple.creation]"/></section>
<submitter>Jiang An</submitter>
<date>19 Aug 2023</date>
<priority>4</priority>

<discussion>
<p>
<sref ref="[tuple.creation]"/>/5 currently says:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;"><p>
[&hellip;] When an argument in <tt>t</tt> is <tt>ignore</tt>, assigning any value to the corresponding tuple element has no effect.
</p></blockquote>
<p>
which is unimplementable for <tt>volatile</tt>-qualified bit-field glvalues.
<p/>
In order to passing such a value to the <tt>operator=</tt> function, a distinct object needs to be created and thus the read from 
the <tt>volatile</tt> glvalue, which is a side effect (<sref ref="[intro.execution]"/>/7), is unavoidable.
<p/>
<paper num="P2968R0"/> addresses the impossibility of assignment from <tt>void</tt> values, but doesn't talk about 
<tt>volatile</tt> bit-fields. Perhaps we should explicitly say that the program is ill-formed if a <tt>volatile</tt> bit-field 
value is assigned to <tt>std::ignore</tt> (which is implemented in libstdc++ and MSVC STL, but not in libc++).
</p>

<note>2023-11-03; Reflector poll</note>
<p>
Set priority to 4 after reflector poll.
"Specify it as code."
"<paper num="P2968"/> should fix this."
</p>

</discussion>

<resolution>
</resolution>

</issue>
