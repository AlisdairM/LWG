<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3608" status="New">
<title><tt>convertible_to</tt> and temporary-bound references</title>
<section><sref ref="[concept.convertible]"/></section>
<submitter>Tim Song</submitter>
<date>28 Sep 2021</date>
<priority>99</priority>

<discussion>
<p>
The semantic requirements of <tt>convertible_to</tt> express implicit
conversion by means of a function:
</p>
<blockquote><pre>
To test(FromR (&amp;f)()) {
  return f();
}
</pre></blockquote>
<p>
and it requires that <tt>static_cast&lt;To&gt;(f())</tt> be equal to <tt>test(f)</tt> for some
equality-preserving function <tt>f</tt>. However, when <tt>To</tt> is a reference type
but <tt>FromR</tt> is such that the conversion binds the reference to a temporary, the 
<tt>static_cast</tt> is valid but <tt>test(f)</tt> would produce a dangling reference.
<p/>
We should rephrase this requirement to just perform the implicit conversion in words. Using a 
function handles the convert-<tt>void</tt>-to-<tt>void</tt> case, but the semantic requirements 
wording already excluded that case anyway.
</p>
</discussion>

<resolution>
</resolution>

</issue>
