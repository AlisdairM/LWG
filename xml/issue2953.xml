<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2953" status="WP">
<title>LWG 2853 should apply to <tt>deque::erase</tt> too</title>
<section><sref ref="[deque.modifiers]"/></section>
<submitter>Tim Song</submitter>
<date>30 Mar 2017</date>
<priority>0</priority>

<discussion>
<p>
Most of the discussion of LWG <iref ref="2853"/> applies, mutatis mutandis, to
<tt>deque::erase</tt>. The relevant requirements table requires neither
<tt>Copy/MoveInsertable</tt> nor <tt>Copy/MoveConstructible</tt> for the erase
operations, so there's no way a copy/move constructor can safely be
called.
<p/>
And "assignment operator or move assignment operator" is just
"assignment operator", since "move assignment operator" is just a
species of "assignment operator".
</p>

<note>2017-07 Toronto Wed Issue Prioritization</note>
<p>Priority 0; Move to Ready</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4659">N4659</a>.
</p>

<ol>
<li><p>Change <sref ref="[deque.modifiers]"/> as indicated:</p>

<blockquote>
<pre>
iterator erase(const_iterator position);
iterator erase(const_iterator first, const_iterator last);
void pop_front();
void pop_back();
</pre>
<blockquote>
<p>
-4- <i>Effects:</i> [&hellip;]
<p/>
-5- <i>Complexity:</i> The number of calls to the destructor of <tt>T</tt> is the same as the number of elements erased,
but the number of calls to the assignment operator of <tt>T</tt> is no more than the lesser of the number of
elements before the erased elements and the number of elements after the erased elements.
<p/>
-6- <i>Throws:</i> Nothing unless an exception is thrown by the <del>copy constructor, move constructor,</del> assignment
operator<del>, or move assignment operator</del> of <tt>T</tt>.
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
