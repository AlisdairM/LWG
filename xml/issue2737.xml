<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2737" status="New">
<title>Consider relaxing object size restrictions for single-object allocation functions</title>
<section><sref ref="[new.delete.single]"/></section>
<submitter>Clark Nelson</submitter>
<date>21 Jun 2016</date>
<priority>99</priority>

<discussion>
<p>
It should be considered whether the description of the
single-object allocation functions should say "or smaller", like
the array allocation functions. For example, according to <sref ref="[new.delete.single]"/> p1 (emphasis mine):
</p>
<blockquote>
<p>
The allocation function (3.7.4.1) called by a new-expression (5.3.4) to allocate <tt>size</tt> bytes of
storage suitably aligned to represent any object <em>of that size</em>.
</p>
</blockquote>
<p>
In contrast to this, <sref ref="[new.delete.array]"/> p1 says (emphasis mine):
</p>
<blockquote>
<p>
The allocation function (3.7.4.1) called by the array form of a new-expression (5.3.4) to allocate
<tt>size</tt> bytes of storage suitably aligned to represent any array object <em>of that size or smaller</em>. 
(footnote: It is not the direct responsibility of <tt>operator new[](std::size_t)</tt> or <tt>operator delete[](void*)</tt> 
to note the repetition count or element size of the array. Those operations are performed elsewhere in the array 
<tt>new</tt> and <tt>delete</tt> expressions. The array <tt>new</tt> expression, may, however, increase the size 
argument to operator <tt>new[](std::size_t)</tt> to obtain space to store supplemental information.)
</p>
</blockquote>
</discussion>

<resolution>
</resolution>

</issue>
