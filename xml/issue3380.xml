<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3380" status="New">
<title><tt>common_type</tt> and comparison categories</title>
<section><sref ref="[meta.trans.other]"/></section>
<submitter>Casey Carter</submitter>
<date>23 Jan 2020</date>
<priority>99</priority>

<discussion>
<p>
There are two paragraphs in the the definition of <tt>common_type</tt>:
</p>
<ul>
<li><p>Otherwise, if both <tt>D1</tt> and <tt>D2</tt> denote comparison category types 
(<sref ref="[cmp.categories.pre]"/>), let <tt>C</tt> denote the common comparison type 
(<sref ref="[class.spaceship]"/>) of <tt>D1</tt> and <tt>D2</tt>.</p></li>
<li><p>Otherwise, if <tt>decay_t&lt;decltype(false ? declval&lt;D1&gt;() : declval&lt;D2&gt;())&gt;</tt> 
denotes a valid type, let <tt>C</tt> denote that type.</p></li>
</ul>
<p>
<a href="https://wg21.link/p1614r2">P1614R2</a> added the first bullet so that 
<tt>common_type_t&lt;strong_equality, T&gt;</tt> would be the same type as 
<tt>common_comparison_category_t&lt;strong_equality, T&gt;</tt>; other cases are correctly handled 
by the second (pre-existing) bullet. After application of <a href="https://wg21.link/p1959r0">P1959R0</a> 
in Belfast, <tt>std::strong_equality</tt> is no more. We can now strike the first bullet without 
changing the behavior of <tt>common_type</tt>.
</p>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4849">N4849</a>.</p>

<ol>
<li><p>Modify <sref ref="[meta.trans.other]"/> as indicated:</p>

<blockquote>
<p>
-3- Note A: For the <tt>common_type</tt> trait applied to a template parameter pack <tt>T</tt> of types, 
the member <tt>type</tt> shall be either defined or not present as follows:
</p>
<ol style="list-style-type: none">
<li><p>(3.1) &mdash; [&hellip;]</p></li>
<li><p>[&hellip;]</p></li>
<li><p>(3.3) &mdash; If <tt>sizeof...(T)</tt> is two, let the first and second types constituting <tt>T</tt> 
be denoted by <tt>T1</tt> and <tt>T2</tt>, respectively, and let <tt>D1</tt> and <tt>D2</tt> denote the 
same types as <tt>decay_t&lt;T1&gt;</tt> and <tt>decay_t&lt;T2&gt;</tt>, respectively.</p>
<ol style="list-style-type: none">
<li><p>(3.3.1) &mdash; If <tt>is_same_v&lt;T1, D1&gt;</tt> is <tt>false</tt> or <tt>is_same_v&lt;T2, D2&gt;</tt> 
is <tt>false</tt>, let <tt>C</tt> denote the same type, if any, as <tt>common_type_t&lt;D1, D2&gt;</tt>.</p></li>
<li><p>(3.3.2) &mdash; [<i>Note:</i> None of the following will apply if there is a specialization 
<tt>common_type&lt;D1, D2&gt;</tt>. &mdash; <i>end note</i>]</p></li>
<li><p><del>(3.3.3) &mdash; Otherwise, if both <tt>D1</tt> and <tt>D2</tt> denote comparison category types 
(<sref ref="[cmp.categories.pre]"/>), let <tt>C</tt> denote the common comparison type 
(<sref ref="[class.spaceship]"/>) of <tt>D1</tt> and <tt>D2</tt>.</del></p></li>
<li><p>(3.3.4) &mdash; Otherwise, if</p>
<blockquote><pre>
decay_t&lt;decltype(false ? declval&lt;D1&gt;() : declval&lt;D2&gt;())>
</pre></blockquote>
<p>
denotes a valid type, let <tt>C</tt> denote that type.</p></li>
<li><p>(3.3.5) &mdash; [&hellip;]</p></li>
</ol>
</li>
<li><p>[&hellip;]</p></li>
</ol>
</blockquote>
</li>
</ol>
</resolution>

</issue>
