<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2456" status="Open">
<title>Incorrect exception specifications for '<tt>swap</tt>' throughout library</title>
<section><sref ref="[utility]"/><sref ref="[pairs.pair]"/><sref ref="[tuple]"/>
<sref ref="[array]"/><sref ref="[queue]"/><sref ref="[priority.queue]"/>
<sref ref="[stack]"/></section>
<submitter>Richard Smith</submitter>
<date>14 Nov 2014</date>
<priority>1</priority>

<discussion>
<p>
We have this antipattern in various library classes:
</p>
<blockquote><pre>
void swap(priority_queue&amp; q) noexcept(
    noexcept(swap(c, q.c)) &amp;&amp; noexcept(swap(comp, q.comp)))
</pre></blockquote>
<p>
This doesn't work. The unqualified lookup for 'swap' finds the member named 'swap', and that suppresses ADL, 
so the exception specification is always ill-formed because you can't call the member 'swap' with two arguments.
<p/>
Relevant history on the core language side:
<p/>
This used to be ill-formed due to <sref ref="[basic.scope.class]"/> p1 rule 2: "A name <tt>N</tt> used in a class 
<tt>S</tt> shall refer to the same declaration in its context and when re-evaluated in the completed scope of <tt>S</tt>. 
No diagnostic is required for a violation of this rule."
<p/>
Core issue 1330 introduced delay-parsing for exception specifications. Due to the <sref ref="[basic.scope.class]"/> rules, 
this shouldn't have changed the behavior of any conforming programs. But it changes the behavior in the non-conforming 
case from "no diagnostic required" to "diagnostic required", so implementations that implement core issue 1330 are now 
required to diagnose the ill-formed declarations in the standard library.
<p/>
Suggested resolution:
<p/>
Add an <tt>is_nothrow_swappable</tt> trait, and use it throughout the library in place of these <tt>noexcept</tt> expressions.
</p>

<note>2015-02, Cologne</note>
<p>
No action for now; we intend to have papers for Lenexa.
</p>

<note>2015-05, Lenexa</note>
<p>
Move to Open.
<p/>
Daniel: A first paper (<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4426.html">N4426</a>) exists 
to suggest some ways of solving this issue.
</p>
</discussion>

<resolution>
</resolution>

</issue>
