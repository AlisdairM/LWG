<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3129" status="WP">
<title><tt>regex_token_iterator</tt> constructor uses wrong pointer arithmetic</title>
<section><sref ref="[re.tokiter.cnstr]"/></section>
<submitter>Tim Song</submitter>
<date>30 Jun 2018</date>
<priority>0</priority>

<discussion>
<p>
The specification of <tt>regex_token_iterator</tt> for the overload taking a 
<tt>const int (&amp;submatchs)[N]</tt> uses the range <tt>[&amp;submatches, &amp;submatches + N)</tt>.
This is obviously incorrect; we want to perform pointer arithmetic on a pointer to the first element
of that array, not a pointer to the whole array.
</p>

<note>2018-07-20 Status to Tentatively Ready after five positive votes on the reflector.</note>
<note>2018-11, Adopted in San Diego</note>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4750">N4750</a>.
</p>

<ol>
<li>
<p>
Change <sref ref="[re.tokiter.cnstr]"/> p3 as indicated:
</p>
<blockquote>
<pre>
regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                     const regex_type&amp; re,
                     int submatch = 0,
                     regex_constants::match_flag_type m = regex_constants::match_default);

regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                     const regex_type&amp; re,
                     const vector&lt;int&gt;&amp; submatches,
                     regex_constants::match_flag_type m = regex_constants::match_default);

regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                     const regex_type&amp; re,
                     initializer_list&lt;int&gt; submatches,
                     regex_constants::match_flag_type m = regex_constants::match_default);

template&lt;size_t N&gt;
  regex_token_iterator(BidirectionalIterator a, BidirectionalIterator b,
                       const regex_type&amp; re,
                       const int (&amp;submatches)[N],
                       regex_constants::match_flag_type m = regex_constants::match_default);
</pre>
<blockquote>
<p>
-2- <i>Requires:</i> [&hellip;]
<p/>
-3- <i>Effects:</i> The first constructor initializes the member <tt>subs</tt> to hold the single
value <tt>submatch</tt>. <del>The second constructor initializes the member <tt>subs</tt> to hold a
copy of the argument <tt>submatches</tt>.</del> The <ins>second,</ins> third and fourth constructors 
initialize the member <tt>subs</tt> to hold a copy of the sequence of integer values pointed to
by the iterator range <del><tt>[submatches.begin(), submatches.end())</tt> and <tt>[&amp;submatches,
&amp;submatches + N)</tt>, respectively</del><ins><tt>[begin(submatches), end(submatches))</tt></ins>.
<p/>
-4- [&hellip;]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
