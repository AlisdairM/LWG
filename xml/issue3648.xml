<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3648" status="C++23">
<title><tt>format</tt> should not print <tt>bool</tt> with <tt>'c'</tt></title>
<section><sref ref="[format.string.std]"/></section>
<submitter>Zhihao Yuan</submitter>
<date>30 Nov 2021</date>
<priority>99</priority>

<discussion>
<p>
<paper num="P1652R1"/> prints integral inputs as characters with <tt>'c'</tt> and preserves the
wording to treat <tt>bool</tt> as a one-byte unsigned integer; this accidentally asks the 
implementation to cast <tt>bool</tt> into a 1-bit character if a user asks for the <tt>'c'</tt> 
presentation type.
<p/>
Recent wording improvements made this implied behavior obvious.
</p>

<note>2021-12-04; Daniel comments</note>
<p>
This issue relates to LWG <iref ref="3644"/>.
</p>

<note>2022-01-30; Reflector poll</note>
<p>
Set status to Tentatively Ready after five votes in favour during reflector poll.
</p>

<note>2022-02-10 Approved at February 2022 virtual plenary. Status changed: Tentatively Ready &rarr; WP.</note>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4901"/>.
</p>

<ol>

<li><p>Modify <sref ref="[format.string.std]"/>, Table 67 [tab:format.type.bool], as indicated:</p>

<blockquote>
<table border="1">
<caption>Table 67 &mdash; Meaning of <i>type</i> options for <tt>bool</tt> [tab:format.type.bool]</caption>
<tr style="text-align:center">
<th>Type</th>
<th>Meaning</th>
</tr>
<tr>
<td>none, <tt>s</tt></td>
<td>Copies textual representation, either <tt>true</tt> or <tt>false</tt>, to the output.</td>
</tr>
<tr>
<td><tt>b</tt>, <tt>B</tt>, <del><tt>c</tt>,</del> <tt>d</tt>, <tt>o</tt>, <tt>x</tt>, <tt>X</tt></td>
<td>As specified in Table 65 [tab:format.type.int] for the value <tt>static_cast&lt;unsigned char&gt;(value)</tt>.</td>
</tr>
</table>
</blockquote>
</li>

</ol>
</resolution>

</issue>
