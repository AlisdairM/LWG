<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3124" status="New">
<title>[networking.ts] Unclear how <tt>execution_context</tt> is intended to store services</title>
<section><sref ref="[async.exec.ctx.globals]"/></section>
<submitter>Billy O'Neal III</submitter>
<date>23 Jun 2018</date>
<priority>3</priority>

<discussion>
<b>Addresses: networking.ts</b>
<p>
<tt>make_service</tt> and <tt>use_service</tt> create arbitrary numbers of type <tt>Service</tt>, a type provided 
by the user, similar to how locale's <tt>use_facet</tt> works. As a result there's no amount of storage that could 
be reserved inside <tt>execution_context</tt> to avoid allocating memory. However, there's no allocator support 
here, and <tt>make_service</tt> is forbidden from throwing allocation related exceptions by 
<a href="https://wg21.link/n4734">N4734</a> [async.exec.ctx.globals]/7.
<p/>
If the intent is for <tt>execution_context</tt> to allocate memory, are user overloads of <tt>operator new</tt> 
on type <tt>Service</tt> intended to be used?
</p>

<note>2018-07-20 Priority set to 3 after reflector discussion</note>
<note>Jonathan provides wording.</note>
</discussion>

<resolution>
<p>This wording is relative to the N4762.</p>

<ol>
<li><p>Modify <sref ref="[async.exec.ctx.globals]"/> p7:</p>
<p>
-7- <i>Throws:</i> <tt>service_already_exists</tt> if a corresponding service object of type <tt>Service::key_type</tt> is
already present in the set <ins>, <tt>bad_alloc</tt>, or an implementation-defined exception when a resource other than memory could
not be obtained. Any exception thrown by the constructor of <tt>Service</tt></ins>.
</p>
</li>
</ol>
</resolution>

</issue>
