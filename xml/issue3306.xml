<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3306" status="Tentatively Ready">
<title><tt>ranges::advance</tt> violates its preconditions</title>
<section><sref ref="[range.iter.op.advance]"/></section>
<submitter>Casey Carter</submitter>
<date>27 Oct 2019</date>
<priority>2</priority>

<discussion>
<p>Recall that "<tt>[i, s)</tt> denotes a range" for an iterator <tt>i</tt> and sentinel <tt>s</tt>
means that either <tt>i == s</tt> holds, or <tt>i</tt> is dereferenceable and <tt>[++i, s)</tt>
denotes a range (<sref ref="[iterator.requirements.general"/>).
</p><p>
The three-argument overload <tt>ranges::advance(i, n, bound)</tt> is specified in
<sref ref="[range.iter.op.advance]"/> paragraphs 5 through 7. Para 5 establishes a precondition that
<tt>[bound, i)</tt> denotes a range when <tt>n &lt; 0</tt> (both <tt>bound</tt> and <tt>i</tt> must
have the same type in this case). When <tt>sized_sentinel_for&lt;S, I&gt;</tt> holds and
<tt>n &lt; bound - i</tt>, para 6.1.1 says that <tt>ranges::advance(i, n, bound)</tt> is equivalent
to <tt>ranges::advance(i, bound)</tt>. Para 3, however, establishes a precondition for
<tt>ranges::advance(i, bound)</tt> that <tt>[i, bound)</tt> denotes a range. <tt>[bound, i)</tt> and
<tt>[i, bound)</tt> cannot both denote ranges unless <tt>i == bound</tt>, which is not the case for
all calls that reach 6.1.1.
</p><p>
The call in para 6.1.1 wants the effects of either 4.1 - which really has no preconditions - or 4.2,
which is well-defined if either <tt>[i, bound)</tt> or <tt>[bound, i)</tt> denotes a range. Para 3's
stronger precondition is actually only required by Para 4.3, which increments <tt>i</tt> blindly
looking for <tt>bound</tt>. The straight-forward fix here seems to be to relax para 3's precondition
to only apply when 4.3 will be reached.
</p>

<note>2019-11 Priority to 2 during Monday issue prioritization in Belfast</note>

<note>2020-08-21 Issue processing telecon: moved to Tentatively Ready</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4835">N4835</a>.</p>

<ol>
<li><p>Modify <sref ref="[range.iter.op.advance]"/> as indicated:</p>

<blockquote>
<pre>
template&lt;input_or_output_iterator I, sentinel_for&lt;I&gt; S&gt;
  constexpr void ranges::advance(I&amp; i, S bound);
</pre>
<p>
-3- <i>Expects:</i> <ins>Either <tt>assignable_from&lt;I&amp;, S&gt; ||
sized_sentinel_for&lt;S, I&gt;</tt> is modeled, or</ins> <tt>[i, bound)</tt> denotes a range.
</p><p>
-4- <i>Effects:</i>
</p><p>
(4.1) &mdash; If <tt>I</tt> and <tt>S</tt> model <tt>assignable_from&lt;I&amp;, S&gt;</tt>,
equivalent to <tt>i = std::move(bound)</tt>.
</p><p>
(4.2) &mdash; Otherwise, if <tt>S</tt> and <tt>I</tt> model <tt>sized_sentinel_for&lt;S, I&gt;</tt>,
equivalent to <tt>ranges::advance(i, bound - i)</tt>.
</p><p>
(4.3) &mdash; Otherwise, while <tt>bool(i != bound)</tt> is <tt>true</tt>, increments <tt>i</tt>.
</p>
</blockquote>
</li>
</ol>

</resolution>
</issue>
