<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3119" status="New">
<title>Program-definedness of closure types</title>
<section><sref ref="[defns.program.defined.spec]"/></section>
<submitter>Hubert Tong</submitter>
<date>9 Jun 2018</date>
<priority>99</priority>

<discussion>
<p>
The description of closure types in <sref ref="[expr.prim.lambda.closure]"/> says:
</p>
<blockquote>
<p>
An implementation may define the closure type differently [&hellip;]
</p>
</blockquote>
<p>
The proposed resolution to LWG <iref ref="2139"/> defines a "program-defined type" to be a
</p>
<blockquote>
<p>
class type or enumeration type that is not part of the C++ standard library and not defined by the implementation, 
or an instantiation of a program-defined specialization
</p>
</blockquote>
<p>
I am not sure that the intent of whether closure types are or are not program-defined types is clearly 
conveyed by the wording.
</p>
</discussion>

<resolution>
</resolution>

</issue>
