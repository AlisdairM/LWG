<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3874" status="NAD">
<title>Rename <tt>__cpp_lib_ranges_to_container</tt> to <tt>__cpp_lib_ranges_to</tt></title>
<section><sref ref="[version.syn]"/></section>
<submitter>Hewill Kang</submitter>
<date>5 Feb 2023</date>
<priority>99</priority>

<discussion>
<p>
LWG <iref ref="3785"/> enables <tt>ranges::to</tt> to construct a non-range object from a range, 
confirming that this is the intended part of the original design.
<p/>
However, the feature test macro for <tt>ranges::to</tt> is still named <tt>__cpp_lib_ranges_to_container</tt>, 
where the "container" part seems confusing to users.
</p>
<note>Issaquah 2023-02-08 Status changed: New &rarr; NAD.</note>
<p>No consensus to change anything. The macro name is just a unique identifier,
it doesn't have to be a precise description of the feature.</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4928"/>.
</p>

<ol>
<li>
<p>Modify <sref ref="[version.syn]"/>, header <tt>&lt;version&gt;</tt> synopsis, as indicated:</p>

<blockquote>
<pre>
[&hellip;]
#define __cpp_lib_ranges_stride                     202207L <i>// also in</i> &lt;ranges&gt;
#define __cpp_lib_ranges_to<del>_container</del>               202202L <i>// also in</i> &lt;ranges&gt;
#define __cpp_lib_ranges_zip                        202110L <i>// also in</i> &lt;ranges&gt;, &lt;tuple&gt;, &lt;utility&gt;
[&hellip;]
</pre>
</blockquote>
</li>
</ol>
</resolution>

</issue>
