<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2825" status="LEWG">
<title>LWG 2756 breaks class template argument deduction for <tt>optional</tt></title>
<section><sref ref="[optional.optional]"/></section>
<submitter>Richard Smith</submitter>
<date>24 Nov 2016</date>
<priority>2</priority>

<discussion>
<p>
LWG <iref ref="2756"/> applies these changes:
</p>
<blockquote><pre>
<del>constexpr optional(const T&amp;);
constexpr optional(T&amp;&amp;);</del>
template &lt;class... Args&gt; constexpr explicit optional(in_place_t, Args&amp;&amp;...);
template &lt;class U, class... Args&gt;
  constexpr explicit optional(in_place_t, initializer_list&lt;U&gt;, Args&amp;&amp;...);
<ins>template &lt;class U = T&gt; <i>EXPLICIT</i> constexpr optional(U&amp;&amp;);
template &lt;class U&gt; <i>EXPLICIT</i> optional(const optional&lt;U&gt;&amp;);
template &lt;class U&gt; <i>EXPLICIT</i> optional(optional&lt;U&gt;&amp;&amp;);</ins>
</pre></blockquote> 
<p>
These break the ability for <tt>optional</tt> to perform class template argument deduction, as there 
is now no way to map from <tt>optional</tt>'s argument to the template parameter <tt>T</tt>.
</p>

<note>2017-01-27 Telecon</note>
<p>Priority 2</p>

<note>2017-01-30  Ville comments:</note>
<p>Seems like the problem is resolved by a simple deduction guide:</p>
<pre>template &lt;class T&gt; optional(T) -&gt; optional&lt;T&gt;;</pre>
<p>The paper <a href="https://wg21.link/p0433r0">p0433r0</a> seems to suggest a different guide,</p>
<pre>template&lt;class T&gt; optional(T&amp;&amp; t) -&gt; optional&lt;remove_reference_t&lt;T&gt;&gt;;</pre>
<p>but I don't think the paper is up to speed with LWG <iref ref="2756"/>. There's no reason
to use such an universal reference in the guide and <tt>remove_reference</tt> in its
target, just guide with <tt>T</tt>, with the target <tt>optional&lt;T&gt;</tt>, <tt>optional</tt>'s constructors
do the right thing once the type has been deduced.
</p>
</discussion>

<resolution>
</resolution>

</issue>
