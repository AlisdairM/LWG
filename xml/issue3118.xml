<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3118" status="Voting">
<title><tt>fpos</tt> equality comparison unspecified</title>
<section><sref ref="[fpos.operations]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>4 Jun 2018</date>
<priority>4</priority>

<discussion>
<p>
The <tt>fpos</tt> requirements do not give any idea what is compared by <tt>operator==</tt> (even after Daniel's 
<a href="https://wg21.link/p0759r1">P0759R1</a> paper). I'd like something to make it clear that <tt>return true;</tt> 
is not a valid implementation of <tt>operator==(const fpos&lt;T&gt;&amp;, const fpos&lt;T&gt;&amp;)</tt>. Maybe in the 
<tt>P(o)</tt> row state that "<tt>p == P(o)</tt>" and "<tt>p != P(o + 1)</tt>", i.e. two <tt>fpos</tt> objects 
constructed from the same <tt>streamoff</tt> values are equal, and two <tt>fpos</tt> objects constructed from two 
different <tt>streamoff</tt> values are not equal.
</p>

<note>2018-06-23 after reflector discussion</note>
<p>Priority set to 4</p>

<note>2022-05-01; Daniel comments and provides wording</note>
<p>
The proposed wording does intentionally not use a form involving addition or subtraction to prevent the need
for extra wording that ensures that this computed value is well-defined. According to <sref ref="[stream.types]"/>,
<tt>streamoff</tt> is a signed basic integral type, so we know what equality means for such values.
</p>

<p><strong>Previous resolution [SUPERSEDED]:</strong></p>
<blockquote class="note">
<p>
This wording is relative to <paper num="N4910"/>.
</p>

<li><p>Modify in <sref ref="[fpos.operations]"/> as indicated:</p>

<blockquote class="note">
<p>
[<i>Drafting note:</i> The return type specification of <tt>operator==</tt> should be resolved in
sync with <a href="https://isocpp.org/files/papers/D2167R2.html">D2167R2</a>; see also LWG
<iref ref="2114"/>.]
</p>
</blockquote>

<blockquote>

<ol style="list-style-type:none">
<li><p>(1.1) &mdash; [&hellip;]</p></li>
<li><p>[&hellip;]</p></li>
<li><p>(1.5) &mdash; <tt>o</tt> <ins>and <tt>o2</tt></ins> refer<del>s</del> to <del>a</del> value<ins>s</ins> 
of type <tt>streamoff</tt> or <tt>const streamoff</tt>.</p></li>
</ol>
<table border="1">
<caption>Table 119: Position type requirements [tab:fpos.operations]</caption>

<tr>
<th>Expression</th>
<th>Return type</th>
<th>Operational<br/>semantics</th>
<th>Assertion/note<br/>pre-/post-condition</th>
</tr>

<tr>
<td colspan="4" style="text-align:center;">&hellip;</td> 
</tr>

<tr>
<td><tt>P p(o);<br/>
P p = o;</tt></td>
<td></td>
<td></td>
<td><i>Effects:</i> Value-initializes the<br/>
state object.<br/>
<i>Postconditions:</i> <tt>p == P(o)</tt> <ins>is <tt>true</tt>.</ins></td>
</tr>

<tr>
<td colspan="4" style="text-align:center;">&hellip;</td> 
</tr>

<tr>
<td><tt>O(p)</tt></td>
<td><tt>streamoff</tt></td>
<td>converts to <tt>offset</tt></td>
<td><tt>P(O(p)) == p</tt></td>
</tr>

<tr>
<td><ins><tt>p == q</tt></ins></td>
<td><ins>convertible to <tt>bool</tt></ins></td>
<td></td>
<td><ins><i>Remarks:</i> For any two values <tt>o</tt> and <tt>o2</tt>, if<br/> 
<tt>p</tt> is obtained from <tt>o</tt> converted to <tt>P</tt> or from a copy<br/> 
of such <tt>P</tt> value and if <tt>q</tt> is obtained from <tt>o2</tt><br/> 
converted to <tt>P</tt> or from a copy of such <tt>P</tt> value, then<br/> 
<tt>bool(p == q)</tt> is <tt>true</tt> only if <tt>o == o2</tt> is <tt>true</tt>.</ins></td>
</tr>

<tr>
<td><tt>p != q</tt></td>
<td>convertible to <tt>bool</tt></td>
<td><tt>!(p == q)</tt></td>
<td></td>
</tr>

<tr>
<td colspan="4" style="text-align:center;">&hellip;</td> 
</tr>

</table>
</blockquote>
</li>
</blockquote>

<note>2022-11-02; Daniel  comments and improves wording</note>
<p>
<a href="https://wiki.edg.com/bin/view/Wg21telecons2022/P2167-20220921">LWG discussion</a> of <paper num="P2167R2"/>
has shown preference to require that the equality operations of <tt>fpos</tt> should be specified to have type
<tt>bool</tt> instead of being specified as "convertible to <tt>bool</tt>". This has been reflected in the most recent
paper revision <a href="https://isocpp.org/files/papers/P2167R3.html">P2167R3</a>. The below wording changes
follow that direction to reduce the wording mismatch to a minimum.
</p>

<note>2022-11-02; LWG telecon</note>
<p>Moved to Ready. For: 6, Against: 0, Neutral: 0</p>

</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4917"/>.
</p>

<li><p>Modify in <sref ref="[fpos.operations]"/> as indicated:</p>

<blockquote>

<ol style="list-style-type:none">
<li><p>(1.1) &mdash; [&hellip;]</p></li>
<li><p>[&hellip;]</p></li>
<li><p>(1.5) &mdash; <tt>o</tt> <ins>and <tt>o2</tt></ins> refer<del>s</del> to <del>a</del> value<ins>s</ins> 
of type <tt>streamoff</tt> or <tt>const streamoff</tt>.</p></li>
</ol>
<table border="1">
<caption>Table 124: Position type requirements [tab:fpos.operations]</caption>

<tr>
<th>Expression</th>
<th>Return type</th>
<th>Operational<br/>semantics</th>
<th>Assertion/note<br/>pre-/post-condition</th>
</tr>

<tr>
<td colspan="4" style="text-align:center;">&hellip;</td> 
</tr>

<tr>
<td><tt>P p(o);<br/>
P p = o;</tt></td>
<td></td>
<td></td>
<td><i>Effects:</i> Value-initializes the<br/>
state object.<br/>
<i>Postconditions:</i> <tt>p == P(o)</tt> <ins>is <tt>true</tt>.</ins></td>
</tr>

<tr>
<td colspan="4" style="text-align:center;">&hellip;</td> 
</tr>

<tr>
<td><tt>O(p)</tt></td>
<td><tt>streamoff</tt></td>
<td>converts to <tt>offset</tt></td>
<td><tt>P(O(p)) == p</tt></td>
</tr>

<tr>
<td><ins><tt>p == q</tt></ins></td>
<td><ins><tt>bool</tt></ins></td>
<td></td>
<td><ins><i>Remarks:</i> For any two values <tt>o</tt> and <tt>o2</tt>, if<br/> 
<tt>p</tt> is obtained from <tt>o</tt> converted to <tt>P</tt> or from a copy<br/> 
of such <tt>P</tt> value and if <tt>q</tt> is obtained from <tt>o2</tt><br/> 
converted to <tt>P</tt> or from a copy of such <tt>P</tt> value, then<br/> 
<tt>p == q</tt> is <tt>true</tt> only if <tt>o == o2</tt> is <tt>true</tt>.</ins></td>
</tr>

<tr>
<td><tt>p != q</tt></td>
<td><del>convertible to</del> <tt>bool</tt></td>
<td><tt>!(p == q)</tt></td>
<td></td>
</tr>

<tr>
<td colspan="4" style="text-align:center;">&hellip;</td> 
</tr>

</table>
</blockquote>
</li>
</resolution>

</issue>
