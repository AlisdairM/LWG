<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4152" status="New">
<title>The primary template of <tt>std::char_traits</tt> is totally underspecified</title>
<section><sref ref="[char.traits.require]"/></section>
<submitter>Jiang An</submitter>
<date>08 Sep 2024</date>
<priority>99</priority>

<discussion>
<p>
Currently, only explicit specializations of <tt>std::char_traits</tt> are specified in the standard. 
Nothing is specified for the primary template except that it's not marked "not defined".
<p/>
Given some implementations provide the definition of the primary template (perhaps as an extension), 
it might be better to explicitly say that instantiation of the primary template has unspecified effect.
Also, it seems outdated to say "explicit specializations" as partial specializations are possible 
since C++20.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N4988"/>.
</p>

<ol>
<li><p>Modify <sref ref="[char.traits.require]"/> as indicated:</p>

<blockquote>
<p>
-2- The class template
</p>
<blockquote><pre>
template&lt;class charT&gt; struct char_traits;
</pre></blockquote>
<p>
is provided in the header <tt>&lt;string&gt;</tt> as a basis for explicit <ins>and partial</ins> 
specializations. <ins>The effect of instantiating the primary template of <tt>char_traits</tt> is unspecified 
and possibly makes the program ill-formed.</ins>
</p>
</blockquote>
</li>

</ol>

</resolution>

</issue>
