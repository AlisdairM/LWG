<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4193" status="New">
<title>&sect;[time.zone.db] the specification uses the undefined term "thread-safe"</title>
<section><sref ref="[time.zone.db]"/></section>
<submitter>S. B. Tam</submitter>
<date>16 Jan 2025</date>
<priority>3</priority>

<discussion>
<p>
<paper num="N5001"/> <sref ref="[time.zone.db.list]"/> p3:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;">
<p>
<i>Synchronization</i>: This operation is thread-safe with respect to `reload_tzdb()`.
</p>
</blockquote>
<p>
<paper num="N5001"/> <sref ref="[time.zone.db.access]"/> p2:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;">
<p>
<i>Synchronization</i>: It is safe to call this function from multiple threads at one time.
</p>
</blockquote>
<p>
<paper num="N5001"/> <sref ref="[time.zone.db.remote]"/> p3:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;">
<p>
<i>Synchronization</i>: This function is thread-safe with respect to `get_tzdb_list().front()` and 
`get_tzdb_list().erase_after()`.
</p>
</blockquote>
<p>
The standard does not define what "thread-safe" means, which makes the meaning of these sentences unclear. 
Does it mean that "concurrent calls do not introduce data races", or does it additionally require a single 
total order on these operations? In either case, it should be specified clearly.
</p>


<note>2025-02-07; Reflector poll</note>
<p>
Set priority to 3 after reflector poll.
</p>
<p>
"We're missing a guarantee that `reload_tzdb()` strongly happens before
a call to `get_tzdb_list().front()` that retrieves a newly added element.
Otherwise accessing any `time_zone` obtained from `get_tzdb_list().front()`
could race with the call to `reload_tzdb()` that writes the front of the list."
</p>

</discussion>

<resolution>
</resolution>

</issue>
