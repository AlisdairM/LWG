<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3226" status="WP">
<title><tt>zoned_time</tt> constructor from <tt>string_view</tt> should accept
<tt>zoned_time&lt;Duration2, TimeZonePtr2&gt;</tt></title>
<section><sref ref="[time.zone.zonedtime.ctor]"/></section>
<submitter>Tomasz Kami&nacute;ski</submitter>
<date>23 Jun 2019</date>
<priority>2</priority>

<discussion>
<p>
<code>zoned_time</code> constructors with <code>string_view</code> and
another <code>zoned_time</code> are not accepting <code>zoned_time</code>
instances that use a different time zone representation (<code>TimeZonePtr</code> parameter):
</p>
<blockquote><pre>
zoned_time(string_view name, const zoned_time&lt;Duration&gt;&amp; zt);
zoned_time(string_view name, const zoned_time&lt;Duration&gt;&amp; zt, choose);
</pre></blockquote>
<p>
This makes them inconsistent with the constructors from <code>TimeZonePtr</code> 
and <code>zoned_time</code>, that they delegate to: 
</p>
<blockquote><pre>
template&lt;class Duration2, class TimeZonePtr2&gt;
  zoned_time(TimeZonePtr z, const zoned_time&lt;Duration2, TimeZonePtr2&gt;&amp; zt);
template&lt;class Duration2, class TimeZonePtr2&gt;
  zoned_time(TimeZonePtr z, const zoned_time&lt;Duration2, TimeZonePtr2&gt;&amp; zt, choose);
</pre></blockquote>
<p>
Furthermore it forces the creation of a temporary <code>zoned_time</code> object in 
case when the source uses the same <code>TimeZonePtr</code>, but different <code>Duration</code>.
</p>

<strong>Previous resolution [SUPERSEDED]:</strong>
<blockquote class="note">
<p>This wording is relative to <a href="https://wg21.link/n4820">N4820</a>.</p>

<ol>
<li><p>Modify <sref ref="[time.zone.zonedtime.overview]"/>, class template <tt>zoned_time</tt> synopsis, 
as indicated:</p>

<blockquote>
<pre>
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; zt);
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; zt, choose);</pre>
</blockquote>
</li>

<li><p>Modify <sref ref="[time.zone.zonedtime.ctor]"/> as indicated:</p>

<blockquote>
<pre>
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; y);
</pre>
<blockquote>
<p>
-32- <i>Remarks:</i> This constructor does not participate in overload resolution unless 
<tt>zoned_time</tt> is constructible from the return type of <tt>traits::locate_zone(name)</tt> 
and <tt>zoned_time<ins>&lt;Duration2, TimeZonePtr2&gt;</ins></tt>.
<p/>
-33- <i>Effects:</i> Equivalent to construction with <tt>{traits::locate_zone(name), y}</tt>.
</p>
</blockquote>
<pre>
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; y, choose c););
</pre>
<blockquote>
<p>
-34- <i>Remarks:</i> This constructor does not participate in overload resolution unless 
<tt>zoned_time</tt> is constructible from the return type of <tt>traits::locate_zone(name)</tt>, 
<tt>zoned_time<ins>&lt;Duration2, TimeZonePtr2&gt;</ins></tt>, and <tt>choose</tt>.
<p/>
-35- <i>Effects:</i> Equivalent to construction with <tt>{traits::locate_zone(name), y, c}</tt>.
<p/>
-36- [<i>Note:</i> The <tt>choose</tt> parameter has no effect. &mdash; <i>end note</i>]
</p>
</blockquote>
</blockquote>
</li>
</ol>

</blockquote>

<note>2020-02-13, Prague</note>
<p>
During LWG discussions it was suggested to rebase the wording to reduce the chances for confusion.
</p>
<note>2020-02 Status to Immediate on Thursday morning in Prague.</note>
</discussion>

<resolution>
<p>This wording is relative to <a href="https://wg21.link/n4849">N4849</a>.</p>

<ol>
<li><p>Modify <sref ref="[time.zone.zonedtime.overview]"/>, class template <tt>zoned_time</tt> synopsis, 
as indicated:</p>

<blockquote>
<pre>
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; zt);
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; zt, choose);</pre>
</blockquote>
</li>

<li><p>Modify <sref ref="[time.zone.zonedtime.ctor]"/> as indicated:</p>

<blockquote>
<pre>
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; y);
</pre>
<blockquote>
<p>
-32- <i>Constraints:</i> <tt>zoned_time</tt> is constructible from the return type of <tt>traits::locate_zone(name)</tt> 
and <tt>zoned_time<ins>&lt;Duration2, TimeZonePtr2&gt;</ins></tt>.
<p/>
-33- <i>Effects:</i> Equivalent to construction with <tt>{traits::locate_zone(name), y}</tt>.
</p>
</blockquote>
<pre>
<ins>template&lt;class Duration2, class TimeZonePtr2&gt;</ins>
zoned_time(string_view name, const zoned_time&lt;Duration<ins>2, TimeZonePtr2</ins>&gt;&amp; y, choose c););
</pre>
<blockquote>
<p>
-34- <i>Constraints:</i> <tt>zoned_time</tt> is constructible from the return type of <tt>traits::locate_zone(name)</tt>, 
<tt>zoned_time<ins>&lt;Duration2, TimeZonePtr2&gt;</ins></tt>, and <tt>choose</tt>.
<p/>
-35- <i>Effects:</i> Equivalent to construction with <tt>{traits::locate_zone(name), y, c}</tt>.
<p/>
-36- [<i>Note:</i> The <tt>choose</tt> parameter has no effect. &mdash; <i>end note</i>]
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>
</issue>
