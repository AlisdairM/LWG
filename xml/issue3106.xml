<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3106" status="Tentatively NAD">
<title><tt>nothrow</tt> should be <tt>inline constexpr</tt> rather that <tt>extern const</tt></title>
<section><sref ref="[new.syn]"/></section>
<submitter>Antony Polukhin</submitter>
<date>25 Apr 2018</date>
<priority>2</priority>

<discussion>
<p>
<tt>std::nothrow</tt> in [new.syn] is declared as '<tt>extern const nothrow_t nothrow;</tt>'. Unfortunately 
this declaration requires linking with Standard Library (which does not work well on GCC with <tt>-nostdlib</tt> flag).
Moreover the declaration differs from other Standard Library tags that are '<tt>inline constexpr</tt>'.
</p>

<note>2018-06-18 after reflector discussion</note>
<p>Priority set to 2</p>

<note>2018-08-23 Batavia Issues processing</note>
<p>Status to Tentatively NAD - if we had a status 'Wont Fix' that would be correct.</p>
<p>This is an ABI break for most implementations, and people can define their 
own variable of type <tt>std::nothrow_t</tt> if they want a constexpr one.</p>
</discussion>

<resolution>
<p>
This wording is relative to <a href="http://wg21.link/n4741">N4741</a>.
</p>

<ol>
<li>
<p>Edit <sref ref="[new.syn]"/> as indicated:</p>
<blockquote>
<pre>
struct nothrow_t { explicit nothrow_t() = default; };
<del>extern const</del><ins>inline constexpr</ins> nothrow_t nothrow;
</pre>
</blockquote>
</li>
</ol>
</resolution>

</issue>
