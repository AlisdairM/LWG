<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3416" status="New">
<title>The <i>Throws:</i> specification of <tt>std::any</tt> does not mention allocation</title>
<section><sref ref="[any.class]"/></section>
<submitter>Thomas K&ouml;ppe</submitter>
<date>04 Mar 2020</date>
<priority>3</priority>

<discussion>
<p>
Several of the function specifications in <sref ref="[any.class]"/> have <i>Throws:</i> elements, 
but those only mention "exceptions thrown by a constructor". It seems necessary for <tt>std::any</tt> 
to perform dynamic allocation in general, and so in general there should be a possibility of an 
exception raised by such dynamic allocation. (This may come from a user-provided 
<tt>T::operator new</tt>, as far as I can tell.)
<p/>
We should revise the specifications to add relevant sources of exceptions.
<p/>
The functions that should probably mention allocations are:
<p/>
<ul>
<li><p><tt>any(const any&amp; other)</tt></p></li>
<li><p><tt>template&lt;class T&gt; any(T&amp;&amp; value)</tt></p></li>
<li><p>both <tt>any(in_place_t&lt;T&gt;, &hellip;)</tt> overloads</p></li>
<li><p><tt>any&amp; operator=(const any&amp; rhs)</tt></p></li>
<li><p><tt>template&lt;class T&gt; any&amp; operator=(T&amp;&amp; rhs)</tt></p></li>
<li><p>all <tt>emplace</tt> overloads</p></li>
</ul>
<p/>
Proposed wording: None yet. Maybe insert something like "thrown by unspecified, internal bookkeeping logic" 
into each <i>Throws:</i> element, but perhaps something more specific is necessary.
</p>

<note>2020-04-04 Issue Prioritization</note>
<p>Priority to 3 after reflector discussion.</p>
</discussion>

<resolution>
</resolution>
</issue>
