<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3436" status="New">
<title><tt>std::construct_at</tt> should support arrays</title>
<section><sref ref="[specialized.construct]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>29 Apr 2020</date>
<priority>99</priority>

<discussion>
<p>
<tt>std::construct_at</tt> is ill-formed for array types, because the type of the <tt>new</tt>-expression is <tt>T</tt> 
not <tt>T*</tt> so it cannot be converted to the return type.
<p/>
In C++17 <tt>allocator_traits::construct</tt> did work for arrays, because it returns <tt>void</tt> so there is no 
ill-formed conversion. On the other hand, in C++17 <tt>allocator_traits::destroy</tt> didn't work for arrays, 
because <tt>p-&gt;~T()</tt> isn't valid.
<p/>
In C++20 <tt>allocator_traits::destroy</tt> does work, because <tt>std::destroy_at</tt> treats arrays specially, 
but <tt>allocator_traits::construct</tt> no longer works because it uses <tt>std::construct_at</tt>.
<p/>
It seems unnecessary and/or confusing to remove support for arrays in <tt>construct</tt> when we're adding it in <tt>destroy</tt>.
<p/>
I suggest that <tt>std::construct_at</tt> should also handle arrays. It might be reasonable to restrict that 
support to the case where <tt>sizeof...(Args) == 0</tt>, if supporting parenthesized aggregate-initialization 
is not desirable in <tt>std::construct_at</tt>.
</p>
</discussion>

<resolution>
</resolution>
</issue>
